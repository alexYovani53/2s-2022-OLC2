Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOBLEPT

Grammar

Rule 0     S' -> init
Rule 1     init -> clases_funciones
Rule 2     clases_funciones -> clases_funciones clase_funcion
Rule 3     clases_funciones -> clase_funcion
Rule 4     clase_funcion -> clase
Rule 5     clase_funcion -> funcion
Rule 6     clase -> CLASS ID bloqueClase
Rule 7     bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER
Rule 8     bloqueClase -> LLAVEIZQ LLAVEDER
Rule 9     funcion -> tipo_funcion ID PIZQ PDER bloque
Rule 10    funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque
Rule 11    lista_parametros -> lista_parametros COMA parametro
Rule 12    lista_parametros -> parametro
Rule 13    parametro -> tipo_dato ID
Rule 14    bloque -> LLAVEIZQ LLAVEDER
Rule 15    bloque -> LLAVEIZQ instrucciones LLAVEDER
Rule 16    instrs_clase -> instrs_clase instr
Rule 17    instrs_clase -> instr
Rule 18    instr -> declaracion PTCOMA
Rule 19    instrucciones -> instrucciones instruccion
Rule 20    instrucciones -> instruccion
Rule 21    instruccion -> print_inst PTCOMA
Rule 22    instruccion -> declaracion PTCOMA
Rule 23    instruccion -> declaracion_objeto PTCOMA
Rule 24    instruccion -> declaracion_arreglo PTCOMA
Rule 25    instruccion -> llamada PTCOMA
Rule 26    instruccion -> return_inst PTCOMA
Rule 27    instruccion -> if_instr
Rule 28    declaracion -> tipo_dato ID IGUAL expresion
Rule 29    declaracion -> tipo_dato ID
Rule 30    declaracion_arreglo -> tipo_dato niveles ID IGUAL expresion
Rule 31    niveles -> niveles nivel
Rule 32    niveles -> nivel
Rule 33    nivel -> CORIZQ CORDER
Rule 34    declaracion_objeto -> ID ID IGUAL expresion
Rule 35    print_inst -> PRINT PIZQ expresion PDER
Rule 36    llamada -> ID PIZQ PDER
Rule 37    llamada -> ID PIZQ lista_expresiones PDER
Rule 38    return_inst -> RETURN_W
Rule 39    return_inst -> RETURN_W expresion
Rule 40    if_instr -> IF_W PIZQ expresion PDER bloque
Rule 41    if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque
Rule 42    if_instr -> IF_W PIZQ expresion PDER bloque listaelseif
Rule 43    if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
Rule 44    listaelseif -> listaelseif else_if
Rule 45    listaelseif -> else_if
Rule 46    else_if -> ELSE_W IF_W PIZQ expresion PDER bloque
Rule 47    lista_expresiones -> lista_expresiones COMA expresion
Rule 48    lista_expresiones -> expresion
Rule 49    expresion -> expresion OR expresion
Rule 50    expresion -> expresion AND expresion
Rule 51    expresion -> NOT expresion
Rule 52    expresion -> expresion MENOR expresion
Rule 53    expresion -> expresion MAYOR expresion
Rule 54    expresion -> expresion MAYORIGUAL expresion
Rule 55    expresion -> expresion MENORIGUAL expresion
Rule 56    expresion -> expresion DIFERENTE expresion
Rule 57    expresion -> expresion IGUALIGUAL expresion
Rule 58    expresion -> MENOS expresion
Rule 59    expresion -> expresion MAS expresion
Rule 60    expresion -> expresion MENOS expresion
Rule 61    expresion -> expresion MULTIPLICACION expresion
Rule 62    expresion -> expresion DIVISION expresion
Rule 63    expresion -> PIZQ expresion PDER
Rule 64    expresion -> ENTERO
Rule 65    expresion -> DECIMAL
Rule 66    expresion -> ID
Rule 67    expresion -> CADENA
Rule 68    expresion -> TRUE
Rule 69    expresion -> FALSE
Rule 70    expresion -> llamada
Rule 71    expresion -> acceso_objeto_expresion
Rule 72    expresion -> acceso_array_expresion
Rule 73    expresion -> instancia_objeto
Rule 74    expresion -> array_data
Rule 75    expresion -> array_instancia
Rule 76    expresion -> if_instr
Rule 77    array_data -> CORIZQ lista_expresiones CORDER
Rule 78    array_instancia -> NEW tipo_dato dimensiones
Rule 79    dimensiones -> dimensiones dimension
Rule 80    dimensiones -> dimension
Rule 81    dimension -> CORIZQ expresion CORDER
Rule 82    instancia_objeto -> NEW ID PIZQ PDER
Rule 83    instancia_objeto -> NEW ID PIZQ lista_expresiones PDER
Rule 84    acceso_objeto_expresion -> acceso_objeto
Rule 85    acceso_objeto -> acceso_objeto PUNTO expresion
Rule 86    acceso_objeto -> expresion
Rule 87    acceso_array_expresion -> ID dimensiones
Rule 88    tipo_funcion -> INT
Rule 89    tipo_funcion -> STRING_TYPE
Rule 90    tipo_funcion -> BOOLEAN
Rule 91    tipo_funcion -> VOID
Rule 92    tipo_funcion -> FLOAT
Rule 93    tipo_dato -> INT
Rule 94    tipo_dato -> STRING_TYPE
Rule 95    tipo_dato -> BOOLEAN
Rule 96    tipo_dato -> FLOAT

Terminals, with rules where they appear

AND                  : 50
BOOLEAN              : 90 95
CADENA               : 67
CLASS                : 6
COMA                 : 11 47
CORDER               : 33 77 81
CORIZQ               : 33 77 81
DECIMAL              : 65
DIFERENTE            : 56
DIVISION             : 62
DOBLEPT              : 
ELSE_W               : 41 43 46
ENTERO               : 64
FALSE                : 69
FLOAT                : 92 96
ID                   : 6 9 10 13 28 29 30 34 34 36 37 66 82 83 87
IF_W                 : 40 41 42 43 46
IGUAL                : 28 30 34
IGUALIGUAL           : 57
INT                  : 88 93
LLAVEDER             : 7 8 14 15
LLAVEIZQ             : 7 8 14 15
MAS                  : 59
MAYOR                : 53
MAYORIGUAL           : 54
MENOR                : 52
MENORIGUAL           : 55
MENOS                : 58 60
MULTIPLICACION       : 61
NEW                  : 78 82 83
NOT                  : 51
OR                   : 49
PDER                 : 9 10 35 36 37 40 41 42 43 46 63 82 83
PIZQ                 : 9 10 35 36 37 40 41 42 43 46 63 82 83
PRINT                : 35
PTCOMA               : 18 21 22 23 24 25 26
PUNTO                : 85
RETURN_W             : 38 39
STRING_TYPE          : 89 94
TRUE                 : 68
VOID                 : 91
error                : 

Nonterminals, with rules where they appear

acceso_array_expresion : 72
acceso_objeto        : 84 85
acceso_objeto_expresion : 71
array_data           : 74
array_instancia      : 75
bloque               : 9 10 40 41 41 42 43 43 46
bloqueClase          : 6
clase                : 4
clase_funcion        : 2 3
clases_funciones     : 1 2
declaracion          : 18 22
declaracion_arreglo  : 24
declaracion_objeto   : 23
dimension            : 79 80
dimensiones          : 78 79 87
else_if              : 44 45
expresion            : 28 30 34 35 39 40 41 42 43 46 47 48 49 49 50 50 51 52 52 53 53 54 54 55 55 56 56 57 57 58 59 59 60 60 61 61 62 62 63 81 85 86
funcion              : 5
if_instr             : 27 76
init                 : 0
instancia_objeto     : 73
instr                : 16 17
instrs_clase         : 7 16
instruccion          : 19 20
instrucciones        : 15 19
lista_expresiones    : 37 47 77 83
lista_parametros     : 10 11
listaelseif          : 42 43 44
llamada              : 25 70
nivel                : 31 32
niveles              : 30 31
parametro            : 11 12
print_inst           : 21
return_inst          : 26
tipo_dato            : 13 28 29 30 78
tipo_funcion         : 9 10

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . clases_funciones
    (2) clases_funciones -> . clases_funciones clase_funcion
    (3) clases_funciones -> . clase_funcion
    (4) clase_funcion -> . clase
    (5) clase_funcion -> . funcion
    (6) clase -> . CLASS ID bloqueClase
    (9) funcion -> . tipo_funcion ID PIZQ PDER bloque
    (10) funcion -> . tipo_funcion ID PIZQ lista_parametros PDER bloque
    (88) tipo_funcion -> . INT
    (89) tipo_funcion -> . STRING_TYPE
    (90) tipo_funcion -> . BOOLEAN
    (91) tipo_funcion -> . VOID
    (92) tipo_funcion -> . FLOAT

    CLASS           shift and go to state 6
    INT             shift and go to state 8
    STRING_TYPE     shift and go to state 9
    BOOLEAN         shift and go to state 10
    VOID            shift and go to state 11
    FLOAT           shift and go to state 12

    init                           shift and go to state 1
    clases_funciones               shift and go to state 2
    clase_funcion                  shift and go to state 3
    clase                          shift and go to state 4
    funcion                        shift and go to state 5
    tipo_funcion                   shift and go to state 7

state 1

    (0) S' -> init .



state 2

    (1) init -> clases_funciones .
    (2) clases_funciones -> clases_funciones . clase_funcion
    (4) clase_funcion -> . clase
    (5) clase_funcion -> . funcion
    (6) clase -> . CLASS ID bloqueClase
    (9) funcion -> . tipo_funcion ID PIZQ PDER bloque
    (10) funcion -> . tipo_funcion ID PIZQ lista_parametros PDER bloque
    (88) tipo_funcion -> . INT
    (89) tipo_funcion -> . STRING_TYPE
    (90) tipo_funcion -> . BOOLEAN
    (91) tipo_funcion -> . VOID
    (92) tipo_funcion -> . FLOAT

    $end            reduce using rule 1 (init -> clases_funciones .)
    CLASS           shift and go to state 6
    INT             shift and go to state 8
    STRING_TYPE     shift and go to state 9
    BOOLEAN         shift and go to state 10
    VOID            shift and go to state 11
    FLOAT           shift and go to state 12

    clase_funcion                  shift and go to state 13
    clase                          shift and go to state 4
    funcion                        shift and go to state 5
    tipo_funcion                   shift and go to state 7

state 3

    (3) clases_funciones -> clase_funcion .

    CLASS           reduce using rule 3 (clases_funciones -> clase_funcion .)
    INT             reduce using rule 3 (clases_funciones -> clase_funcion .)
    STRING_TYPE     reduce using rule 3 (clases_funciones -> clase_funcion .)
    BOOLEAN         reduce using rule 3 (clases_funciones -> clase_funcion .)
    VOID            reduce using rule 3 (clases_funciones -> clase_funcion .)
    FLOAT           reduce using rule 3 (clases_funciones -> clase_funcion .)
    $end            reduce using rule 3 (clases_funciones -> clase_funcion .)


state 4

    (4) clase_funcion -> clase .

    CLASS           reduce using rule 4 (clase_funcion -> clase .)
    INT             reduce using rule 4 (clase_funcion -> clase .)
    STRING_TYPE     reduce using rule 4 (clase_funcion -> clase .)
    BOOLEAN         reduce using rule 4 (clase_funcion -> clase .)
    VOID            reduce using rule 4 (clase_funcion -> clase .)
    FLOAT           reduce using rule 4 (clase_funcion -> clase .)
    $end            reduce using rule 4 (clase_funcion -> clase .)


state 5

    (5) clase_funcion -> funcion .

    CLASS           reduce using rule 5 (clase_funcion -> funcion .)
    INT             reduce using rule 5 (clase_funcion -> funcion .)
    STRING_TYPE     reduce using rule 5 (clase_funcion -> funcion .)
    BOOLEAN         reduce using rule 5 (clase_funcion -> funcion .)
    VOID            reduce using rule 5 (clase_funcion -> funcion .)
    FLOAT           reduce using rule 5 (clase_funcion -> funcion .)
    $end            reduce using rule 5 (clase_funcion -> funcion .)


state 6

    (6) clase -> CLASS . ID bloqueClase

    ID              shift and go to state 14


state 7

    (9) funcion -> tipo_funcion . ID PIZQ PDER bloque
    (10) funcion -> tipo_funcion . ID PIZQ lista_parametros PDER bloque

    ID              shift and go to state 15


state 8

    (88) tipo_funcion -> INT .

    ID              reduce using rule 88 (tipo_funcion -> INT .)


state 9

    (89) tipo_funcion -> STRING_TYPE .

    ID              reduce using rule 89 (tipo_funcion -> STRING_TYPE .)


state 10

    (90) tipo_funcion -> BOOLEAN .

    ID              reduce using rule 90 (tipo_funcion -> BOOLEAN .)


state 11

    (91) tipo_funcion -> VOID .

    ID              reduce using rule 91 (tipo_funcion -> VOID .)


state 12

    (92) tipo_funcion -> FLOAT .

    ID              reduce using rule 92 (tipo_funcion -> FLOAT .)


state 13

    (2) clases_funciones -> clases_funciones clase_funcion .

    CLASS           reduce using rule 2 (clases_funciones -> clases_funciones clase_funcion .)
    INT             reduce using rule 2 (clases_funciones -> clases_funciones clase_funcion .)
    STRING_TYPE     reduce using rule 2 (clases_funciones -> clases_funciones clase_funcion .)
    BOOLEAN         reduce using rule 2 (clases_funciones -> clases_funciones clase_funcion .)
    VOID            reduce using rule 2 (clases_funciones -> clases_funciones clase_funcion .)
    FLOAT           reduce using rule 2 (clases_funciones -> clases_funciones clase_funcion .)
    $end            reduce using rule 2 (clases_funciones -> clases_funciones clase_funcion .)


state 14

    (6) clase -> CLASS ID . bloqueClase
    (7) bloqueClase -> . LLAVEIZQ instrs_clase LLAVEDER
    (8) bloqueClase -> . LLAVEIZQ LLAVEDER

    LLAVEIZQ        shift and go to state 17

    bloqueClase                    shift and go to state 16

state 15

    (9) funcion -> tipo_funcion ID . PIZQ PDER bloque
    (10) funcion -> tipo_funcion ID . PIZQ lista_parametros PDER bloque

    PIZQ            shift and go to state 18


state 16

    (6) clase -> CLASS ID bloqueClase .

    CLASS           reduce using rule 6 (clase -> CLASS ID bloqueClase .)
    INT             reduce using rule 6 (clase -> CLASS ID bloqueClase .)
    STRING_TYPE     reduce using rule 6 (clase -> CLASS ID bloqueClase .)
    BOOLEAN         reduce using rule 6 (clase -> CLASS ID bloqueClase .)
    VOID            reduce using rule 6 (clase -> CLASS ID bloqueClase .)
    FLOAT           reduce using rule 6 (clase -> CLASS ID bloqueClase .)
    $end            reduce using rule 6 (clase -> CLASS ID bloqueClase .)


state 17

    (7) bloqueClase -> LLAVEIZQ . instrs_clase LLAVEDER
    (8) bloqueClase -> LLAVEIZQ . LLAVEDER
    (16) instrs_clase -> . instrs_clase instr
    (17) instrs_clase -> . instr
    (18) instr -> . declaracion PTCOMA
    (28) declaracion -> . tipo_dato ID IGUAL expresion
    (29) declaracion -> . tipo_dato ID
    (93) tipo_dato -> . INT
    (94) tipo_dato -> . STRING_TYPE
    (95) tipo_dato -> . BOOLEAN
    (96) tipo_dato -> . FLOAT

    LLAVEDER        shift and go to state 20
    INT             shift and go to state 24
    STRING_TYPE     shift and go to state 25
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 27

    instrs_clase                   shift and go to state 19
    instr                          shift and go to state 21
    declaracion                    shift and go to state 22
    tipo_dato                      shift and go to state 23

state 18

    (9) funcion -> tipo_funcion ID PIZQ . PDER bloque
    (10) funcion -> tipo_funcion ID PIZQ . lista_parametros PDER bloque
    (11) lista_parametros -> . lista_parametros COMA parametro
    (12) lista_parametros -> . parametro
    (13) parametro -> . tipo_dato ID
    (93) tipo_dato -> . INT
    (94) tipo_dato -> . STRING_TYPE
    (95) tipo_dato -> . BOOLEAN
    (96) tipo_dato -> . FLOAT

    PDER            shift and go to state 28
    INT             shift and go to state 24
    STRING_TYPE     shift and go to state 25
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 27

    lista_parametros               shift and go to state 29
    parametro                      shift and go to state 30
    tipo_dato                      shift and go to state 31

state 19

    (7) bloqueClase -> LLAVEIZQ instrs_clase . LLAVEDER
    (16) instrs_clase -> instrs_clase . instr
    (18) instr -> . declaracion PTCOMA
    (28) declaracion -> . tipo_dato ID IGUAL expresion
    (29) declaracion -> . tipo_dato ID
    (93) tipo_dato -> . INT
    (94) tipo_dato -> . STRING_TYPE
    (95) tipo_dato -> . BOOLEAN
    (96) tipo_dato -> . FLOAT

    LLAVEDER        shift and go to state 32
    INT             shift and go to state 24
    STRING_TYPE     shift and go to state 25
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 27

    instr                          shift and go to state 33
    declaracion                    shift and go to state 22
    tipo_dato                      shift and go to state 23

state 20

    (8) bloqueClase -> LLAVEIZQ LLAVEDER .

    CLASS           reduce using rule 8 (bloqueClase -> LLAVEIZQ LLAVEDER .)
    INT             reduce using rule 8 (bloqueClase -> LLAVEIZQ LLAVEDER .)
    STRING_TYPE     reduce using rule 8 (bloqueClase -> LLAVEIZQ LLAVEDER .)
    BOOLEAN         reduce using rule 8 (bloqueClase -> LLAVEIZQ LLAVEDER .)
    VOID            reduce using rule 8 (bloqueClase -> LLAVEIZQ LLAVEDER .)
    FLOAT           reduce using rule 8 (bloqueClase -> LLAVEIZQ LLAVEDER .)
    $end            reduce using rule 8 (bloqueClase -> LLAVEIZQ LLAVEDER .)


state 21

    (17) instrs_clase -> instr .

    LLAVEDER        reduce using rule 17 (instrs_clase -> instr .)
    INT             reduce using rule 17 (instrs_clase -> instr .)
    STRING_TYPE     reduce using rule 17 (instrs_clase -> instr .)
    BOOLEAN         reduce using rule 17 (instrs_clase -> instr .)
    FLOAT           reduce using rule 17 (instrs_clase -> instr .)


state 22

    (18) instr -> declaracion . PTCOMA

    PTCOMA          shift and go to state 34


state 23

    (28) declaracion -> tipo_dato . ID IGUAL expresion
    (29) declaracion -> tipo_dato . ID

    ID              shift and go to state 35


state 24

    (93) tipo_dato -> INT .

    ID              reduce using rule 93 (tipo_dato -> INT .)
    CORIZQ          reduce using rule 93 (tipo_dato -> INT .)


state 25

    (94) tipo_dato -> STRING_TYPE .

    ID              reduce using rule 94 (tipo_dato -> STRING_TYPE .)
    CORIZQ          reduce using rule 94 (tipo_dato -> STRING_TYPE .)


state 26

    (95) tipo_dato -> BOOLEAN .

    ID              reduce using rule 95 (tipo_dato -> BOOLEAN .)
    CORIZQ          reduce using rule 95 (tipo_dato -> BOOLEAN .)


state 27

    (96) tipo_dato -> FLOAT .

    ID              reduce using rule 96 (tipo_dato -> FLOAT .)
    CORIZQ          reduce using rule 96 (tipo_dato -> FLOAT .)


state 28

    (9) funcion -> tipo_funcion ID PIZQ PDER . bloque
    (14) bloque -> . LLAVEIZQ LLAVEDER
    (15) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 37

    bloque                         shift and go to state 36

state 29

    (10) funcion -> tipo_funcion ID PIZQ lista_parametros . PDER bloque
    (11) lista_parametros -> lista_parametros . COMA parametro

    PDER            shift and go to state 38
    COMA            shift and go to state 39


state 30

    (12) lista_parametros -> parametro .

    PDER            reduce using rule 12 (lista_parametros -> parametro .)
    COMA            reduce using rule 12 (lista_parametros -> parametro .)


state 31

    (13) parametro -> tipo_dato . ID

    ID              shift and go to state 40


state 32

    (7) bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER .

    CLASS           reduce using rule 7 (bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER .)
    INT             reduce using rule 7 (bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER .)
    STRING_TYPE     reduce using rule 7 (bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER .)
    BOOLEAN         reduce using rule 7 (bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER .)
    VOID            reduce using rule 7 (bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER .)
    FLOAT           reduce using rule 7 (bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER .)
    $end            reduce using rule 7 (bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER .)


state 33

    (16) instrs_clase -> instrs_clase instr .

    LLAVEDER        reduce using rule 16 (instrs_clase -> instrs_clase instr .)
    INT             reduce using rule 16 (instrs_clase -> instrs_clase instr .)
    STRING_TYPE     reduce using rule 16 (instrs_clase -> instrs_clase instr .)
    BOOLEAN         reduce using rule 16 (instrs_clase -> instrs_clase instr .)
    FLOAT           reduce using rule 16 (instrs_clase -> instrs_clase instr .)


state 34

    (18) instr -> declaracion PTCOMA .

    LLAVEDER        reduce using rule 18 (instr -> declaracion PTCOMA .)
    INT             reduce using rule 18 (instr -> declaracion PTCOMA .)
    STRING_TYPE     reduce using rule 18 (instr -> declaracion PTCOMA .)
    BOOLEAN         reduce using rule 18 (instr -> declaracion PTCOMA .)
    FLOAT           reduce using rule 18 (instr -> declaracion PTCOMA .)


state 35

    (28) declaracion -> tipo_dato ID . IGUAL expresion
    (29) declaracion -> tipo_dato ID .

    IGUAL           shift and go to state 41
    PTCOMA          reduce using rule 29 (declaracion -> tipo_dato ID .)


state 36

    (9) funcion -> tipo_funcion ID PIZQ PDER bloque .

    CLASS           reduce using rule 9 (funcion -> tipo_funcion ID PIZQ PDER bloque .)
    INT             reduce using rule 9 (funcion -> tipo_funcion ID PIZQ PDER bloque .)
    STRING_TYPE     reduce using rule 9 (funcion -> tipo_funcion ID PIZQ PDER bloque .)
    BOOLEAN         reduce using rule 9 (funcion -> tipo_funcion ID PIZQ PDER bloque .)
    VOID            reduce using rule 9 (funcion -> tipo_funcion ID PIZQ PDER bloque .)
    FLOAT           reduce using rule 9 (funcion -> tipo_funcion ID PIZQ PDER bloque .)
    $end            reduce using rule 9 (funcion -> tipo_funcion ID PIZQ PDER bloque .)


state 37

    (14) bloque -> LLAVEIZQ . LLAVEDER
    (15) bloque -> LLAVEIZQ . instrucciones LLAVEDER
    (19) instrucciones -> . instrucciones instruccion
    (20) instrucciones -> . instruccion
    (21) instruccion -> . print_inst PTCOMA
    (22) instruccion -> . declaracion PTCOMA
    (23) instruccion -> . declaracion_objeto PTCOMA
    (24) instruccion -> . declaracion_arreglo PTCOMA
    (25) instruccion -> . llamada PTCOMA
    (26) instruccion -> . return_inst PTCOMA
    (27) instruccion -> . if_instr
    (35) print_inst -> . PRINT PIZQ expresion PDER
    (28) declaracion -> . tipo_dato ID IGUAL expresion
    (29) declaracion -> . tipo_dato ID
    (34) declaracion_objeto -> . ID ID IGUAL expresion
    (30) declaracion_arreglo -> . tipo_dato niveles ID IGUAL expresion
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (38) return_inst -> . RETURN_W
    (39) return_inst -> . RETURN_W expresion
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (93) tipo_dato -> . INT
    (94) tipo_dato -> . STRING_TYPE
    (95) tipo_dato -> . BOOLEAN
    (96) tipo_dato -> . FLOAT

    LLAVEDER        shift and go to state 42
    PRINT           shift and go to state 52
    ID              shift and go to state 54
    RETURN_W        shift and go to state 55
    IF_W            shift and go to state 56
    INT             shift and go to state 24
    STRING_TYPE     shift and go to state 25
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 27

    instrucciones                  shift and go to state 43
    instruccion                    shift and go to state 44
    print_inst                     shift and go to state 45
    declaracion                    shift and go to state 46
    declaracion_objeto             shift and go to state 47
    declaracion_arreglo            shift and go to state 48
    llamada                        shift and go to state 49
    return_inst                    shift and go to state 50
    if_instr                       shift and go to state 51
    tipo_dato                      shift and go to state 53

state 38

    (10) funcion -> tipo_funcion ID PIZQ lista_parametros PDER . bloque
    (14) bloque -> . LLAVEIZQ LLAVEDER
    (15) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 37

    bloque                         shift and go to state 57

state 39

    (11) lista_parametros -> lista_parametros COMA . parametro
    (13) parametro -> . tipo_dato ID
    (93) tipo_dato -> . INT
    (94) tipo_dato -> . STRING_TYPE
    (95) tipo_dato -> . BOOLEAN
    (96) tipo_dato -> . FLOAT

    INT             shift and go to state 24
    STRING_TYPE     shift and go to state 25
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 27

    parametro                      shift and go to state 58
    tipo_dato                      shift and go to state 31

state 40

    (13) parametro -> tipo_dato ID .

    PDER            reduce using rule 13 (parametro -> tipo_dato ID .)
    COMA            reduce using rule 13 (parametro -> tipo_dato ID .)


state 41

    (28) declaracion -> tipo_dato ID IGUAL . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 60
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 42

    (14) bloque -> LLAVEIZQ LLAVEDER .

    CLASS           reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    INT             reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    STRING_TYPE     reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    BOOLEAN         reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    VOID            reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    FLOAT           reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    $end            reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    ELSE_W          reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    LLAVEDER        reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    PRINT           reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    ID              reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    RETURN_W        reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    IF_W            reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    OR              reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    AND             reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    MENOR           reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    MAYOR           reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    MAYORIGUAL      reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    MENORIGUAL      reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    DIFERENTE       reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    IGUALIGUAL      reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    MAS             reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    MENOS           reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    MULTIPLICACION  reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    DIVISION        reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    PTCOMA          reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    PUNTO           reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    PDER            reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    CORDER          reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)
    COMA            reduce using rule 14 (bloque -> LLAVEIZQ LLAVEDER .)


state 43

    (15) bloque -> LLAVEIZQ instrucciones . LLAVEDER
    (19) instrucciones -> instrucciones . instruccion
    (21) instruccion -> . print_inst PTCOMA
    (22) instruccion -> . declaracion PTCOMA
    (23) instruccion -> . declaracion_objeto PTCOMA
    (24) instruccion -> . declaracion_arreglo PTCOMA
    (25) instruccion -> . llamada PTCOMA
    (26) instruccion -> . return_inst PTCOMA
    (27) instruccion -> . if_instr
    (35) print_inst -> . PRINT PIZQ expresion PDER
    (28) declaracion -> . tipo_dato ID IGUAL expresion
    (29) declaracion -> . tipo_dato ID
    (34) declaracion_objeto -> . ID ID IGUAL expresion
    (30) declaracion_arreglo -> . tipo_dato niveles ID IGUAL expresion
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (38) return_inst -> . RETURN_W
    (39) return_inst -> . RETURN_W expresion
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (93) tipo_dato -> . INT
    (94) tipo_dato -> . STRING_TYPE
    (95) tipo_dato -> . BOOLEAN
    (96) tipo_dato -> . FLOAT

    LLAVEDER        shift and go to state 79
    PRINT           shift and go to state 52
    ID              shift and go to state 54
    RETURN_W        shift and go to state 55
    IF_W            shift and go to state 56
    INT             shift and go to state 24
    STRING_TYPE     shift and go to state 25
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 27

    instruccion                    shift and go to state 80
    print_inst                     shift and go to state 45
    declaracion                    shift and go to state 46
    declaracion_objeto             shift and go to state 47
    declaracion_arreglo            shift and go to state 48
    llamada                        shift and go to state 49
    return_inst                    shift and go to state 50
    if_instr                       shift and go to state 51
    tipo_dato                      shift and go to state 53

state 44

    (20) instrucciones -> instruccion .

    LLAVEDER        reduce using rule 20 (instrucciones -> instruccion .)
    PRINT           reduce using rule 20 (instrucciones -> instruccion .)
    ID              reduce using rule 20 (instrucciones -> instruccion .)
    RETURN_W        reduce using rule 20 (instrucciones -> instruccion .)
    IF_W            reduce using rule 20 (instrucciones -> instruccion .)
    INT             reduce using rule 20 (instrucciones -> instruccion .)
    STRING_TYPE     reduce using rule 20 (instrucciones -> instruccion .)
    BOOLEAN         reduce using rule 20 (instrucciones -> instruccion .)
    FLOAT           reduce using rule 20 (instrucciones -> instruccion .)


state 45

    (21) instruccion -> print_inst . PTCOMA

    PTCOMA          shift and go to state 81


state 46

    (22) instruccion -> declaracion . PTCOMA

    PTCOMA          shift and go to state 82


state 47

    (23) instruccion -> declaracion_objeto . PTCOMA

    PTCOMA          shift and go to state 83


state 48

    (24) instruccion -> declaracion_arreglo . PTCOMA

    PTCOMA          shift and go to state 84


state 49

    (25) instruccion -> llamada . PTCOMA

    PTCOMA          shift and go to state 85


state 50

    (26) instruccion -> return_inst . PTCOMA

    PTCOMA          shift and go to state 86


state 51

    (27) instruccion -> if_instr .

    LLAVEDER        reduce using rule 27 (instruccion -> if_instr .)
    PRINT           reduce using rule 27 (instruccion -> if_instr .)
    ID              reduce using rule 27 (instruccion -> if_instr .)
    RETURN_W        reduce using rule 27 (instruccion -> if_instr .)
    IF_W            reduce using rule 27 (instruccion -> if_instr .)
    INT             reduce using rule 27 (instruccion -> if_instr .)
    STRING_TYPE     reduce using rule 27 (instruccion -> if_instr .)
    BOOLEAN         reduce using rule 27 (instruccion -> if_instr .)
    FLOAT           reduce using rule 27 (instruccion -> if_instr .)


state 52

    (35) print_inst -> PRINT . PIZQ expresion PDER

    PIZQ            shift and go to state 87


state 53

    (28) declaracion -> tipo_dato . ID IGUAL expresion
    (29) declaracion -> tipo_dato . ID
    (30) declaracion_arreglo -> tipo_dato . niveles ID IGUAL expresion
    (31) niveles -> . niveles nivel
    (32) niveles -> . nivel
    (33) nivel -> . CORIZQ CORDER

    ID              shift and go to state 35
    CORIZQ          shift and go to state 90

    niveles                        shift and go to state 88
    nivel                          shift and go to state 89

state 54

    (34) declaracion_objeto -> ID . ID IGUAL expresion
    (36) llamada -> ID . PIZQ PDER
    (37) llamada -> ID . PIZQ lista_expresiones PDER

    ID              shift and go to state 91
    PIZQ            shift and go to state 92


state 55

    (38) return_inst -> RETURN_W .
    (39) return_inst -> RETURN_W . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    PTCOMA          reduce using rule 38 (return_inst -> RETURN_W .)
    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 93
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 56

    (40) if_instr -> IF_W . PIZQ expresion PDER bloque
    (41) if_instr -> IF_W . PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> IF_W . PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> IF_W . PIZQ expresion PDER bloque listaelseif ELSE_W bloque

    PIZQ            shift and go to state 94


state 57

    (10) funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque .

    CLASS           reduce using rule 10 (funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque .)
    INT             reduce using rule 10 (funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque .)
    STRING_TYPE     reduce using rule 10 (funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque .)
    BOOLEAN         reduce using rule 10 (funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque .)
    VOID            reduce using rule 10 (funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque .)
    FLOAT           reduce using rule 10 (funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque .)
    $end            reduce using rule 10 (funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque .)


state 58

    (11) lista_parametros -> lista_parametros COMA parametro .

    PDER            reduce using rule 11 (lista_parametros -> lista_parametros COMA parametro .)
    COMA            reduce using rule 11 (lista_parametros -> lista_parametros COMA parametro .)


state 59

    (66) expresion -> ID .
    (36) llamada -> ID . PIZQ PDER
    (37) llamada -> ID . PIZQ lista_expresiones PDER
    (87) acceso_array_expresion -> ID . dimensiones
    (79) dimensiones -> . dimensiones dimension
    (80) dimensiones -> . dimension
    (81) dimension -> . CORIZQ expresion CORDER

    OR              reduce using rule 66 (expresion -> ID .)
    AND             reduce using rule 66 (expresion -> ID .)
    MENOR           reduce using rule 66 (expresion -> ID .)
    MAYOR           reduce using rule 66 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 66 (expresion -> ID .)
    MENORIGUAL      reduce using rule 66 (expresion -> ID .)
    DIFERENTE       reduce using rule 66 (expresion -> ID .)
    IGUALIGUAL      reduce using rule 66 (expresion -> ID .)
    MAS             reduce using rule 66 (expresion -> ID .)
    MENOS           reduce using rule 66 (expresion -> ID .)
    MULTIPLICACION  reduce using rule 66 (expresion -> ID .)
    DIVISION        reduce using rule 66 (expresion -> ID .)
    PTCOMA          reduce using rule 66 (expresion -> ID .)
    PUNTO           reduce using rule 66 (expresion -> ID .)
    PDER            reduce using rule 66 (expresion -> ID .)
    CORDER          reduce using rule 66 (expresion -> ID .)
    COMA            reduce using rule 66 (expresion -> ID .)
    PIZQ            shift and go to state 92
    CORIZQ          shift and go to state 97

    dimensiones                    shift and go to state 95
    dimension                      shift and go to state 96

state 60

    (28) declaracion -> tipo_dato ID IGUAL expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 28 (declaracion -> tipo_dato ID IGUAL expresion .)
    PTCOMA          reduce using rule 28 (declaracion -> tipo_dato ID IGUAL expresion .)
    OR              shift and go to state 98
    AND             shift and go to state 99
    MENOR           shift and go to state 100
    MAYOR           shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    DIFERENTE       shift and go to state 104
    IGUALIGUAL      shift and go to state 105
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    PUNTO           reduce using rule 86 (acceso_objeto -> expresion .)

  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 61

    (51) expresion -> NOT . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 110
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 62

    (58) expresion -> MENOS . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 111
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 63

    (63) expresion -> PIZQ . expresion PDER
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 112
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 64

    (64) expresion -> ENTERO .

    OR              reduce using rule 64 (expresion -> ENTERO .)
    AND             reduce using rule 64 (expresion -> ENTERO .)
    MENOR           reduce using rule 64 (expresion -> ENTERO .)
    MAYOR           reduce using rule 64 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 64 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 64 (expresion -> ENTERO .)
    DIFERENTE       reduce using rule 64 (expresion -> ENTERO .)
    IGUALIGUAL      reduce using rule 64 (expresion -> ENTERO .)
    MAS             reduce using rule 64 (expresion -> ENTERO .)
    MENOS           reduce using rule 64 (expresion -> ENTERO .)
    MULTIPLICACION  reduce using rule 64 (expresion -> ENTERO .)
    DIVISION        reduce using rule 64 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 64 (expresion -> ENTERO .)
    PUNTO           reduce using rule 64 (expresion -> ENTERO .)
    PDER            reduce using rule 64 (expresion -> ENTERO .)
    CORDER          reduce using rule 64 (expresion -> ENTERO .)
    COMA            reduce using rule 64 (expresion -> ENTERO .)


state 65

    (65) expresion -> DECIMAL .

    OR              reduce using rule 65 (expresion -> DECIMAL .)
    AND             reduce using rule 65 (expresion -> DECIMAL .)
    MENOR           reduce using rule 65 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 65 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 65 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 65 (expresion -> DECIMAL .)
    DIFERENTE       reduce using rule 65 (expresion -> DECIMAL .)
    IGUALIGUAL      reduce using rule 65 (expresion -> DECIMAL .)
    MAS             reduce using rule 65 (expresion -> DECIMAL .)
    MENOS           reduce using rule 65 (expresion -> DECIMAL .)
    MULTIPLICACION  reduce using rule 65 (expresion -> DECIMAL .)
    DIVISION        reduce using rule 65 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 65 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 65 (expresion -> DECIMAL .)
    PDER            reduce using rule 65 (expresion -> DECIMAL .)
    CORDER          reduce using rule 65 (expresion -> DECIMAL .)
    COMA            reduce using rule 65 (expresion -> DECIMAL .)


state 66

    (67) expresion -> CADENA .

    OR              reduce using rule 67 (expresion -> CADENA .)
    AND             reduce using rule 67 (expresion -> CADENA .)
    MENOR           reduce using rule 67 (expresion -> CADENA .)
    MAYOR           reduce using rule 67 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 67 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 67 (expresion -> CADENA .)
    DIFERENTE       reduce using rule 67 (expresion -> CADENA .)
    IGUALIGUAL      reduce using rule 67 (expresion -> CADENA .)
    MAS             reduce using rule 67 (expresion -> CADENA .)
    MENOS           reduce using rule 67 (expresion -> CADENA .)
    MULTIPLICACION  reduce using rule 67 (expresion -> CADENA .)
    DIVISION        reduce using rule 67 (expresion -> CADENA .)
    PTCOMA          reduce using rule 67 (expresion -> CADENA .)
    PUNTO           reduce using rule 67 (expresion -> CADENA .)
    PDER            reduce using rule 67 (expresion -> CADENA .)
    CORDER          reduce using rule 67 (expresion -> CADENA .)
    COMA            reduce using rule 67 (expresion -> CADENA .)


state 67

    (68) expresion -> TRUE .

    OR              reduce using rule 68 (expresion -> TRUE .)
    AND             reduce using rule 68 (expresion -> TRUE .)
    MENOR           reduce using rule 68 (expresion -> TRUE .)
    MAYOR           reduce using rule 68 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 68 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 68 (expresion -> TRUE .)
    DIFERENTE       reduce using rule 68 (expresion -> TRUE .)
    IGUALIGUAL      reduce using rule 68 (expresion -> TRUE .)
    MAS             reduce using rule 68 (expresion -> TRUE .)
    MENOS           reduce using rule 68 (expresion -> TRUE .)
    MULTIPLICACION  reduce using rule 68 (expresion -> TRUE .)
    DIVISION        reduce using rule 68 (expresion -> TRUE .)
    PTCOMA          reduce using rule 68 (expresion -> TRUE .)
    PUNTO           reduce using rule 68 (expresion -> TRUE .)
    PDER            reduce using rule 68 (expresion -> TRUE .)
    CORDER          reduce using rule 68 (expresion -> TRUE .)
    COMA            reduce using rule 68 (expresion -> TRUE .)


state 68

    (69) expresion -> FALSE .

    OR              reduce using rule 69 (expresion -> FALSE .)
    AND             reduce using rule 69 (expresion -> FALSE .)
    MENOR           reduce using rule 69 (expresion -> FALSE .)
    MAYOR           reduce using rule 69 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 69 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 69 (expresion -> FALSE .)
    DIFERENTE       reduce using rule 69 (expresion -> FALSE .)
    IGUALIGUAL      reduce using rule 69 (expresion -> FALSE .)
    MAS             reduce using rule 69 (expresion -> FALSE .)
    MENOS           reduce using rule 69 (expresion -> FALSE .)
    MULTIPLICACION  reduce using rule 69 (expresion -> FALSE .)
    DIVISION        reduce using rule 69 (expresion -> FALSE .)
    PTCOMA          reduce using rule 69 (expresion -> FALSE .)
    PUNTO           reduce using rule 69 (expresion -> FALSE .)
    PDER            reduce using rule 69 (expresion -> FALSE .)
    CORDER          reduce using rule 69 (expresion -> FALSE .)
    COMA            reduce using rule 69 (expresion -> FALSE .)


state 69

    (70) expresion -> llamada .

    OR              reduce using rule 70 (expresion -> llamada .)
    AND             reduce using rule 70 (expresion -> llamada .)
    MENOR           reduce using rule 70 (expresion -> llamada .)
    MAYOR           reduce using rule 70 (expresion -> llamada .)
    MAYORIGUAL      reduce using rule 70 (expresion -> llamada .)
    MENORIGUAL      reduce using rule 70 (expresion -> llamada .)
    DIFERENTE       reduce using rule 70 (expresion -> llamada .)
    IGUALIGUAL      reduce using rule 70 (expresion -> llamada .)
    MAS             reduce using rule 70 (expresion -> llamada .)
    MENOS           reduce using rule 70 (expresion -> llamada .)
    MULTIPLICACION  reduce using rule 70 (expresion -> llamada .)
    DIVISION        reduce using rule 70 (expresion -> llamada .)
    PTCOMA          reduce using rule 70 (expresion -> llamada .)
    PUNTO           reduce using rule 70 (expresion -> llamada .)
    PDER            reduce using rule 70 (expresion -> llamada .)
    CORDER          reduce using rule 70 (expresion -> llamada .)
    COMA            reduce using rule 70 (expresion -> llamada .)


state 70

    (71) expresion -> acceso_objeto_expresion .

    OR              reduce using rule 71 (expresion -> acceso_objeto_expresion .)
    AND             reduce using rule 71 (expresion -> acceso_objeto_expresion .)
    MENOR           reduce using rule 71 (expresion -> acceso_objeto_expresion .)
    MAYOR           reduce using rule 71 (expresion -> acceso_objeto_expresion .)
    MAYORIGUAL      reduce using rule 71 (expresion -> acceso_objeto_expresion .)
    MENORIGUAL      reduce using rule 71 (expresion -> acceso_objeto_expresion .)
    DIFERENTE       reduce using rule 71 (expresion -> acceso_objeto_expresion .)
    IGUALIGUAL      reduce using rule 71 (expresion -> acceso_objeto_expresion .)
    MAS             reduce using rule 71 (expresion -> acceso_objeto_expresion .)
    MENOS           reduce using rule 71 (expresion -> acceso_objeto_expresion .)
    MULTIPLICACION  reduce using rule 71 (expresion -> acceso_objeto_expresion .)
    DIVISION        reduce using rule 71 (expresion -> acceso_objeto_expresion .)
    PTCOMA          reduce using rule 71 (expresion -> acceso_objeto_expresion .)
    PUNTO           reduce using rule 71 (expresion -> acceso_objeto_expresion .)
    PDER            reduce using rule 71 (expresion -> acceso_objeto_expresion .)
    CORDER          reduce using rule 71 (expresion -> acceso_objeto_expresion .)
    COMA            reduce using rule 71 (expresion -> acceso_objeto_expresion .)


state 71

    (72) expresion -> acceso_array_expresion .

    OR              reduce using rule 72 (expresion -> acceso_array_expresion .)
    AND             reduce using rule 72 (expresion -> acceso_array_expresion .)
    MENOR           reduce using rule 72 (expresion -> acceso_array_expresion .)
    MAYOR           reduce using rule 72 (expresion -> acceso_array_expresion .)
    MAYORIGUAL      reduce using rule 72 (expresion -> acceso_array_expresion .)
    MENORIGUAL      reduce using rule 72 (expresion -> acceso_array_expresion .)
    DIFERENTE       reduce using rule 72 (expresion -> acceso_array_expresion .)
    IGUALIGUAL      reduce using rule 72 (expresion -> acceso_array_expresion .)
    MAS             reduce using rule 72 (expresion -> acceso_array_expresion .)
    MENOS           reduce using rule 72 (expresion -> acceso_array_expresion .)
    MULTIPLICACION  reduce using rule 72 (expresion -> acceso_array_expresion .)
    DIVISION        reduce using rule 72 (expresion -> acceso_array_expresion .)
    PTCOMA          reduce using rule 72 (expresion -> acceso_array_expresion .)
    PUNTO           reduce using rule 72 (expresion -> acceso_array_expresion .)
    PDER            reduce using rule 72 (expresion -> acceso_array_expresion .)
    CORDER          reduce using rule 72 (expresion -> acceso_array_expresion .)
    COMA            reduce using rule 72 (expresion -> acceso_array_expresion .)


state 72

    (73) expresion -> instancia_objeto .

    OR              reduce using rule 73 (expresion -> instancia_objeto .)
    AND             reduce using rule 73 (expresion -> instancia_objeto .)
    MENOR           reduce using rule 73 (expresion -> instancia_objeto .)
    MAYOR           reduce using rule 73 (expresion -> instancia_objeto .)
    MAYORIGUAL      reduce using rule 73 (expresion -> instancia_objeto .)
    MENORIGUAL      reduce using rule 73 (expresion -> instancia_objeto .)
    DIFERENTE       reduce using rule 73 (expresion -> instancia_objeto .)
    IGUALIGUAL      reduce using rule 73 (expresion -> instancia_objeto .)
    MAS             reduce using rule 73 (expresion -> instancia_objeto .)
    MENOS           reduce using rule 73 (expresion -> instancia_objeto .)
    MULTIPLICACION  reduce using rule 73 (expresion -> instancia_objeto .)
    DIVISION        reduce using rule 73 (expresion -> instancia_objeto .)
    PTCOMA          reduce using rule 73 (expresion -> instancia_objeto .)
    PUNTO           reduce using rule 73 (expresion -> instancia_objeto .)
    PDER            reduce using rule 73 (expresion -> instancia_objeto .)
    CORDER          reduce using rule 73 (expresion -> instancia_objeto .)
    COMA            reduce using rule 73 (expresion -> instancia_objeto .)


state 73

    (74) expresion -> array_data .

    OR              reduce using rule 74 (expresion -> array_data .)
    AND             reduce using rule 74 (expresion -> array_data .)
    MENOR           reduce using rule 74 (expresion -> array_data .)
    MAYOR           reduce using rule 74 (expresion -> array_data .)
    MAYORIGUAL      reduce using rule 74 (expresion -> array_data .)
    MENORIGUAL      reduce using rule 74 (expresion -> array_data .)
    DIFERENTE       reduce using rule 74 (expresion -> array_data .)
    IGUALIGUAL      reduce using rule 74 (expresion -> array_data .)
    MAS             reduce using rule 74 (expresion -> array_data .)
    MENOS           reduce using rule 74 (expresion -> array_data .)
    MULTIPLICACION  reduce using rule 74 (expresion -> array_data .)
    DIVISION        reduce using rule 74 (expresion -> array_data .)
    PTCOMA          reduce using rule 74 (expresion -> array_data .)
    PUNTO           reduce using rule 74 (expresion -> array_data .)
    PDER            reduce using rule 74 (expresion -> array_data .)
    CORDER          reduce using rule 74 (expresion -> array_data .)
    COMA            reduce using rule 74 (expresion -> array_data .)


state 74

    (75) expresion -> array_instancia .

    OR              reduce using rule 75 (expresion -> array_instancia .)
    AND             reduce using rule 75 (expresion -> array_instancia .)
    MENOR           reduce using rule 75 (expresion -> array_instancia .)
    MAYOR           reduce using rule 75 (expresion -> array_instancia .)
    MAYORIGUAL      reduce using rule 75 (expresion -> array_instancia .)
    MENORIGUAL      reduce using rule 75 (expresion -> array_instancia .)
    DIFERENTE       reduce using rule 75 (expresion -> array_instancia .)
    IGUALIGUAL      reduce using rule 75 (expresion -> array_instancia .)
    MAS             reduce using rule 75 (expresion -> array_instancia .)
    MENOS           reduce using rule 75 (expresion -> array_instancia .)
    MULTIPLICACION  reduce using rule 75 (expresion -> array_instancia .)
    DIVISION        reduce using rule 75 (expresion -> array_instancia .)
    PTCOMA          reduce using rule 75 (expresion -> array_instancia .)
    PUNTO           reduce using rule 75 (expresion -> array_instancia .)
    PDER            reduce using rule 75 (expresion -> array_instancia .)
    CORDER          reduce using rule 75 (expresion -> array_instancia .)
    COMA            reduce using rule 75 (expresion -> array_instancia .)


state 75

    (76) expresion -> if_instr .

    OR              reduce using rule 76 (expresion -> if_instr .)
    AND             reduce using rule 76 (expresion -> if_instr .)
    MENOR           reduce using rule 76 (expresion -> if_instr .)
    MAYOR           reduce using rule 76 (expresion -> if_instr .)
    MAYORIGUAL      reduce using rule 76 (expresion -> if_instr .)
    MENORIGUAL      reduce using rule 76 (expresion -> if_instr .)
    DIFERENTE       reduce using rule 76 (expresion -> if_instr .)
    IGUALIGUAL      reduce using rule 76 (expresion -> if_instr .)
    MAS             reduce using rule 76 (expresion -> if_instr .)
    MENOS           reduce using rule 76 (expresion -> if_instr .)
    MULTIPLICACION  reduce using rule 76 (expresion -> if_instr .)
    DIVISION        reduce using rule 76 (expresion -> if_instr .)
    PTCOMA          reduce using rule 76 (expresion -> if_instr .)
    PUNTO           reduce using rule 76 (expresion -> if_instr .)
    PDER            reduce using rule 76 (expresion -> if_instr .)
    CORDER          reduce using rule 76 (expresion -> if_instr .)
    COMA            reduce using rule 76 (expresion -> if_instr .)


state 76

    (84) acceso_objeto_expresion -> acceso_objeto .
    (85) acceso_objeto -> acceso_objeto . PUNTO expresion

  ! shift/reduce conflict for PUNTO resolved as shift
    OR              reduce using rule 84 (acceso_objeto_expresion -> acceso_objeto .)
    AND             reduce using rule 84 (acceso_objeto_expresion -> acceso_objeto .)
    MENOR           reduce using rule 84 (acceso_objeto_expresion -> acceso_objeto .)
    MAYOR           reduce using rule 84 (acceso_objeto_expresion -> acceso_objeto .)
    MAYORIGUAL      reduce using rule 84 (acceso_objeto_expresion -> acceso_objeto .)
    MENORIGUAL      reduce using rule 84 (acceso_objeto_expresion -> acceso_objeto .)
    DIFERENTE       reduce using rule 84 (acceso_objeto_expresion -> acceso_objeto .)
    IGUALIGUAL      reduce using rule 84 (acceso_objeto_expresion -> acceso_objeto .)
    MAS             reduce using rule 84 (acceso_objeto_expresion -> acceso_objeto .)
    MENOS           reduce using rule 84 (acceso_objeto_expresion -> acceso_objeto .)
    MULTIPLICACION  reduce using rule 84 (acceso_objeto_expresion -> acceso_objeto .)
    DIVISION        reduce using rule 84 (acceso_objeto_expresion -> acceso_objeto .)
    PTCOMA          reduce using rule 84 (acceso_objeto_expresion -> acceso_objeto .)
    PDER            reduce using rule 84 (acceso_objeto_expresion -> acceso_objeto .)
    CORDER          reduce using rule 84 (acceso_objeto_expresion -> acceso_objeto .)
    COMA            reduce using rule 84 (acceso_objeto_expresion -> acceso_objeto .)
    PUNTO           shift and go to state 113

  ! PUNTO           [ reduce using rule 84 (acceso_objeto_expresion -> acceso_objeto .) ]


state 77

    (82) instancia_objeto -> NEW . ID PIZQ PDER
    (83) instancia_objeto -> NEW . ID PIZQ lista_expresiones PDER
    (78) array_instancia -> NEW . tipo_dato dimensiones
    (93) tipo_dato -> . INT
    (94) tipo_dato -> . STRING_TYPE
    (95) tipo_dato -> . BOOLEAN
    (96) tipo_dato -> . FLOAT

    ID              shift and go to state 114
    INT             shift and go to state 24
    STRING_TYPE     shift and go to state 25
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 27

    tipo_dato                      shift and go to state 115

state 78

    (77) array_data -> CORIZQ . lista_expresiones CORDER
    (47) lista_expresiones -> . lista_expresiones COMA expresion
    (48) lista_expresiones -> . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    lista_expresiones              shift and go to state 116
    expresion                      shift and go to state 117
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 79

    (15) bloque -> LLAVEIZQ instrucciones LLAVEDER .

    CLASS           reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    INT             reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    STRING_TYPE     reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    BOOLEAN         reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    VOID            reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    FLOAT           reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    ELSE_W          reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PRINT           reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    RETURN_W        reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    IF_W            reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENOR           reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAYOR           reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIGUAL      reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENORIGUAL      reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    DIFERENTE       reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    IGUALIGUAL      reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MULTIPLICACION  reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    DIVISION        reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PUNTO           reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PDER            reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CORDER          reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 15 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)


state 80

    (19) instrucciones -> instrucciones instruccion .

    LLAVEDER        reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    RETURN_W        reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    IF_W            reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    INT             reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    STRING_TYPE     reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    BOOLEAN         reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    FLOAT           reduce using rule 19 (instrucciones -> instrucciones instruccion .)


state 81

    (21) instruccion -> print_inst PTCOMA .

    LLAVEDER        reduce using rule 21 (instruccion -> print_inst PTCOMA .)
    PRINT           reduce using rule 21 (instruccion -> print_inst PTCOMA .)
    ID              reduce using rule 21 (instruccion -> print_inst PTCOMA .)
    RETURN_W        reduce using rule 21 (instruccion -> print_inst PTCOMA .)
    IF_W            reduce using rule 21 (instruccion -> print_inst PTCOMA .)
    INT             reduce using rule 21 (instruccion -> print_inst PTCOMA .)
    STRING_TYPE     reduce using rule 21 (instruccion -> print_inst PTCOMA .)
    BOOLEAN         reduce using rule 21 (instruccion -> print_inst PTCOMA .)
    FLOAT           reduce using rule 21 (instruccion -> print_inst PTCOMA .)


state 82

    (22) instruccion -> declaracion PTCOMA .

    LLAVEDER        reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    PRINT           reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    ID              reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    RETURN_W        reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    IF_W            reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    INT             reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    STRING_TYPE     reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    BOOLEAN         reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    FLOAT           reduce using rule 22 (instruccion -> declaracion PTCOMA .)


state 83

    (23) instruccion -> declaracion_objeto PTCOMA .

    LLAVEDER        reduce using rule 23 (instruccion -> declaracion_objeto PTCOMA .)
    PRINT           reduce using rule 23 (instruccion -> declaracion_objeto PTCOMA .)
    ID              reduce using rule 23 (instruccion -> declaracion_objeto PTCOMA .)
    RETURN_W        reduce using rule 23 (instruccion -> declaracion_objeto PTCOMA .)
    IF_W            reduce using rule 23 (instruccion -> declaracion_objeto PTCOMA .)
    INT             reduce using rule 23 (instruccion -> declaracion_objeto PTCOMA .)
    STRING_TYPE     reduce using rule 23 (instruccion -> declaracion_objeto PTCOMA .)
    BOOLEAN         reduce using rule 23 (instruccion -> declaracion_objeto PTCOMA .)
    FLOAT           reduce using rule 23 (instruccion -> declaracion_objeto PTCOMA .)


state 84

    (24) instruccion -> declaracion_arreglo PTCOMA .

    LLAVEDER        reduce using rule 24 (instruccion -> declaracion_arreglo PTCOMA .)
    PRINT           reduce using rule 24 (instruccion -> declaracion_arreglo PTCOMA .)
    ID              reduce using rule 24 (instruccion -> declaracion_arreglo PTCOMA .)
    RETURN_W        reduce using rule 24 (instruccion -> declaracion_arreglo PTCOMA .)
    IF_W            reduce using rule 24 (instruccion -> declaracion_arreglo PTCOMA .)
    INT             reduce using rule 24 (instruccion -> declaracion_arreglo PTCOMA .)
    STRING_TYPE     reduce using rule 24 (instruccion -> declaracion_arreglo PTCOMA .)
    BOOLEAN         reduce using rule 24 (instruccion -> declaracion_arreglo PTCOMA .)
    FLOAT           reduce using rule 24 (instruccion -> declaracion_arreglo PTCOMA .)


state 85

    (25) instruccion -> llamada PTCOMA .

    LLAVEDER        reduce using rule 25 (instruccion -> llamada PTCOMA .)
    PRINT           reduce using rule 25 (instruccion -> llamada PTCOMA .)
    ID              reduce using rule 25 (instruccion -> llamada PTCOMA .)
    RETURN_W        reduce using rule 25 (instruccion -> llamada PTCOMA .)
    IF_W            reduce using rule 25 (instruccion -> llamada PTCOMA .)
    INT             reduce using rule 25 (instruccion -> llamada PTCOMA .)
    STRING_TYPE     reduce using rule 25 (instruccion -> llamada PTCOMA .)
    BOOLEAN         reduce using rule 25 (instruccion -> llamada PTCOMA .)
    FLOAT           reduce using rule 25 (instruccion -> llamada PTCOMA .)


state 86

    (26) instruccion -> return_inst PTCOMA .

    LLAVEDER        reduce using rule 26 (instruccion -> return_inst PTCOMA .)
    PRINT           reduce using rule 26 (instruccion -> return_inst PTCOMA .)
    ID              reduce using rule 26 (instruccion -> return_inst PTCOMA .)
    RETURN_W        reduce using rule 26 (instruccion -> return_inst PTCOMA .)
    IF_W            reduce using rule 26 (instruccion -> return_inst PTCOMA .)
    INT             reduce using rule 26 (instruccion -> return_inst PTCOMA .)
    STRING_TYPE     reduce using rule 26 (instruccion -> return_inst PTCOMA .)
    BOOLEAN         reduce using rule 26 (instruccion -> return_inst PTCOMA .)
    FLOAT           reduce using rule 26 (instruccion -> return_inst PTCOMA .)


state 87

    (35) print_inst -> PRINT PIZQ . expresion PDER
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 118
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 88

    (30) declaracion_arreglo -> tipo_dato niveles . ID IGUAL expresion
    (31) niveles -> niveles . nivel
    (33) nivel -> . CORIZQ CORDER

    ID              shift and go to state 119
    CORIZQ          shift and go to state 90

    nivel                          shift and go to state 120

state 89

    (32) niveles -> nivel .

    ID              reduce using rule 32 (niveles -> nivel .)
    CORIZQ          reduce using rule 32 (niveles -> nivel .)


state 90

    (33) nivel -> CORIZQ . CORDER

    CORDER          shift and go to state 121


state 91

    (34) declaracion_objeto -> ID ID . IGUAL expresion

    IGUAL           shift and go to state 122


state 92

    (36) llamada -> ID PIZQ . PDER
    (37) llamada -> ID PIZQ . lista_expresiones PDER
    (47) lista_expresiones -> . lista_expresiones COMA expresion
    (48) lista_expresiones -> . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    PDER            shift and go to state 123
    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    lista_expresiones              shift and go to state 124
    expresion                      shift and go to state 117
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 93

    (39) return_inst -> RETURN_W expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 39 (return_inst -> RETURN_W expresion .)
    PTCOMA          reduce using rule 39 (return_inst -> RETURN_W expresion .)
    OR              shift and go to state 98
    AND             shift and go to state 99
    MENOR           shift and go to state 100
    MAYOR           shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    DIFERENTE       shift and go to state 104
    IGUALIGUAL      shift and go to state 105
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    PUNTO           reduce using rule 86 (acceso_objeto -> expresion .)

  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 94

    (40) if_instr -> IF_W PIZQ . expresion PDER bloque
    (41) if_instr -> IF_W PIZQ . expresion PDER bloque ELSE_W bloque
    (42) if_instr -> IF_W PIZQ . expresion PDER bloque listaelseif
    (43) if_instr -> IF_W PIZQ . expresion PDER bloque listaelseif ELSE_W bloque
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 125
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 95

    (87) acceso_array_expresion -> ID dimensiones .
    (79) dimensiones -> dimensiones . dimension
    (81) dimension -> . CORIZQ expresion CORDER

    OR              reduce using rule 87 (acceso_array_expresion -> ID dimensiones .)
    AND             reduce using rule 87 (acceso_array_expresion -> ID dimensiones .)
    MENOR           reduce using rule 87 (acceso_array_expresion -> ID dimensiones .)
    MAYOR           reduce using rule 87 (acceso_array_expresion -> ID dimensiones .)
    MAYORIGUAL      reduce using rule 87 (acceso_array_expresion -> ID dimensiones .)
    MENORIGUAL      reduce using rule 87 (acceso_array_expresion -> ID dimensiones .)
    DIFERENTE       reduce using rule 87 (acceso_array_expresion -> ID dimensiones .)
    IGUALIGUAL      reduce using rule 87 (acceso_array_expresion -> ID dimensiones .)
    MAS             reduce using rule 87 (acceso_array_expresion -> ID dimensiones .)
    MENOS           reduce using rule 87 (acceso_array_expresion -> ID dimensiones .)
    MULTIPLICACION  reduce using rule 87 (acceso_array_expresion -> ID dimensiones .)
    DIVISION        reduce using rule 87 (acceso_array_expresion -> ID dimensiones .)
    PTCOMA          reduce using rule 87 (acceso_array_expresion -> ID dimensiones .)
    PUNTO           reduce using rule 87 (acceso_array_expresion -> ID dimensiones .)
    PDER            reduce using rule 87 (acceso_array_expresion -> ID dimensiones .)
    CORDER          reduce using rule 87 (acceso_array_expresion -> ID dimensiones .)
    COMA            reduce using rule 87 (acceso_array_expresion -> ID dimensiones .)
    CORIZQ          shift and go to state 97

    dimension                      shift and go to state 126

state 96

    (80) dimensiones -> dimension .

    CORIZQ          reduce using rule 80 (dimensiones -> dimension .)
    OR              reduce using rule 80 (dimensiones -> dimension .)
    AND             reduce using rule 80 (dimensiones -> dimension .)
    MENOR           reduce using rule 80 (dimensiones -> dimension .)
    MAYOR           reduce using rule 80 (dimensiones -> dimension .)
    MAYORIGUAL      reduce using rule 80 (dimensiones -> dimension .)
    MENORIGUAL      reduce using rule 80 (dimensiones -> dimension .)
    DIFERENTE       reduce using rule 80 (dimensiones -> dimension .)
    IGUALIGUAL      reduce using rule 80 (dimensiones -> dimension .)
    MAS             reduce using rule 80 (dimensiones -> dimension .)
    MENOS           reduce using rule 80 (dimensiones -> dimension .)
    MULTIPLICACION  reduce using rule 80 (dimensiones -> dimension .)
    DIVISION        reduce using rule 80 (dimensiones -> dimension .)
    PTCOMA          reduce using rule 80 (dimensiones -> dimension .)
    PUNTO           reduce using rule 80 (dimensiones -> dimension .)
    PDER            reduce using rule 80 (dimensiones -> dimension .)
    CORDER          reduce using rule 80 (dimensiones -> dimension .)
    COMA            reduce using rule 80 (dimensiones -> dimension .)


state 97

    (81) dimension -> CORIZQ . expresion CORDER
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 127
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 98

    (49) expresion -> expresion OR . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 128
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 99

    (50) expresion -> expresion AND . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 129
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 100

    (52) expresion -> expresion MENOR . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 130
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 101

    (53) expresion -> expresion MAYOR . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 131
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 102

    (54) expresion -> expresion MAYORIGUAL . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 132
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 103

    (55) expresion -> expresion MENORIGUAL . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 133
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 104

    (56) expresion -> expresion DIFERENTE . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 134
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 105

    (57) expresion -> expresion IGUALIGUAL . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 135
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 106

    (59) expresion -> expresion MAS . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 136
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 107

    (60) expresion -> expresion MENOS . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 137
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 108

    (61) expresion -> expresion MULTIPLICACION . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 138
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 109

    (62) expresion -> expresion DIVISION . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 139
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 110

    (51) expresion -> NOT expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 51 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for AND resolved using rule 51 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for MENOR resolved using rule 51 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 51 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 51 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 51 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 51 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 51 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 51 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 51 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 51 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for DIVISION resolved using rule 51 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 51 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 51 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 51 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 51 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 51 (expresion -> NOT expresion .)
    OR              reduce using rule 51 (expresion -> NOT expresion .)
    AND             reduce using rule 51 (expresion -> NOT expresion .)
    MENOR           reduce using rule 51 (expresion -> NOT expresion .)
    MAYOR           reduce using rule 51 (expresion -> NOT expresion .)
    MAYORIGUAL      reduce using rule 51 (expresion -> NOT expresion .)
    MENORIGUAL      reduce using rule 51 (expresion -> NOT expresion .)
    DIFERENTE       reduce using rule 51 (expresion -> NOT expresion .)
    IGUALIGUAL      reduce using rule 51 (expresion -> NOT expresion .)
    MAS             reduce using rule 51 (expresion -> NOT expresion .)
    MENOS           reduce using rule 51 (expresion -> NOT expresion .)
    MULTIPLICACION  reduce using rule 51 (expresion -> NOT expresion .)
    DIVISION        reduce using rule 51 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 51 (expresion -> NOT expresion .)
    PUNTO           reduce using rule 51 (expresion -> NOT expresion .)
    PDER            reduce using rule 51 (expresion -> NOT expresion .)
    CORDER          reduce using rule 51 (expresion -> NOT expresion .)
    COMA            reduce using rule 51 (expresion -> NOT expresion .)

  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]
  ! MENOR           [ shift and go to state 100 ]
  ! MAYOR           [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! MENORIGUAL      [ shift and go to state 103 ]
  ! DIFERENTE       [ shift and go to state 104 ]
  ! IGUALIGUAL      [ shift and go to state 105 ]
  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! MULTIPLICACION  [ shift and go to state 108 ]
  ! DIVISION        [ shift and go to state 109 ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 111

    (58) expresion -> MENOS expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 58 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for AND resolved using rule 58 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for MENOR resolved using rule 58 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 58 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 58 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 58 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 58 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 58 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 58 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 58 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 58 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for DIVISION resolved using rule 58 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 58 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 58 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 58 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 58 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 58 (expresion -> MENOS expresion .)
    OR              reduce using rule 58 (expresion -> MENOS expresion .)
    AND             reduce using rule 58 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 58 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 58 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 58 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 58 (expresion -> MENOS expresion .)
    DIFERENTE       reduce using rule 58 (expresion -> MENOS expresion .)
    IGUALIGUAL      reduce using rule 58 (expresion -> MENOS expresion .)
    MAS             reduce using rule 58 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 58 (expresion -> MENOS expresion .)
    MULTIPLICACION  reduce using rule 58 (expresion -> MENOS expresion .)
    DIVISION        reduce using rule 58 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 58 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 58 (expresion -> MENOS expresion .)
    PDER            reduce using rule 58 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 58 (expresion -> MENOS expresion .)
    COMA            reduce using rule 58 (expresion -> MENOS expresion .)

  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]
  ! MENOR           [ shift and go to state 100 ]
  ! MAYOR           [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! MENORIGUAL      [ shift and go to state 103 ]
  ! DIFERENTE       [ shift and go to state 104 ]
  ! IGUALIGUAL      [ shift and go to state 105 ]
  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! MULTIPLICACION  [ shift and go to state 108 ]
  ! DIVISION        [ shift and go to state 109 ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 112

    (63) expresion -> PIZQ expresion . PDER
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! shift/reduce conflict for PDER resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    PDER            shift and go to state 140
    OR              shift and go to state 98
    AND             shift and go to state 99
    MENOR           shift and go to state 100
    MAYOR           shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    DIFERENTE       shift and go to state 104
    IGUALIGUAL      shift and go to state 105
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    PUNTO           reduce using rule 86 (acceso_objeto -> expresion .)

  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 113

    (85) acceso_objeto -> acceso_objeto PUNTO . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    acceso_objeto                  shift and go to state 76
    expresion                      shift and go to state 141
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75

state 114

    (82) instancia_objeto -> NEW ID . PIZQ PDER
    (83) instancia_objeto -> NEW ID . PIZQ lista_expresiones PDER

    PIZQ            shift and go to state 142


state 115

    (78) array_instancia -> NEW tipo_dato . dimensiones
    (79) dimensiones -> . dimensiones dimension
    (80) dimensiones -> . dimension
    (81) dimension -> . CORIZQ expresion CORDER

    CORIZQ          shift and go to state 97

    dimensiones                    shift and go to state 143
    dimension                      shift and go to state 96

state 116

    (77) array_data -> CORIZQ lista_expresiones . CORDER
    (47) lista_expresiones -> lista_expresiones . COMA expresion

    CORDER          shift and go to state 144
    COMA            shift and go to state 145


state 117

    (48) lista_expresiones -> expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for CORDER resolved using rule 48 (lista_expresiones -> expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 48 (lista_expresiones -> expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 48 (lista_expresiones -> expresion .)
    CORDER          reduce using rule 48 (lista_expresiones -> expresion .)
    COMA            reduce using rule 48 (lista_expresiones -> expresion .)
    PDER            reduce using rule 48 (lista_expresiones -> expresion .)
    OR              shift and go to state 98
    AND             shift and go to state 99
    MENOR           shift and go to state 100
    MAYOR           shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    DIFERENTE       shift and go to state 104
    IGUALIGUAL      shift and go to state 105
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    PUNTO           reduce using rule 86 (acceso_objeto -> expresion .)

  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 118

    (35) print_inst -> PRINT PIZQ expresion . PDER
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! shift/reduce conflict for PDER resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    PDER            shift and go to state 146
    OR              shift and go to state 98
    AND             shift and go to state 99
    MENOR           shift and go to state 100
    MAYOR           shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    DIFERENTE       shift and go to state 104
    IGUALIGUAL      shift and go to state 105
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    PUNTO           reduce using rule 86 (acceso_objeto -> expresion .)

  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 119

    (30) declaracion_arreglo -> tipo_dato niveles ID . IGUAL expresion

    IGUAL           shift and go to state 147


state 120

    (31) niveles -> niveles nivel .

    ID              reduce using rule 31 (niveles -> niveles nivel .)
    CORIZQ          reduce using rule 31 (niveles -> niveles nivel .)


state 121

    (33) nivel -> CORIZQ CORDER .

    ID              reduce using rule 33 (nivel -> CORIZQ CORDER .)
    CORIZQ          reduce using rule 33 (nivel -> CORIZQ CORDER .)


state 122

    (34) declaracion_objeto -> ID ID IGUAL . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 148
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 123

    (36) llamada -> ID PIZQ PDER .

    PTCOMA          reduce using rule 36 (llamada -> ID PIZQ PDER .)
    OR              reduce using rule 36 (llamada -> ID PIZQ PDER .)
    AND             reduce using rule 36 (llamada -> ID PIZQ PDER .)
    MENOR           reduce using rule 36 (llamada -> ID PIZQ PDER .)
    MAYOR           reduce using rule 36 (llamada -> ID PIZQ PDER .)
    MAYORIGUAL      reduce using rule 36 (llamada -> ID PIZQ PDER .)
    MENORIGUAL      reduce using rule 36 (llamada -> ID PIZQ PDER .)
    DIFERENTE       reduce using rule 36 (llamada -> ID PIZQ PDER .)
    IGUALIGUAL      reduce using rule 36 (llamada -> ID PIZQ PDER .)
    MAS             reduce using rule 36 (llamada -> ID PIZQ PDER .)
    MENOS           reduce using rule 36 (llamada -> ID PIZQ PDER .)
    MULTIPLICACION  reduce using rule 36 (llamada -> ID PIZQ PDER .)
    DIVISION        reduce using rule 36 (llamada -> ID PIZQ PDER .)
    PUNTO           reduce using rule 36 (llamada -> ID PIZQ PDER .)
    PDER            reduce using rule 36 (llamada -> ID PIZQ PDER .)
    CORDER          reduce using rule 36 (llamada -> ID PIZQ PDER .)
    COMA            reduce using rule 36 (llamada -> ID PIZQ PDER .)


state 124

    (37) llamada -> ID PIZQ lista_expresiones . PDER
    (47) lista_expresiones -> lista_expresiones . COMA expresion

    PDER            shift and go to state 149
    COMA            shift and go to state 145


state 125

    (40) if_instr -> IF_W PIZQ expresion . PDER bloque
    (41) if_instr -> IF_W PIZQ expresion . PDER bloque ELSE_W bloque
    (42) if_instr -> IF_W PIZQ expresion . PDER bloque listaelseif
    (43) if_instr -> IF_W PIZQ expresion . PDER bloque listaelseif ELSE_W bloque
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! shift/reduce conflict for PDER resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    PDER            shift and go to state 150
    OR              shift and go to state 98
    AND             shift and go to state 99
    MENOR           shift and go to state 100
    MAYOR           shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    DIFERENTE       shift and go to state 104
    IGUALIGUAL      shift and go to state 105
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    PUNTO           reduce using rule 86 (acceso_objeto -> expresion .)

  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 126

    (79) dimensiones -> dimensiones dimension .

    CORIZQ          reduce using rule 79 (dimensiones -> dimensiones dimension .)
    OR              reduce using rule 79 (dimensiones -> dimensiones dimension .)
    AND             reduce using rule 79 (dimensiones -> dimensiones dimension .)
    MENOR           reduce using rule 79 (dimensiones -> dimensiones dimension .)
    MAYOR           reduce using rule 79 (dimensiones -> dimensiones dimension .)
    MAYORIGUAL      reduce using rule 79 (dimensiones -> dimensiones dimension .)
    MENORIGUAL      reduce using rule 79 (dimensiones -> dimensiones dimension .)
    DIFERENTE       reduce using rule 79 (dimensiones -> dimensiones dimension .)
    IGUALIGUAL      reduce using rule 79 (dimensiones -> dimensiones dimension .)
    MAS             reduce using rule 79 (dimensiones -> dimensiones dimension .)
    MENOS           reduce using rule 79 (dimensiones -> dimensiones dimension .)
    MULTIPLICACION  reduce using rule 79 (dimensiones -> dimensiones dimension .)
    DIVISION        reduce using rule 79 (dimensiones -> dimensiones dimension .)
    PTCOMA          reduce using rule 79 (dimensiones -> dimensiones dimension .)
    PUNTO           reduce using rule 79 (dimensiones -> dimensiones dimension .)
    PDER            reduce using rule 79 (dimensiones -> dimensiones dimension .)
    CORDER          reduce using rule 79 (dimensiones -> dimensiones dimension .)
    COMA            reduce using rule 79 (dimensiones -> dimensiones dimension .)


state 127

    (81) dimension -> CORIZQ expresion . CORDER
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! shift/reduce conflict for CORDER resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    CORDER          shift and go to state 151
    OR              shift and go to state 98
    AND             shift and go to state 99
    MENOR           shift and go to state 100
    MAYOR           shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    DIFERENTE       shift and go to state 104
    IGUALIGUAL      shift and go to state 105
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    PUNTO           reduce using rule 86 (acceso_objeto -> expresion .)

  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 128

    (49) expresion -> expresion OR expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 49 (expresion -> expresion OR expresion .)
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 49 (expresion -> expresion OR expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 49 (expresion -> expresion OR expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 49 (expresion -> expresion OR expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 49 (expresion -> expresion OR expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 49 (expresion -> expresion OR expresion .)
    OR              reduce using rule 49 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 49 (expresion -> expresion OR expresion .)
    PUNTO           reduce using rule 49 (expresion -> expresion OR expresion .)
    PDER            reduce using rule 49 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 49 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 49 (expresion -> expresion OR expresion .)
    AND             shift and go to state 99
    MENOR           shift and go to state 100
    MAYOR           shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    DIFERENTE       shift and go to state 104
    IGUALIGUAL      shift and go to state 105
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109

  ! AND             [ reduce using rule 49 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 49 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 49 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 49 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 49 (expresion -> expresion OR expresion .) ]
  ! DIFERENTE       [ reduce using rule 49 (expresion -> expresion OR expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 49 (expresion -> expresion OR expresion .) ]
  ! MAS             [ reduce using rule 49 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 49 (expresion -> expresion OR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 49 (expresion -> expresion OR expresion .) ]
  ! DIVISION        [ reduce using rule 49 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 98 ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 129

    (50) expresion -> expresion AND expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 50 (expresion -> expresion AND expresion .)
  ! reduce/reduce conflict for AND resolved using rule 50 (expresion -> expresion AND expresion .)
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 50 (expresion -> expresion AND expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 50 (expresion -> expresion AND expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 50 (expresion -> expresion AND expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 50 (expresion -> expresion AND expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 50 (expresion -> expresion AND expresion .)
    OR              reduce using rule 50 (expresion -> expresion AND expresion .)
    AND             reduce using rule 50 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 50 (expresion -> expresion AND expresion .)
    PUNTO           reduce using rule 50 (expresion -> expresion AND expresion .)
    PDER            reduce using rule 50 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 50 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 50 (expresion -> expresion AND expresion .)
    MENOR           shift and go to state 100
    MAYOR           shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    DIFERENTE       shift and go to state 104
    IGUALIGUAL      shift and go to state 105
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109

  ! MENOR           [ reduce using rule 50 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 50 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 50 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 50 (expresion -> expresion AND expresion .) ]
  ! DIFERENTE       [ reduce using rule 50 (expresion -> expresion AND expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 50 (expresion -> expresion AND expresion .) ]
  ! MAS             [ reduce using rule 50 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 50 (expresion -> expresion AND expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 50 (expresion -> expresion AND expresion .) ]
  ! DIVISION        [ reduce using rule 50 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 130

    (52) expresion -> expresion MENOR expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 52 (expresion -> expresion MENOR expresion .)
  ! reduce/reduce conflict for AND resolved using rule 52 (expresion -> expresion MENOR expresion .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 52 (expresion -> expresion MENOR expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 52 (expresion -> expresion MENOR expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 52 (expresion -> expresion MENOR expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 52 (expresion -> expresion MENOR expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 52 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 52 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 52 (expresion -> expresion MENOR expresion .)
    PTCOMA          reduce using rule 52 (expresion -> expresion MENOR expresion .)
    PUNTO           reduce using rule 52 (expresion -> expresion MENOR expresion .)
    PDER            reduce using rule 52 (expresion -> expresion MENOR expresion .)
    CORDER          reduce using rule 52 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 52 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MENOR           reduce using rule 86 (acceso_objeto -> expresion .)
    MAYOR           reduce using rule 86 (acceso_objeto -> expresion .)
    MAYORIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)
    MENORIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)
    DIFERENTE       reduce using rule 86 (acceso_objeto -> expresion .)
    IGUALIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)

  ! MENOR           [ reduce using rule 52 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ reduce using rule 52 (expresion -> expresion MENOR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 52 (expresion -> expresion MENOR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 52 (expresion -> expresion MENOR expresion .) ]
  ! DIFERENTE       [ reduce using rule 52 (expresion -> expresion MENOR expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 52 (expresion -> expresion MENOR expresion .) ]
  ! MAS             [ reduce using rule 52 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 52 (expresion -> expresion MENOR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 52 (expresion -> expresion MENOR expresion .) ]
  ! DIVISION        [ reduce using rule 52 (expresion -> expresion MENOR expresion .) ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]
  ! MENOR           [ shift and go to state 100 ]
  ! MAYOR           [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! MENORIGUAL      [ shift and go to state 103 ]
  ! DIFERENTE       [ shift and go to state 104 ]
  ! IGUALIGUAL      [ shift and go to state 105 ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 131

    (53) expresion -> expresion MAYOR expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 53 (expresion -> expresion MAYOR expresion .)
  ! reduce/reduce conflict for AND resolved using rule 53 (expresion -> expresion MAYOR expresion .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 53 (expresion -> expresion MAYOR expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 53 (expresion -> expresion MAYOR expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 53 (expresion -> expresion MAYOR expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 53 (expresion -> expresion MAYOR expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 53 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 53 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 53 (expresion -> expresion MAYOR expresion .)
    PTCOMA          reduce using rule 53 (expresion -> expresion MAYOR expresion .)
    PUNTO           reduce using rule 53 (expresion -> expresion MAYOR expresion .)
    PDER            reduce using rule 53 (expresion -> expresion MAYOR expresion .)
    CORDER          reduce using rule 53 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 53 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MENOR           reduce using rule 86 (acceso_objeto -> expresion .)
    MAYOR           reduce using rule 86 (acceso_objeto -> expresion .)
    MAYORIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)
    MENORIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)
    DIFERENTE       reduce using rule 86 (acceso_objeto -> expresion .)
    IGUALIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)

  ! MENOR           [ reduce using rule 53 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ reduce using rule 53 (expresion -> expresion MAYOR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 53 (expresion -> expresion MAYOR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 53 (expresion -> expresion MAYOR expresion .) ]
  ! DIFERENTE       [ reduce using rule 53 (expresion -> expresion MAYOR expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 53 (expresion -> expresion MAYOR expresion .) ]
  ! MAS             [ reduce using rule 53 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 53 (expresion -> expresion MAYOR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 53 (expresion -> expresion MAYOR expresion .) ]
  ! DIVISION        [ reduce using rule 53 (expresion -> expresion MAYOR expresion .) ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]
  ! MENOR           [ shift and go to state 100 ]
  ! MAYOR           [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! MENORIGUAL      [ shift and go to state 103 ]
  ! DIFERENTE       [ shift and go to state 104 ]
  ! IGUALIGUAL      [ shift and go to state 105 ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 132

    (54) expresion -> expresion MAYORIGUAL expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
  ! reduce/reduce conflict for AND resolved using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
    PTCOMA          reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
    PUNTO           reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
    PDER            reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
    CORDER          reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MENOR           reduce using rule 86 (acceso_objeto -> expresion .)
    MAYOR           reduce using rule 86 (acceso_objeto -> expresion .)
    MAYORIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)
    MENORIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)
    DIFERENTE       reduce using rule 86 (acceso_objeto -> expresion .)
    IGUALIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)

  ! MENOR           [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIFERENTE       [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAS             [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]
  ! MENOR           [ shift and go to state 100 ]
  ! MAYOR           [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! MENORIGUAL      [ shift and go to state 103 ]
  ! DIFERENTE       [ shift and go to state 104 ]
  ! IGUALIGUAL      [ shift and go to state 105 ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 133

    (55) expresion -> expresion MENORIGUAL expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 55 (expresion -> expresion MENORIGUAL expresion .)
  ! reduce/reduce conflict for AND resolved using rule 55 (expresion -> expresion MENORIGUAL expresion .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 55 (expresion -> expresion MENORIGUAL expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 55 (expresion -> expresion MENORIGUAL expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 55 (expresion -> expresion MENORIGUAL expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 55 (expresion -> expresion MENORIGUAL expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 55 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 55 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 55 (expresion -> expresion MENORIGUAL expresion .)
    PTCOMA          reduce using rule 55 (expresion -> expresion MENORIGUAL expresion .)
    PUNTO           reduce using rule 55 (expresion -> expresion MENORIGUAL expresion .)
    PDER            reduce using rule 55 (expresion -> expresion MENORIGUAL expresion .)
    CORDER          reduce using rule 55 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 55 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MENOR           reduce using rule 86 (acceso_objeto -> expresion .)
    MAYOR           reduce using rule 86 (acceso_objeto -> expresion .)
    MAYORIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)
    MENORIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)
    DIFERENTE       reduce using rule 86 (acceso_objeto -> expresion .)
    IGUALIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)

  ! MENOR           [ reduce using rule 55 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 55 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 55 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 55 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIFERENTE       [ reduce using rule 55 (expresion -> expresion MENORIGUAL expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 55 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAS             [ reduce using rule 55 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 55 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 55 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 55 (expresion -> expresion MENORIGUAL expresion .) ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]
  ! MENOR           [ shift and go to state 100 ]
  ! MAYOR           [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! MENORIGUAL      [ shift and go to state 103 ]
  ! DIFERENTE       [ shift and go to state 104 ]
  ! IGUALIGUAL      [ shift and go to state 105 ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 134

    (56) expresion -> expresion DIFERENTE expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 56 (expresion -> expresion DIFERENTE expresion .)
  ! reduce/reduce conflict for AND resolved using rule 56 (expresion -> expresion DIFERENTE expresion .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 56 (expresion -> expresion DIFERENTE expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 56 (expresion -> expresion DIFERENTE expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 56 (expresion -> expresion DIFERENTE expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 56 (expresion -> expresion DIFERENTE expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 56 (expresion -> expresion DIFERENTE expresion .)
    OR              reduce using rule 56 (expresion -> expresion DIFERENTE expresion .)
    AND             reduce using rule 56 (expresion -> expresion DIFERENTE expresion .)
    PTCOMA          reduce using rule 56 (expresion -> expresion DIFERENTE expresion .)
    PUNTO           reduce using rule 56 (expresion -> expresion DIFERENTE expresion .)
    PDER            reduce using rule 56 (expresion -> expresion DIFERENTE expresion .)
    CORDER          reduce using rule 56 (expresion -> expresion DIFERENTE expresion .)
    COMA            reduce using rule 56 (expresion -> expresion DIFERENTE expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MENOR           reduce using rule 86 (acceso_objeto -> expresion .)
    MAYOR           reduce using rule 86 (acceso_objeto -> expresion .)
    MAYORIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)
    MENORIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)
    DIFERENTE       reduce using rule 86 (acceso_objeto -> expresion .)
    IGUALIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)

  ! MENOR           [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYOR           [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENORIGUAL      [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIFERENTE       [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAS             [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENOS           [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIVISION        [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]
  ! MENOR           [ shift and go to state 100 ]
  ! MAYOR           [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! MENORIGUAL      [ shift and go to state 103 ]
  ! DIFERENTE       [ shift and go to state 104 ]
  ! IGUALIGUAL      [ shift and go to state 105 ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 135

    (57) expresion -> expresion IGUALIGUAL expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 57 (expresion -> expresion IGUALIGUAL expresion .)
  ! reduce/reduce conflict for AND resolved using rule 57 (expresion -> expresion IGUALIGUAL expresion .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 57 (expresion -> expresion IGUALIGUAL expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 57 (expresion -> expresion IGUALIGUAL expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 57 (expresion -> expresion IGUALIGUAL expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 57 (expresion -> expresion IGUALIGUAL expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 57 (expresion -> expresion IGUALIGUAL expresion .)
    OR              reduce using rule 57 (expresion -> expresion IGUALIGUAL expresion .)
    AND             reduce using rule 57 (expresion -> expresion IGUALIGUAL expresion .)
    PTCOMA          reduce using rule 57 (expresion -> expresion IGUALIGUAL expresion .)
    PUNTO           reduce using rule 57 (expresion -> expresion IGUALIGUAL expresion .)
    PDER            reduce using rule 57 (expresion -> expresion IGUALIGUAL expresion .)
    CORDER          reduce using rule 57 (expresion -> expresion IGUALIGUAL expresion .)
    COMA            reduce using rule 57 (expresion -> expresion IGUALIGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MENOR           reduce using rule 86 (acceso_objeto -> expresion .)
    MAYOR           reduce using rule 86 (acceso_objeto -> expresion .)
    MAYORIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)
    MENORIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)
    DIFERENTE       reduce using rule 86 (acceso_objeto -> expresion .)
    IGUALIGUAL      reduce using rule 86 (acceso_objeto -> expresion .)

  ! MENOR           [ reduce using rule 57 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 57 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 57 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 57 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! DIFERENTE       [ reduce using rule 57 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 57 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MAS             [ reduce using rule 57 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 57 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 57 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 57 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]
  ! MENOR           [ shift and go to state 100 ]
  ! MAYOR           [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! MENORIGUAL      [ shift and go to state 103 ]
  ! DIFERENTE       [ shift and go to state 104 ]
  ! IGUALIGUAL      [ shift and go to state 105 ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 136

    (59) expresion -> expresion MAS expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 59 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for AND resolved using rule 59 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for MENOR resolved using rule 59 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 59 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 59 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 59 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 59 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 59 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 59 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 59 (expresion -> expresion MAS expresion .)
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 59 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 59 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 59 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 59 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 59 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 59 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 59 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 59 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 59 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 59 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 59 (expresion -> expresion MAS expresion .)
    DIFERENTE       reduce using rule 59 (expresion -> expresion MAS expresion .)
    IGUALIGUAL      reduce using rule 59 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 59 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 59 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 59 (expresion -> expresion MAS expresion .)
    PUNTO           reduce using rule 59 (expresion -> expresion MAS expresion .)
    PDER            reduce using rule 59 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 59 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 59 (expresion -> expresion MAS expresion .)
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109

  ! MULTIPLICACION  [ reduce using rule 59 (expresion -> expresion MAS expresion .) ]
  ! DIVISION        [ reduce using rule 59 (expresion -> expresion MAS expresion .) ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]
  ! MENOR           [ shift and go to state 100 ]
  ! MAYOR           [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! MENORIGUAL      [ shift and go to state 103 ]
  ! DIFERENTE       [ shift and go to state 104 ]
  ! IGUALIGUAL      [ shift and go to state 105 ]
  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 137

    (60) expresion -> expresion MENOS expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 60 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for AND resolved using rule 60 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MENOR resolved using rule 60 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 60 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 60 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 60 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 60 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 60 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 60 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 60 (expresion -> expresion MENOS expresion .)
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 60 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 60 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 60 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 60 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 60 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 60 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 60 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 60 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 60 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 60 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 60 (expresion -> expresion MENOS expresion .)
    DIFERENTE       reduce using rule 60 (expresion -> expresion MENOS expresion .)
    IGUALIGUAL      reduce using rule 60 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 60 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 60 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 60 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 60 (expresion -> expresion MENOS expresion .)
    PDER            reduce using rule 60 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 60 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 60 (expresion -> expresion MENOS expresion .)
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109

  ! MULTIPLICACION  [ reduce using rule 60 (expresion -> expresion MENOS expresion .) ]
  ! DIVISION        [ reduce using rule 60 (expresion -> expresion MENOS expresion .) ]
  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]
  ! MENOR           [ shift and go to state 100 ]
  ! MAYOR           [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! MENORIGUAL      [ shift and go to state 103 ]
  ! DIFERENTE       [ shift and go to state 104 ]
  ! IGUALIGUAL      [ shift and go to state 105 ]
  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 138

    (61) expresion -> expresion MULTIPLICACION expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for AND resolved using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for MENOR resolved using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for DIVISION resolved using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
    OR              reduce using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
    AND             reduce using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
    MENOR           reduce using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
    MAYOR           reduce using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
    MAYORIGUAL      reduce using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
    MENORIGUAL      reduce using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
    DIFERENTE       reduce using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
    IGUALIGUAL      reduce using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
    MAS             reduce using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
    MENOS           reduce using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
    MULTIPLICACION  reduce using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
    DIVISION        reduce using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
    PTCOMA          reduce using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
    PUNTO           reduce using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
    PDER            reduce using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
    CORDER          reduce using rule 61 (expresion -> expresion MULTIPLICACION expresion .)
    COMA            reduce using rule 61 (expresion -> expresion MULTIPLICACION expresion .)

  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]
  ! MENOR           [ shift and go to state 100 ]
  ! MAYOR           [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! MENORIGUAL      [ shift and go to state 103 ]
  ! DIFERENTE       [ shift and go to state 104 ]
  ! IGUALIGUAL      [ shift and go to state 105 ]
  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! MULTIPLICACION  [ shift and go to state 108 ]
  ! DIVISION        [ shift and go to state 109 ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 139

    (62) expresion -> expresion DIVISION expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 62 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for AND resolved using rule 62 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for MENOR resolved using rule 62 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 62 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 62 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 62 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 62 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 62 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 62 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 62 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 62 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for DIVISION resolved using rule 62 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 62 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 62 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 62 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 62 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 62 (expresion -> expresion DIVISION expresion .)
    OR              reduce using rule 62 (expresion -> expresion DIVISION expresion .)
    AND             reduce using rule 62 (expresion -> expresion DIVISION expresion .)
    MENOR           reduce using rule 62 (expresion -> expresion DIVISION expresion .)
    MAYOR           reduce using rule 62 (expresion -> expresion DIVISION expresion .)
    MAYORIGUAL      reduce using rule 62 (expresion -> expresion DIVISION expresion .)
    MENORIGUAL      reduce using rule 62 (expresion -> expresion DIVISION expresion .)
    DIFERENTE       reduce using rule 62 (expresion -> expresion DIVISION expresion .)
    IGUALIGUAL      reduce using rule 62 (expresion -> expresion DIVISION expresion .)
    MAS             reduce using rule 62 (expresion -> expresion DIVISION expresion .)
    MENOS           reduce using rule 62 (expresion -> expresion DIVISION expresion .)
    MULTIPLICACION  reduce using rule 62 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 62 (expresion -> expresion DIVISION expresion .)
    PTCOMA          reduce using rule 62 (expresion -> expresion DIVISION expresion .)
    PUNTO           reduce using rule 62 (expresion -> expresion DIVISION expresion .)
    PDER            reduce using rule 62 (expresion -> expresion DIVISION expresion .)
    CORDER          reduce using rule 62 (expresion -> expresion DIVISION expresion .)
    COMA            reduce using rule 62 (expresion -> expresion DIVISION expresion .)

  ! OR              [ shift and go to state 98 ]
  ! AND             [ shift and go to state 99 ]
  ! MENOR           [ shift and go to state 100 ]
  ! MAYOR           [ shift and go to state 101 ]
  ! MAYORIGUAL      [ shift and go to state 102 ]
  ! MENORIGUAL      [ shift and go to state 103 ]
  ! DIFERENTE       [ shift and go to state 104 ]
  ! IGUALIGUAL      [ shift and go to state 105 ]
  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! MULTIPLICACION  [ shift and go to state 108 ]
  ! DIVISION        [ shift and go to state 109 ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 140

    (63) expresion -> PIZQ expresion PDER .

    OR              reduce using rule 63 (expresion -> PIZQ expresion PDER .)
    AND             reduce using rule 63 (expresion -> PIZQ expresion PDER .)
    MENOR           reduce using rule 63 (expresion -> PIZQ expresion PDER .)
    MAYOR           reduce using rule 63 (expresion -> PIZQ expresion PDER .)
    MAYORIGUAL      reduce using rule 63 (expresion -> PIZQ expresion PDER .)
    MENORIGUAL      reduce using rule 63 (expresion -> PIZQ expresion PDER .)
    DIFERENTE       reduce using rule 63 (expresion -> PIZQ expresion PDER .)
    IGUALIGUAL      reduce using rule 63 (expresion -> PIZQ expresion PDER .)
    MAS             reduce using rule 63 (expresion -> PIZQ expresion PDER .)
    MENOS           reduce using rule 63 (expresion -> PIZQ expresion PDER .)
    MULTIPLICACION  reduce using rule 63 (expresion -> PIZQ expresion PDER .)
    DIVISION        reduce using rule 63 (expresion -> PIZQ expresion PDER .)
    PTCOMA          reduce using rule 63 (expresion -> PIZQ expresion PDER .)
    PUNTO           reduce using rule 63 (expresion -> PIZQ expresion PDER .)
    PDER            reduce using rule 63 (expresion -> PIZQ expresion PDER .)
    CORDER          reduce using rule 63 (expresion -> PIZQ expresion PDER .)
    COMA            reduce using rule 63 (expresion -> PIZQ expresion PDER .)


state 141

    (85) acceso_objeto -> acceso_objeto PUNTO expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .)
    PTCOMA          reduce using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .)
    PUNTO           reduce using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .)
    PDER            reduce using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .)
    CORDER          reduce using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .)
    COMA            reduce using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .)
    OR              shift and go to state 98
    AND             shift and go to state 99
    MENOR           shift and go to state 100
    MAYOR           shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    DIFERENTE       shift and go to state 104
    IGUALIGUAL      shift and go to state 105
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109

  ! OR              [ reduce using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! AND             [ reduce using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! MENOR           [ reduce using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! MAYOR           [ reduce using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! MENORIGUAL      [ reduce using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! DIFERENTE       [ reduce using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! MAS             [ reduce using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! MENOS           [ reduce using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! DIVISION        [ reduce using rule 85 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 142

    (82) instancia_objeto -> NEW ID PIZQ . PDER
    (83) instancia_objeto -> NEW ID PIZQ . lista_expresiones PDER
    (47) lista_expresiones -> . lista_expresiones COMA expresion
    (48) lista_expresiones -> . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    PDER            shift and go to state 152
    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    lista_expresiones              shift and go to state 153
    expresion                      shift and go to state 117
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 143

    (78) array_instancia -> NEW tipo_dato dimensiones .
    (79) dimensiones -> dimensiones . dimension
    (81) dimension -> . CORIZQ expresion CORDER

    OR              reduce using rule 78 (array_instancia -> NEW tipo_dato dimensiones .)
    AND             reduce using rule 78 (array_instancia -> NEW tipo_dato dimensiones .)
    MENOR           reduce using rule 78 (array_instancia -> NEW tipo_dato dimensiones .)
    MAYOR           reduce using rule 78 (array_instancia -> NEW tipo_dato dimensiones .)
    MAYORIGUAL      reduce using rule 78 (array_instancia -> NEW tipo_dato dimensiones .)
    MENORIGUAL      reduce using rule 78 (array_instancia -> NEW tipo_dato dimensiones .)
    DIFERENTE       reduce using rule 78 (array_instancia -> NEW tipo_dato dimensiones .)
    IGUALIGUAL      reduce using rule 78 (array_instancia -> NEW tipo_dato dimensiones .)
    MAS             reduce using rule 78 (array_instancia -> NEW tipo_dato dimensiones .)
    MENOS           reduce using rule 78 (array_instancia -> NEW tipo_dato dimensiones .)
    MULTIPLICACION  reduce using rule 78 (array_instancia -> NEW tipo_dato dimensiones .)
    DIVISION        reduce using rule 78 (array_instancia -> NEW tipo_dato dimensiones .)
    PTCOMA          reduce using rule 78 (array_instancia -> NEW tipo_dato dimensiones .)
    PUNTO           reduce using rule 78 (array_instancia -> NEW tipo_dato dimensiones .)
    PDER            reduce using rule 78 (array_instancia -> NEW tipo_dato dimensiones .)
    CORDER          reduce using rule 78 (array_instancia -> NEW tipo_dato dimensiones .)
    COMA            reduce using rule 78 (array_instancia -> NEW tipo_dato dimensiones .)
    CORIZQ          shift and go to state 97

    dimension                      shift and go to state 126

state 144

    (77) array_data -> CORIZQ lista_expresiones CORDER .

    OR              reduce using rule 77 (array_data -> CORIZQ lista_expresiones CORDER .)
    AND             reduce using rule 77 (array_data -> CORIZQ lista_expresiones CORDER .)
    MENOR           reduce using rule 77 (array_data -> CORIZQ lista_expresiones CORDER .)
    MAYOR           reduce using rule 77 (array_data -> CORIZQ lista_expresiones CORDER .)
    MAYORIGUAL      reduce using rule 77 (array_data -> CORIZQ lista_expresiones CORDER .)
    MENORIGUAL      reduce using rule 77 (array_data -> CORIZQ lista_expresiones CORDER .)
    DIFERENTE       reduce using rule 77 (array_data -> CORIZQ lista_expresiones CORDER .)
    IGUALIGUAL      reduce using rule 77 (array_data -> CORIZQ lista_expresiones CORDER .)
    MAS             reduce using rule 77 (array_data -> CORIZQ lista_expresiones CORDER .)
    MENOS           reduce using rule 77 (array_data -> CORIZQ lista_expresiones CORDER .)
    MULTIPLICACION  reduce using rule 77 (array_data -> CORIZQ lista_expresiones CORDER .)
    DIVISION        reduce using rule 77 (array_data -> CORIZQ lista_expresiones CORDER .)
    PTCOMA          reduce using rule 77 (array_data -> CORIZQ lista_expresiones CORDER .)
    PUNTO           reduce using rule 77 (array_data -> CORIZQ lista_expresiones CORDER .)
    PDER            reduce using rule 77 (array_data -> CORIZQ lista_expresiones CORDER .)
    CORDER          reduce using rule 77 (array_data -> CORIZQ lista_expresiones CORDER .)
    COMA            reduce using rule 77 (array_data -> CORIZQ lista_expresiones CORDER .)


state 145

    (47) lista_expresiones -> lista_expresiones COMA . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 154
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 146

    (35) print_inst -> PRINT PIZQ expresion PDER .

    PTCOMA          reduce using rule 35 (print_inst -> PRINT PIZQ expresion PDER .)


state 147

    (30) declaracion_arreglo -> tipo_dato niveles ID IGUAL . expresion
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 155
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 148

    (34) declaracion_objeto -> ID ID IGUAL expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 34 (declaracion_objeto -> ID ID IGUAL expresion .)
    PTCOMA          reduce using rule 34 (declaracion_objeto -> ID ID IGUAL expresion .)
    OR              shift and go to state 98
    AND             shift and go to state 99
    MENOR           shift and go to state 100
    MAYOR           shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    DIFERENTE       shift and go to state 104
    IGUALIGUAL      shift and go to state 105
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    PUNTO           reduce using rule 86 (acceso_objeto -> expresion .)

  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 149

    (37) llamada -> ID PIZQ lista_expresiones PDER .

    PTCOMA          reduce using rule 37 (llamada -> ID PIZQ lista_expresiones PDER .)
    OR              reduce using rule 37 (llamada -> ID PIZQ lista_expresiones PDER .)
    AND             reduce using rule 37 (llamada -> ID PIZQ lista_expresiones PDER .)
    MENOR           reduce using rule 37 (llamada -> ID PIZQ lista_expresiones PDER .)
    MAYOR           reduce using rule 37 (llamada -> ID PIZQ lista_expresiones PDER .)
    MAYORIGUAL      reduce using rule 37 (llamada -> ID PIZQ lista_expresiones PDER .)
    MENORIGUAL      reduce using rule 37 (llamada -> ID PIZQ lista_expresiones PDER .)
    DIFERENTE       reduce using rule 37 (llamada -> ID PIZQ lista_expresiones PDER .)
    IGUALIGUAL      reduce using rule 37 (llamada -> ID PIZQ lista_expresiones PDER .)
    MAS             reduce using rule 37 (llamada -> ID PIZQ lista_expresiones PDER .)
    MENOS           reduce using rule 37 (llamada -> ID PIZQ lista_expresiones PDER .)
    MULTIPLICACION  reduce using rule 37 (llamada -> ID PIZQ lista_expresiones PDER .)
    DIVISION        reduce using rule 37 (llamada -> ID PIZQ lista_expresiones PDER .)
    PUNTO           reduce using rule 37 (llamada -> ID PIZQ lista_expresiones PDER .)
    PDER            reduce using rule 37 (llamada -> ID PIZQ lista_expresiones PDER .)
    CORDER          reduce using rule 37 (llamada -> ID PIZQ lista_expresiones PDER .)
    COMA            reduce using rule 37 (llamada -> ID PIZQ lista_expresiones PDER .)


state 150

    (40) if_instr -> IF_W PIZQ expresion PDER . bloque
    (41) if_instr -> IF_W PIZQ expresion PDER . bloque ELSE_W bloque
    (42) if_instr -> IF_W PIZQ expresion PDER . bloque listaelseif
    (43) if_instr -> IF_W PIZQ expresion PDER . bloque listaelseif ELSE_W bloque
    (14) bloque -> . LLAVEIZQ LLAVEDER
    (15) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 37

    bloque                         shift and go to state 156

state 151

    (81) dimension -> CORIZQ expresion CORDER .

    CORIZQ          reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)
    OR              reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)
    AND             reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)
    MENOR           reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)
    MAYOR           reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)
    MAYORIGUAL      reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)
    MENORIGUAL      reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)
    DIFERENTE       reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)
    IGUALIGUAL      reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)
    MULTIPLICACION  reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)
    DIVISION        reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)
    PUNTO           reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)
    PDER            reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 81 (dimension -> CORIZQ expresion CORDER .)


state 152

    (82) instancia_objeto -> NEW ID PIZQ PDER .

    OR              reduce using rule 82 (instancia_objeto -> NEW ID PIZQ PDER .)
    AND             reduce using rule 82 (instancia_objeto -> NEW ID PIZQ PDER .)
    MENOR           reduce using rule 82 (instancia_objeto -> NEW ID PIZQ PDER .)
    MAYOR           reduce using rule 82 (instancia_objeto -> NEW ID PIZQ PDER .)
    MAYORIGUAL      reduce using rule 82 (instancia_objeto -> NEW ID PIZQ PDER .)
    MENORIGUAL      reduce using rule 82 (instancia_objeto -> NEW ID PIZQ PDER .)
    DIFERENTE       reduce using rule 82 (instancia_objeto -> NEW ID PIZQ PDER .)
    IGUALIGUAL      reduce using rule 82 (instancia_objeto -> NEW ID PIZQ PDER .)
    MAS             reduce using rule 82 (instancia_objeto -> NEW ID PIZQ PDER .)
    MENOS           reduce using rule 82 (instancia_objeto -> NEW ID PIZQ PDER .)
    MULTIPLICACION  reduce using rule 82 (instancia_objeto -> NEW ID PIZQ PDER .)
    DIVISION        reduce using rule 82 (instancia_objeto -> NEW ID PIZQ PDER .)
    PTCOMA          reduce using rule 82 (instancia_objeto -> NEW ID PIZQ PDER .)
    PUNTO           reduce using rule 82 (instancia_objeto -> NEW ID PIZQ PDER .)
    PDER            reduce using rule 82 (instancia_objeto -> NEW ID PIZQ PDER .)
    CORDER          reduce using rule 82 (instancia_objeto -> NEW ID PIZQ PDER .)
    COMA            reduce using rule 82 (instancia_objeto -> NEW ID PIZQ PDER .)


state 153

    (83) instancia_objeto -> NEW ID PIZQ lista_expresiones . PDER
    (47) lista_expresiones -> lista_expresiones . COMA expresion

    PDER            shift and go to state 157
    COMA            shift and go to state 145


state 154

    (47) lista_expresiones -> lista_expresiones COMA expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for CORDER resolved using rule 47 (lista_expresiones -> lista_expresiones COMA expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 47 (lista_expresiones -> lista_expresiones COMA expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 47 (lista_expresiones -> lista_expresiones COMA expresion .)
    CORDER          reduce using rule 47 (lista_expresiones -> lista_expresiones COMA expresion .)
    COMA            reduce using rule 47 (lista_expresiones -> lista_expresiones COMA expresion .)
    PDER            reduce using rule 47 (lista_expresiones -> lista_expresiones COMA expresion .)
    OR              shift and go to state 98
    AND             shift and go to state 99
    MENOR           shift and go to state 100
    MAYOR           shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    DIFERENTE       shift and go to state 104
    IGUALIGUAL      shift and go to state 105
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    PUNTO           reduce using rule 86 (acceso_objeto -> expresion .)

  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 155

    (30) declaracion_arreglo -> tipo_dato niveles ID IGUAL expresion .
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 30 (declaracion_arreglo -> tipo_dato niveles ID IGUAL expresion .)
    PTCOMA          reduce using rule 30 (declaracion_arreglo -> tipo_dato niveles ID IGUAL expresion .)
    OR              shift and go to state 98
    AND             shift and go to state 99
    MENOR           shift and go to state 100
    MAYOR           shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    DIFERENTE       shift and go to state 104
    IGUALIGUAL      shift and go to state 105
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    PUNTO           reduce using rule 86 (acceso_objeto -> expresion .)

  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 156

    (40) if_instr -> IF_W PIZQ expresion PDER bloque .
    (41) if_instr -> IF_W PIZQ expresion PDER bloque . ELSE_W bloque
    (42) if_instr -> IF_W PIZQ expresion PDER bloque . listaelseif
    (43) if_instr -> IF_W PIZQ expresion PDER bloque . listaelseif ELSE_W bloque
    (44) listaelseif -> . listaelseif else_if
    (45) listaelseif -> . else_if
    (46) else_if -> . ELSE_W IF_W PIZQ expresion PDER bloque

    LLAVEDER        reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    PRINT           reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    ID              reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    RETURN_W        reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    IF_W            reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    INT             reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    STRING_TYPE     reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    BOOLEAN         reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    FLOAT           reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    OR              reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    AND             reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    MENOR           reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    MAYOR           reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    MAYORIGUAL      reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    MENORIGUAL      reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    DIFERENTE       reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    IGUALIGUAL      reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    MAS             reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    MENOS           reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    MULTIPLICACION  reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    DIVISION        reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    PTCOMA          reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    PUNTO           reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    PDER            reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    CORDER          reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    COMA            reduce using rule 40 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    ELSE_W          shift and go to state 158

    listaelseif                    shift and go to state 159
    else_if                        shift and go to state 160

state 157

    (83) instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .

    OR              reduce using rule 83 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    AND             reduce using rule 83 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    MENOR           reduce using rule 83 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    MAYOR           reduce using rule 83 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    MAYORIGUAL      reduce using rule 83 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    MENORIGUAL      reduce using rule 83 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    DIFERENTE       reduce using rule 83 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    IGUALIGUAL      reduce using rule 83 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    MAS             reduce using rule 83 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    MENOS           reduce using rule 83 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    MULTIPLICACION  reduce using rule 83 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    DIVISION        reduce using rule 83 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    PTCOMA          reduce using rule 83 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    PUNTO           reduce using rule 83 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    PDER            reduce using rule 83 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    CORDER          reduce using rule 83 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    COMA            reduce using rule 83 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)


state 158

    (41) if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W . bloque
    (46) else_if -> ELSE_W . IF_W PIZQ expresion PDER bloque
    (14) bloque -> . LLAVEIZQ LLAVEDER
    (15) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    IF_W            shift and go to state 161
    LLAVEIZQ        shift and go to state 37

    bloque                         shift and go to state 162

state 159

    (42) if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .
    (43) if_instr -> IF_W PIZQ expresion PDER bloque listaelseif . ELSE_W bloque
    (44) listaelseif -> listaelseif . else_if
    (46) else_if -> . ELSE_W IF_W PIZQ expresion PDER bloque

    LLAVEDER        reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    PRINT           reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    ID              reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    RETURN_W        reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    IF_W            reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    INT             reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    STRING_TYPE     reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    BOOLEAN         reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    FLOAT           reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    OR              reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    AND             reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    MENOR           reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    MAYOR           reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    MAYORIGUAL      reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    MENORIGUAL      reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    DIFERENTE       reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    IGUALIGUAL      reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    MAS             reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    MENOS           reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    MULTIPLICACION  reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    DIVISION        reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    PTCOMA          reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    PUNTO           reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    PDER            reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    CORDER          reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    COMA            reduce using rule 42 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    ELSE_W          shift and go to state 163

    else_if                        shift and go to state 164

state 160

    (45) listaelseif -> else_if .

    ELSE_W          reduce using rule 45 (listaelseif -> else_if .)
    LLAVEDER        reduce using rule 45 (listaelseif -> else_if .)
    PRINT           reduce using rule 45 (listaelseif -> else_if .)
    ID              reduce using rule 45 (listaelseif -> else_if .)
    RETURN_W        reduce using rule 45 (listaelseif -> else_if .)
    IF_W            reduce using rule 45 (listaelseif -> else_if .)
    INT             reduce using rule 45 (listaelseif -> else_if .)
    STRING_TYPE     reduce using rule 45 (listaelseif -> else_if .)
    BOOLEAN         reduce using rule 45 (listaelseif -> else_if .)
    FLOAT           reduce using rule 45 (listaelseif -> else_if .)
    OR              reduce using rule 45 (listaelseif -> else_if .)
    AND             reduce using rule 45 (listaelseif -> else_if .)
    MENOR           reduce using rule 45 (listaelseif -> else_if .)
    MAYOR           reduce using rule 45 (listaelseif -> else_if .)
    MAYORIGUAL      reduce using rule 45 (listaelseif -> else_if .)
    MENORIGUAL      reduce using rule 45 (listaelseif -> else_if .)
    DIFERENTE       reduce using rule 45 (listaelseif -> else_if .)
    IGUALIGUAL      reduce using rule 45 (listaelseif -> else_if .)
    MAS             reduce using rule 45 (listaelseif -> else_if .)
    MENOS           reduce using rule 45 (listaelseif -> else_if .)
    MULTIPLICACION  reduce using rule 45 (listaelseif -> else_if .)
    DIVISION        reduce using rule 45 (listaelseif -> else_if .)
    PTCOMA          reduce using rule 45 (listaelseif -> else_if .)
    PUNTO           reduce using rule 45 (listaelseif -> else_if .)
    PDER            reduce using rule 45 (listaelseif -> else_if .)
    CORDER          reduce using rule 45 (listaelseif -> else_if .)
    COMA            reduce using rule 45 (listaelseif -> else_if .)


state 161

    (46) else_if -> ELSE_W IF_W . PIZQ expresion PDER bloque

    PIZQ            shift and go to state 165


state 162

    (41) if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .

    LLAVEDER        reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    PRINT           reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    ID              reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    RETURN_W        reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    IF_W            reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    INT             reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    STRING_TYPE     reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    BOOLEAN         reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    FLOAT           reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    OR              reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    AND             reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    MENOR           reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    MAYOR           reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    MAYORIGUAL      reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    MENORIGUAL      reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    DIFERENTE       reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    IGUALIGUAL      reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    MAS             reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    MENOS           reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    MULTIPLICACION  reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    DIVISION        reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    PTCOMA          reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    PUNTO           reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    PDER            reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    CORDER          reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    COMA            reduce using rule 41 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)


state 163

    (43) if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W . bloque
    (46) else_if -> ELSE_W . IF_W PIZQ expresion PDER bloque
    (14) bloque -> . LLAVEIZQ LLAVEDER
    (15) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    IF_W            shift and go to state 161
    LLAVEIZQ        shift and go to state 37

    bloque                         shift and go to state 166

state 164

    (44) listaelseif -> listaelseif else_if .

    ELSE_W          reduce using rule 44 (listaelseif -> listaelseif else_if .)
    LLAVEDER        reduce using rule 44 (listaelseif -> listaelseif else_if .)
    PRINT           reduce using rule 44 (listaelseif -> listaelseif else_if .)
    ID              reduce using rule 44 (listaelseif -> listaelseif else_if .)
    RETURN_W        reduce using rule 44 (listaelseif -> listaelseif else_if .)
    IF_W            reduce using rule 44 (listaelseif -> listaelseif else_if .)
    INT             reduce using rule 44 (listaelseif -> listaelseif else_if .)
    STRING_TYPE     reduce using rule 44 (listaelseif -> listaelseif else_if .)
    BOOLEAN         reduce using rule 44 (listaelseif -> listaelseif else_if .)
    FLOAT           reduce using rule 44 (listaelseif -> listaelseif else_if .)
    OR              reduce using rule 44 (listaelseif -> listaelseif else_if .)
    AND             reduce using rule 44 (listaelseif -> listaelseif else_if .)
    MENOR           reduce using rule 44 (listaelseif -> listaelseif else_if .)
    MAYOR           reduce using rule 44 (listaelseif -> listaelseif else_if .)
    MAYORIGUAL      reduce using rule 44 (listaelseif -> listaelseif else_if .)
    MENORIGUAL      reduce using rule 44 (listaelseif -> listaelseif else_if .)
    DIFERENTE       reduce using rule 44 (listaelseif -> listaelseif else_if .)
    IGUALIGUAL      reduce using rule 44 (listaelseif -> listaelseif else_if .)
    MAS             reduce using rule 44 (listaelseif -> listaelseif else_if .)
    MENOS           reduce using rule 44 (listaelseif -> listaelseif else_if .)
    MULTIPLICACION  reduce using rule 44 (listaelseif -> listaelseif else_if .)
    DIVISION        reduce using rule 44 (listaelseif -> listaelseif else_if .)
    PTCOMA          reduce using rule 44 (listaelseif -> listaelseif else_if .)
    PUNTO           reduce using rule 44 (listaelseif -> listaelseif else_if .)
    PDER            reduce using rule 44 (listaelseif -> listaelseif else_if .)
    CORDER          reduce using rule 44 (listaelseif -> listaelseif else_if .)
    COMA            reduce using rule 44 (listaelseif -> listaelseif else_if .)


state 165

    (46) else_if -> ELSE_W IF_W PIZQ . expresion PDER bloque
    (49) expresion -> . expresion OR expresion
    (50) expresion -> . expresion AND expresion
    (51) expresion -> . NOT expresion
    (52) expresion -> . expresion MENOR expresion
    (53) expresion -> . expresion MAYOR expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion MENORIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . expresion IGUALIGUAL expresion
    (58) expresion -> . MENOS expresion
    (59) expresion -> . expresion MAS expresion
    (60) expresion -> . expresion MENOS expresion
    (61) expresion -> . expresion MULTIPLICACION expresion
    (62) expresion -> . expresion DIVISION expresion
    (63) expresion -> . PIZQ expresion PDER
    (64) expresion -> . ENTERO
    (65) expresion -> . DECIMAL
    (66) expresion -> . ID
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . llamada
    (71) expresion -> . acceso_objeto_expresion
    (72) expresion -> . acceso_array_expresion
    (73) expresion -> . instancia_objeto
    (74) expresion -> . array_data
    (75) expresion -> . array_instancia
    (76) expresion -> . if_instr
    (36) llamada -> . ID PIZQ PDER
    (37) llamada -> . ID PIZQ lista_expresiones PDER
    (84) acceso_objeto_expresion -> . acceso_objeto
    (87) acceso_array_expresion -> . ID dimensiones
    (82) instancia_objeto -> . NEW ID PIZQ PDER
    (83) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (77) array_data -> . CORIZQ lista_expresiones CORDER
    (78) array_instancia -> . NEW tipo_dato dimensiones
    (40) if_instr -> . IF_W PIZQ expresion PDER bloque
    (41) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (42) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (85) acceso_objeto -> . acceso_objeto PUNTO expresion
    (86) acceso_objeto -> . expresion

    NOT             shift and go to state 61
    MENOS           shift and go to state 62
    PIZQ            shift and go to state 63
    ENTERO          shift and go to state 64
    DECIMAL         shift and go to state 65
    ID              shift and go to state 59
    CADENA          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NEW             shift and go to state 77
    CORIZQ          shift and go to state 78
    IF_W            shift and go to state 56

    expresion                      shift and go to state 167
    llamada                        shift and go to state 69
    acceso_objeto_expresion        shift and go to state 70
    acceso_array_expresion         shift and go to state 71
    instancia_objeto               shift and go to state 72
    array_data                     shift and go to state 73
    array_instancia                shift and go to state 74
    if_instr                       shift and go to state 75
    acceso_objeto                  shift and go to state 76

state 166

    (43) if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .

    LLAVEDER        reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    PRINT           reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    ID              reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    RETURN_W        reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    IF_W            reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    INT             reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    STRING_TYPE     reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    BOOLEAN         reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    FLOAT           reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    OR              reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    AND             reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    MENOR           reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    MAYOR           reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    MAYORIGUAL      reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    MENORIGUAL      reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    DIFERENTE       reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    IGUALIGUAL      reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    MAS             reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    MENOS           reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    MULTIPLICACION  reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    DIVISION        reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    PTCOMA          reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    PUNTO           reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    PDER            reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    CORDER          reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    COMA            reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)


state 167

    (46) else_if -> ELSE_W IF_W PIZQ expresion . PDER bloque
    (49) expresion -> expresion . OR expresion
    (50) expresion -> expresion . AND expresion
    (52) expresion -> expresion . MENOR expresion
    (53) expresion -> expresion . MAYOR expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . MENORIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (57) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . MAS expresion
    (60) expresion -> expresion . MENOS expresion
    (61) expresion -> expresion . MULTIPLICACION expresion
    (62) expresion -> expresion . DIVISION expresion
    (86) acceso_objeto -> expresion .

  ! shift/reduce conflict for PDER resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    PDER            shift and go to state 168
    OR              shift and go to state 98
    AND             shift and go to state 99
    MENOR           shift and go to state 100
    MAYOR           shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    DIFERENTE       shift and go to state 104
    IGUALIGUAL      shift and go to state 105
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    PUNTO           reduce using rule 86 (acceso_objeto -> expresion .)

  ! PDER            [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! OR              [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 86 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 86 (acceso_objeto -> expresion .) ]


state 168

    (46) else_if -> ELSE_W IF_W PIZQ expresion PDER . bloque
    (14) bloque -> . LLAVEIZQ LLAVEDER
    (15) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 37

    bloque                         shift and go to state 169

state 169

    (46) else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .

    ELSE_W          reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    LLAVEDER        reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    PRINT           reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    ID              reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    RETURN_W        reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    IF_W            reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    INT             reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    STRING_TYPE     reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    BOOLEAN         reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    FLOAT           reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    OR              reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    AND             reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    MENOR           reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    MAYOR           reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    MAYORIGUAL      reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    MENORIGUAL      reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    DIFERENTE       reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    IGUALIGUAL      reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    MAS             reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    MENOS           reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    MULTIPLICACION  reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    DIVISION        reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    PTCOMA          reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    PUNTO           reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    PDER            reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    CORDER          reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    COMA            reduce using rule 46 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OR in state 60 resolved as shift
WARNING: shift/reduce conflict for AND in state 60 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 60 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 60 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 60 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for MAS in state 60 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 60 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 60 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 60 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 76 resolved as shift
WARNING: shift/reduce conflict for OR in state 93 resolved as shift
WARNING: shift/reduce conflict for AND in state 93 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 93 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 93 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 93 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 93 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 93 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 93 resolved as shift
WARNING: shift/reduce conflict for MAS in state 93 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 93 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 93 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 93 resolved as shift
WARNING: shift/reduce conflict for PDER in state 112 resolved as shift
WARNING: shift/reduce conflict for OR in state 112 resolved as shift
WARNING: shift/reduce conflict for AND in state 112 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 112 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 112 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 112 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 112 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 112 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 112 resolved as shift
WARNING: shift/reduce conflict for MAS in state 112 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 112 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 112 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 112 resolved as shift
WARNING: shift/reduce conflict for OR in state 117 resolved as shift
WARNING: shift/reduce conflict for AND in state 117 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 117 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 117 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 117 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for MAS in state 117 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 117 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 117 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 117 resolved as shift
WARNING: shift/reduce conflict for PDER in state 118 resolved as shift
WARNING: shift/reduce conflict for OR in state 118 resolved as shift
WARNING: shift/reduce conflict for AND in state 118 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 118 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 118 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 118 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for MAS in state 118 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 118 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 118 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 118 resolved as shift
WARNING: shift/reduce conflict for PDER in state 125 resolved as shift
WARNING: shift/reduce conflict for OR in state 125 resolved as shift
WARNING: shift/reduce conflict for AND in state 125 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 125 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 125 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 125 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for MAS in state 125 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 125 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 125 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 125 resolved as shift
WARNING: shift/reduce conflict for CORDER in state 127 resolved as shift
WARNING: shift/reduce conflict for OR in state 127 resolved as shift
WARNING: shift/reduce conflict for AND in state 127 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 127 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 127 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 127 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 127 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 127 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 127 resolved as shift
WARNING: shift/reduce conflict for MAS in state 127 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 127 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 127 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 127 resolved as shift
WARNING: shift/reduce conflict for AND in state 128 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 128 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 128 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 128 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for MAS in state 128 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 128 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 128 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 128 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 129 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 129 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 129 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 129 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 129 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 129 resolved as shift
WARNING: shift/reduce conflict for MAS in state 129 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 129 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 129 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 129 resolved as shift
WARNING: shift/reduce conflict for MAS in state 130 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 130 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 130 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 130 resolved as shift
WARNING: shift/reduce conflict for MAS in state 131 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 131 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 131 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 131 resolved as shift
WARNING: shift/reduce conflict for MAS in state 132 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 132 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 132 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 132 resolved as shift
WARNING: shift/reduce conflict for MAS in state 133 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 133 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 133 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 133 resolved as shift
WARNING: shift/reduce conflict for MAS in state 134 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 134 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 134 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 134 resolved as shift
WARNING: shift/reduce conflict for MAS in state 135 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 135 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 135 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 135 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 136 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 136 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 137 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 137 resolved as shift
WARNING: shift/reduce conflict for OR in state 141 resolved as shift
WARNING: shift/reduce conflict for AND in state 141 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 141 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 141 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 141 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for MAS in state 141 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 141 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 141 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 141 resolved as shift
WARNING: shift/reduce conflict for OR in state 141 resolved as shift
WARNING: shift/reduce conflict for AND in state 141 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 141 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 141 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 141 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for MAS in state 141 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 141 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 141 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 141 resolved as shift
WARNING: shift/reduce conflict for OR in state 148 resolved as shift
WARNING: shift/reduce conflict for AND in state 148 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 148 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 148 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 148 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for MAS in state 148 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 148 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 148 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 148 resolved as shift
WARNING: shift/reduce conflict for OR in state 154 resolved as shift
WARNING: shift/reduce conflict for AND in state 154 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 154 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 154 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 154 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 154 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 154 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 154 resolved as shift
WARNING: shift/reduce conflict for MAS in state 154 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 154 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 154 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 154 resolved as shift
WARNING: shift/reduce conflict for OR in state 155 resolved as shift
WARNING: shift/reduce conflict for AND in state 155 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 155 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 155 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 155 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for MAS in state 155 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 155 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 155 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 155 resolved as shift
WARNING: shift/reduce conflict for PDER in state 167 resolved as shift
WARNING: shift/reduce conflict for OR in state 167 resolved as shift
WARNING: shift/reduce conflict for AND in state 167 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 167 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 167 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 167 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 167 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 167 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 167 resolved as shift
WARNING: shift/reduce conflict for MAS in state 167 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 167 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 167 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 167 resolved as shift
WARNING: reduce/reduce conflict in state 60 resolved using rule (declaracion -> tipo_dato ID IGUAL expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 60
WARNING: reduce/reduce conflict in state 93 resolved using rule (return_inst -> RETURN_W expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 93
WARNING: reduce/reduce conflict in state 110 resolved using rule (expresion -> NOT expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 110
WARNING: reduce/reduce conflict in state 111 resolved using rule (expresion -> MENOS expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 111
WARNING: reduce/reduce conflict in state 117 resolved using rule (lista_expresiones -> expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 117
WARNING: reduce/reduce conflict in state 128 resolved using rule (expresion -> expresion OR expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 128
WARNING: reduce/reduce conflict in state 129 resolved using rule (expresion -> expresion AND expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 129
WARNING: reduce/reduce conflict in state 130 resolved using rule (expresion -> expresion MENOR expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 130
WARNING: reduce/reduce conflict in state 131 resolved using rule (expresion -> expresion MAYOR expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 131
WARNING: reduce/reduce conflict in state 132 resolved using rule (expresion -> expresion MAYORIGUAL expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 132
WARNING: reduce/reduce conflict in state 133 resolved using rule (expresion -> expresion MENORIGUAL expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 133
WARNING: reduce/reduce conflict in state 134 resolved using rule (expresion -> expresion DIFERENTE expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 134
WARNING: reduce/reduce conflict in state 135 resolved using rule (expresion -> expresion IGUALIGUAL expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 135
WARNING: reduce/reduce conflict in state 136 resolved using rule (expresion -> expresion MAS expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 136
WARNING: reduce/reduce conflict in state 137 resolved using rule (expresion -> expresion MENOS expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 137
WARNING: reduce/reduce conflict in state 138 resolved using rule (expresion -> expresion MULTIPLICACION expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 138
WARNING: reduce/reduce conflict in state 139 resolved using rule (expresion -> expresion DIVISION expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 139
WARNING: reduce/reduce conflict in state 141 resolved using rule (acceso_objeto -> acceso_objeto PUNTO expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 141
WARNING: reduce/reduce conflict in state 148 resolved using rule (declaracion_objeto -> ID ID IGUAL expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 148
WARNING: reduce/reduce conflict in state 154 resolved using rule (lista_expresiones -> lista_expresiones COMA expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 154
WARNING: reduce/reduce conflict in state 155 resolved using rule (declaracion_arreglo -> tipo_dato niveles ID IGUAL expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 155
