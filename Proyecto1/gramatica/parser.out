Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOBLEPT

Grammar

Rule 0     S' -> init
Rule 1     init -> clases_funciones
Rule 2     clases_funciones -> clases_funciones clase_funcion
Rule 3     clases_funciones -> clase_funcion
Rule 4     clase_funcion -> clase
Rule 5     clase_funcion -> funcion
Rule 6     clase_funcion -> error LLAVEDER
Rule 7     clase -> CLASS ID bloqueClase
Rule 8     bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER
Rule 9     bloqueClase -> LLAVEIZQ LLAVEDER
Rule 10    funcion -> tipo_funcion ID PIZQ PDER bloque
Rule 11    funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque
Rule 12    lista_parametros -> lista_parametros COMA parametro
Rule 13    lista_parametros -> parametro
Rule 14    parametro -> tipo_dato ID
Rule 15    parametro -> MULTIPLICACION tipo_dato ID
Rule 16    bloque -> LLAVEIZQ LLAVEDER
Rule 17    bloque -> LLAVEIZQ instrucciones LLAVEDER
Rule 18    instrs_clase -> instrs_clase instr
Rule 19    instrs_clase -> instr
Rule 20    instr -> declaracion PTCOMA
Rule 21    instrucciones -> instrucciones instruccion
Rule 22    instrucciones -> instruccion
Rule 23    instruccion -> print_inst PTCOMA
Rule 24    instruccion -> declaracion PTCOMA
Rule 25    instruccion -> declaracion_objeto PTCOMA
Rule 26    instruccion -> declaracion_arreglo PTCOMA
Rule 27    instruccion -> llamada PTCOMA
Rule 28    instruccion -> return_inst PTCOMA
Rule 29    instruccion -> if_instr
Rule 30    instruccion -> error PTCOMA
Rule 31    declaracion -> tipo_dato ID IGUAL expresion
Rule 32    declaracion -> tipo_dato ID
Rule 33    declaracion_arreglo -> tipo_dato niveles ID IGUAL expresion
Rule 34    niveles -> niveles nivel
Rule 35    niveles -> nivel
Rule 36    nivel -> CORIZQ CORDER
Rule 37    declaracion_objeto -> ID ID IGUAL expresion
Rule 38    print_inst -> PRINT PIZQ expresion PDER
Rule 39    llamada -> ID PIZQ PDER
Rule 40    llamada -> ID PIZQ lista_expresiones PDER
Rule 41    return_inst -> RETURN_W
Rule 42    return_inst -> RETURN_W expresion
Rule 43    if_instr -> IF_W PIZQ expresion PDER bloque
Rule 44    if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque
Rule 45    if_instr -> IF_W PIZQ expresion PDER bloque listaelseif
Rule 46    if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
Rule 47    listaelseif -> listaelseif else_if
Rule 48    listaelseif -> else_if
Rule 49    else_if -> ELSE_W IF_W PIZQ expresion PDER bloque
Rule 50    lista_expresiones -> lista_expresiones COMA expresion
Rule 51    lista_expresiones -> expresion
Rule 52    expresion -> expresion OR expresion
Rule 53    expresion -> expresion AND expresion
Rule 54    expresion -> NOT expresion
Rule 55    expresion -> expresion MENOR expresion
Rule 56    expresion -> expresion MAYOR expresion
Rule 57    expresion -> expresion MAYORIGUAL expresion
Rule 58    expresion -> expresion MENORIGUAL expresion
Rule 59    expresion -> expresion DIFERENTE expresion
Rule 60    expresion -> expresion IGUALIGUAL expresion
Rule 61    expresion -> MENOS expresion
Rule 62    expresion -> expresion MAS expresion
Rule 63    expresion -> expresion MENOS expresion
Rule 64    expresion -> expresion MULTIPLICACION expresion
Rule 65    expresion -> expresion DIVISION expresion
Rule 66    expresion -> PIZQ expresion PDER
Rule 67    expresion -> ENTERO
Rule 68    expresion -> DECIMAL
Rule 69    expresion -> ID
Rule 70    expresion -> CADENA
Rule 71    expresion -> TRUE
Rule 72    expresion -> FALSE
Rule 73    expresion -> llamada
Rule 74    expresion -> acceso_objeto_expresion
Rule 75    expresion -> acceso_array_expresion
Rule 76    expresion -> instancia_objeto
Rule 77    expresion -> array_data
Rule 78    expresion -> array_instancia
Rule 79    expresion -> if_instr
Rule 80    array_data -> CORIZQ lista_expresiones CORDER
Rule 81    array_instancia -> NEW tipo_dato dimensiones
Rule 82    dimensiones -> dimensiones dimension
Rule 83    dimensiones -> dimension
Rule 84    dimension -> CORIZQ expresion CORDER
Rule 85    instancia_objeto -> NEW ID PIZQ PDER
Rule 86    instancia_objeto -> NEW ID PIZQ lista_expresiones PDER
Rule 87    acceso_objeto_expresion -> acceso_objeto
Rule 88    acceso_objeto -> acceso_objeto PUNTO expresion
Rule 89    acceso_objeto -> expresion
Rule 90    acceso_array_expresion -> ID dimensiones
Rule 91    tipo_funcion -> INT
Rule 92    tipo_funcion -> STRING_TYPE
Rule 93    tipo_funcion -> BOOLEAN
Rule 94    tipo_funcion -> VOID
Rule 95    tipo_funcion -> FLOAT
Rule 96    tipo_dato -> INT
Rule 97    tipo_dato -> STRING_TYPE
Rule 98    tipo_dato -> BOOLEAN
Rule 99    tipo_dato -> FLOAT

Terminals, with rules where they appear

AND                  : 53
BOOLEAN              : 93 98
CADENA               : 70
CLASS                : 7
COMA                 : 12 50
CORDER               : 36 80 84
CORIZQ               : 36 80 84
DECIMAL              : 68
DIFERENTE            : 59
DIVISION             : 65
DOBLEPT              : 
ELSE_W               : 44 46 49
ENTERO               : 67
FALSE                : 72
FLOAT                : 95 99
ID                   : 7 10 11 14 15 31 32 33 37 37 39 40 69 85 86 90
IF_W                 : 43 44 45 46 49
IGUAL                : 31 33 37
IGUALIGUAL           : 60
INT                  : 91 96
LLAVEDER             : 6 8 9 16 17
LLAVEIZQ             : 8 9 16 17
MAS                  : 62
MAYOR                : 56
MAYORIGUAL           : 57
MENOR                : 55
MENORIGUAL           : 58
MENOS                : 61 63
MULTIPLICACION       : 15 64
NEW                  : 81 85 86
NOT                  : 54
OR                   : 52
PDER                 : 10 11 38 39 40 43 44 45 46 49 66 85 86
PIZQ                 : 10 11 38 39 40 43 44 45 46 49 66 85 86
PRINT                : 38
PTCOMA               : 20 23 24 25 26 27 28 30
PUNTO                : 88
RETURN_W             : 41 42
STRING_TYPE          : 92 97
TRUE                 : 71
VOID                 : 94
error                : 6 30

Nonterminals, with rules where they appear

acceso_array_expresion : 75
acceso_objeto        : 87 88
acceso_objeto_expresion : 74
array_data           : 77
array_instancia      : 78
bloque               : 10 11 43 44 44 45 46 46 49
bloqueClase          : 7
clase                : 4
clase_funcion        : 2 3
clases_funciones     : 1 2
declaracion          : 20 24
declaracion_arreglo  : 26
declaracion_objeto   : 25
dimension            : 82 83
dimensiones          : 81 82 90
else_if              : 47 48
expresion            : 31 33 37 38 42 43 44 45 46 49 50 51 52 52 53 53 54 55 55 56 56 57 57 58 58 59 59 60 60 61 62 62 63 63 64 64 65 65 66 84 88 89
funcion              : 5
if_instr             : 29 79
init                 : 0
instancia_objeto     : 76
instr                : 18 19
instrs_clase         : 8 18
instruccion          : 21 22
instrucciones        : 17 21
lista_expresiones    : 40 50 80 86
lista_parametros     : 11 12
listaelseif          : 45 46 47
llamada              : 27 73
nivel                : 34 35
niveles              : 33 34
parametro            : 12 13
print_inst           : 23
return_inst          : 28
tipo_dato            : 14 15 31 32 33 81
tipo_funcion         : 10 11

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . clases_funciones
    (2) clases_funciones -> . clases_funciones clase_funcion
    (3) clases_funciones -> . clase_funcion
    (4) clase_funcion -> . clase
    (5) clase_funcion -> . funcion
    (6) clase_funcion -> . error LLAVEDER
    (7) clase -> . CLASS ID bloqueClase
    (10) funcion -> . tipo_funcion ID PIZQ PDER bloque
    (11) funcion -> . tipo_funcion ID PIZQ lista_parametros PDER bloque
    (91) tipo_funcion -> . INT
    (92) tipo_funcion -> . STRING_TYPE
    (93) tipo_funcion -> . BOOLEAN
    (94) tipo_funcion -> . VOID
    (95) tipo_funcion -> . FLOAT

    error           shift and go to state 6
    CLASS           shift and go to state 7
    INT             shift and go to state 9
    STRING_TYPE     shift and go to state 10
    BOOLEAN         shift and go to state 11
    VOID            shift and go to state 12
    FLOAT           shift and go to state 13

    init                           shift and go to state 1
    clases_funciones               shift and go to state 2
    clase_funcion                  shift and go to state 3
    clase                          shift and go to state 4
    funcion                        shift and go to state 5
    tipo_funcion                   shift and go to state 8

state 1

    (0) S' -> init .



state 2

    (1) init -> clases_funciones .
    (2) clases_funciones -> clases_funciones . clase_funcion
    (4) clase_funcion -> . clase
    (5) clase_funcion -> . funcion
    (6) clase_funcion -> . error LLAVEDER
    (7) clase -> . CLASS ID bloqueClase
    (10) funcion -> . tipo_funcion ID PIZQ PDER bloque
    (11) funcion -> . tipo_funcion ID PIZQ lista_parametros PDER bloque
    (91) tipo_funcion -> . INT
    (92) tipo_funcion -> . STRING_TYPE
    (93) tipo_funcion -> . BOOLEAN
    (94) tipo_funcion -> . VOID
    (95) tipo_funcion -> . FLOAT

    $end            reduce using rule 1 (init -> clases_funciones .)
    error           shift and go to state 6
    CLASS           shift and go to state 7
    INT             shift and go to state 9
    STRING_TYPE     shift and go to state 10
    BOOLEAN         shift and go to state 11
    VOID            shift and go to state 12
    FLOAT           shift and go to state 13

    clase_funcion                  shift and go to state 14
    clase                          shift and go to state 4
    funcion                        shift and go to state 5
    tipo_funcion                   shift and go to state 8

state 3

    (3) clases_funciones -> clase_funcion .

    error           reduce using rule 3 (clases_funciones -> clase_funcion .)
    CLASS           reduce using rule 3 (clases_funciones -> clase_funcion .)
    INT             reduce using rule 3 (clases_funciones -> clase_funcion .)
    STRING_TYPE     reduce using rule 3 (clases_funciones -> clase_funcion .)
    BOOLEAN         reduce using rule 3 (clases_funciones -> clase_funcion .)
    VOID            reduce using rule 3 (clases_funciones -> clase_funcion .)
    FLOAT           reduce using rule 3 (clases_funciones -> clase_funcion .)
    $end            reduce using rule 3 (clases_funciones -> clase_funcion .)


state 4

    (4) clase_funcion -> clase .

    error           reduce using rule 4 (clase_funcion -> clase .)
    CLASS           reduce using rule 4 (clase_funcion -> clase .)
    INT             reduce using rule 4 (clase_funcion -> clase .)
    STRING_TYPE     reduce using rule 4 (clase_funcion -> clase .)
    BOOLEAN         reduce using rule 4 (clase_funcion -> clase .)
    VOID            reduce using rule 4 (clase_funcion -> clase .)
    FLOAT           reduce using rule 4 (clase_funcion -> clase .)
    $end            reduce using rule 4 (clase_funcion -> clase .)


state 5

    (5) clase_funcion -> funcion .

    error           reduce using rule 5 (clase_funcion -> funcion .)
    CLASS           reduce using rule 5 (clase_funcion -> funcion .)
    INT             reduce using rule 5 (clase_funcion -> funcion .)
    STRING_TYPE     reduce using rule 5 (clase_funcion -> funcion .)
    BOOLEAN         reduce using rule 5 (clase_funcion -> funcion .)
    VOID            reduce using rule 5 (clase_funcion -> funcion .)
    FLOAT           reduce using rule 5 (clase_funcion -> funcion .)
    $end            reduce using rule 5 (clase_funcion -> funcion .)


state 6

    (6) clase_funcion -> error . LLAVEDER

    LLAVEDER        shift and go to state 15


state 7

    (7) clase -> CLASS . ID bloqueClase

    ID              shift and go to state 16


state 8

    (10) funcion -> tipo_funcion . ID PIZQ PDER bloque
    (11) funcion -> tipo_funcion . ID PIZQ lista_parametros PDER bloque

    ID              shift and go to state 17


state 9

    (91) tipo_funcion -> INT .

    ID              reduce using rule 91 (tipo_funcion -> INT .)


state 10

    (92) tipo_funcion -> STRING_TYPE .

    ID              reduce using rule 92 (tipo_funcion -> STRING_TYPE .)


state 11

    (93) tipo_funcion -> BOOLEAN .

    ID              reduce using rule 93 (tipo_funcion -> BOOLEAN .)


state 12

    (94) tipo_funcion -> VOID .

    ID              reduce using rule 94 (tipo_funcion -> VOID .)


state 13

    (95) tipo_funcion -> FLOAT .

    ID              reduce using rule 95 (tipo_funcion -> FLOAT .)


state 14

    (2) clases_funciones -> clases_funciones clase_funcion .

    error           reduce using rule 2 (clases_funciones -> clases_funciones clase_funcion .)
    CLASS           reduce using rule 2 (clases_funciones -> clases_funciones clase_funcion .)
    INT             reduce using rule 2 (clases_funciones -> clases_funciones clase_funcion .)
    STRING_TYPE     reduce using rule 2 (clases_funciones -> clases_funciones clase_funcion .)
    BOOLEAN         reduce using rule 2 (clases_funciones -> clases_funciones clase_funcion .)
    VOID            reduce using rule 2 (clases_funciones -> clases_funciones clase_funcion .)
    FLOAT           reduce using rule 2 (clases_funciones -> clases_funciones clase_funcion .)
    $end            reduce using rule 2 (clases_funciones -> clases_funciones clase_funcion .)


state 15

    (6) clase_funcion -> error LLAVEDER .

    error           reduce using rule 6 (clase_funcion -> error LLAVEDER .)
    CLASS           reduce using rule 6 (clase_funcion -> error LLAVEDER .)
    INT             reduce using rule 6 (clase_funcion -> error LLAVEDER .)
    STRING_TYPE     reduce using rule 6 (clase_funcion -> error LLAVEDER .)
    BOOLEAN         reduce using rule 6 (clase_funcion -> error LLAVEDER .)
    VOID            reduce using rule 6 (clase_funcion -> error LLAVEDER .)
    FLOAT           reduce using rule 6 (clase_funcion -> error LLAVEDER .)
    $end            reduce using rule 6 (clase_funcion -> error LLAVEDER .)


state 16

    (7) clase -> CLASS ID . bloqueClase
    (8) bloqueClase -> . LLAVEIZQ instrs_clase LLAVEDER
    (9) bloqueClase -> . LLAVEIZQ LLAVEDER

    LLAVEIZQ        shift and go to state 19

    bloqueClase                    shift and go to state 18

state 17

    (10) funcion -> tipo_funcion ID . PIZQ PDER bloque
    (11) funcion -> tipo_funcion ID . PIZQ lista_parametros PDER bloque

    PIZQ            shift and go to state 20


state 18

    (7) clase -> CLASS ID bloqueClase .

    error           reduce using rule 7 (clase -> CLASS ID bloqueClase .)
    CLASS           reduce using rule 7 (clase -> CLASS ID bloqueClase .)
    INT             reduce using rule 7 (clase -> CLASS ID bloqueClase .)
    STRING_TYPE     reduce using rule 7 (clase -> CLASS ID bloqueClase .)
    BOOLEAN         reduce using rule 7 (clase -> CLASS ID bloqueClase .)
    VOID            reduce using rule 7 (clase -> CLASS ID bloqueClase .)
    FLOAT           reduce using rule 7 (clase -> CLASS ID bloqueClase .)
    $end            reduce using rule 7 (clase -> CLASS ID bloqueClase .)


state 19

    (8) bloqueClase -> LLAVEIZQ . instrs_clase LLAVEDER
    (9) bloqueClase -> LLAVEIZQ . LLAVEDER
    (18) instrs_clase -> . instrs_clase instr
    (19) instrs_clase -> . instr
    (20) instr -> . declaracion PTCOMA
    (31) declaracion -> . tipo_dato ID IGUAL expresion
    (32) declaracion -> . tipo_dato ID
    (96) tipo_dato -> . INT
    (97) tipo_dato -> . STRING_TYPE
    (98) tipo_dato -> . BOOLEAN
    (99) tipo_dato -> . FLOAT

    LLAVEDER        shift and go to state 22
    INT             shift and go to state 26
    STRING_TYPE     shift and go to state 27
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 29

    instrs_clase                   shift and go to state 21
    instr                          shift and go to state 23
    declaracion                    shift and go to state 24
    tipo_dato                      shift and go to state 25

state 20

    (10) funcion -> tipo_funcion ID PIZQ . PDER bloque
    (11) funcion -> tipo_funcion ID PIZQ . lista_parametros PDER bloque
    (12) lista_parametros -> . lista_parametros COMA parametro
    (13) lista_parametros -> . parametro
    (14) parametro -> . tipo_dato ID
    (15) parametro -> . MULTIPLICACION tipo_dato ID
    (96) tipo_dato -> . INT
    (97) tipo_dato -> . STRING_TYPE
    (98) tipo_dato -> . BOOLEAN
    (99) tipo_dato -> . FLOAT

    PDER            shift and go to state 30
    MULTIPLICACION  shift and go to state 34
    INT             shift and go to state 26
    STRING_TYPE     shift and go to state 27
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 29

    lista_parametros               shift and go to state 31
    parametro                      shift and go to state 32
    tipo_dato                      shift and go to state 33

state 21

    (8) bloqueClase -> LLAVEIZQ instrs_clase . LLAVEDER
    (18) instrs_clase -> instrs_clase . instr
    (20) instr -> . declaracion PTCOMA
    (31) declaracion -> . tipo_dato ID IGUAL expresion
    (32) declaracion -> . tipo_dato ID
    (96) tipo_dato -> . INT
    (97) tipo_dato -> . STRING_TYPE
    (98) tipo_dato -> . BOOLEAN
    (99) tipo_dato -> . FLOAT

    LLAVEDER        shift and go to state 35
    INT             shift and go to state 26
    STRING_TYPE     shift and go to state 27
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 29

    instr                          shift and go to state 36
    declaracion                    shift and go to state 24
    tipo_dato                      shift and go to state 25

state 22

    (9) bloqueClase -> LLAVEIZQ LLAVEDER .

    error           reduce using rule 9 (bloqueClase -> LLAVEIZQ LLAVEDER .)
    CLASS           reduce using rule 9 (bloqueClase -> LLAVEIZQ LLAVEDER .)
    INT             reduce using rule 9 (bloqueClase -> LLAVEIZQ LLAVEDER .)
    STRING_TYPE     reduce using rule 9 (bloqueClase -> LLAVEIZQ LLAVEDER .)
    BOOLEAN         reduce using rule 9 (bloqueClase -> LLAVEIZQ LLAVEDER .)
    VOID            reduce using rule 9 (bloqueClase -> LLAVEIZQ LLAVEDER .)
    FLOAT           reduce using rule 9 (bloqueClase -> LLAVEIZQ LLAVEDER .)
    $end            reduce using rule 9 (bloqueClase -> LLAVEIZQ LLAVEDER .)


state 23

    (19) instrs_clase -> instr .

    LLAVEDER        reduce using rule 19 (instrs_clase -> instr .)
    INT             reduce using rule 19 (instrs_clase -> instr .)
    STRING_TYPE     reduce using rule 19 (instrs_clase -> instr .)
    BOOLEAN         reduce using rule 19 (instrs_clase -> instr .)
    FLOAT           reduce using rule 19 (instrs_clase -> instr .)


state 24

    (20) instr -> declaracion . PTCOMA

    PTCOMA          shift and go to state 37


state 25

    (31) declaracion -> tipo_dato . ID IGUAL expresion
    (32) declaracion -> tipo_dato . ID

    ID              shift and go to state 38


state 26

    (96) tipo_dato -> INT .

    ID              reduce using rule 96 (tipo_dato -> INT .)
    CORIZQ          reduce using rule 96 (tipo_dato -> INT .)


state 27

    (97) tipo_dato -> STRING_TYPE .

    ID              reduce using rule 97 (tipo_dato -> STRING_TYPE .)
    CORIZQ          reduce using rule 97 (tipo_dato -> STRING_TYPE .)


state 28

    (98) tipo_dato -> BOOLEAN .

    ID              reduce using rule 98 (tipo_dato -> BOOLEAN .)
    CORIZQ          reduce using rule 98 (tipo_dato -> BOOLEAN .)


state 29

    (99) tipo_dato -> FLOAT .

    ID              reduce using rule 99 (tipo_dato -> FLOAT .)
    CORIZQ          reduce using rule 99 (tipo_dato -> FLOAT .)


state 30

    (10) funcion -> tipo_funcion ID PIZQ PDER . bloque
    (16) bloque -> . LLAVEIZQ LLAVEDER
    (17) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 40

    bloque                         shift and go to state 39

state 31

    (11) funcion -> tipo_funcion ID PIZQ lista_parametros . PDER bloque
    (12) lista_parametros -> lista_parametros . COMA parametro

    PDER            shift and go to state 41
    COMA            shift and go to state 42


state 32

    (13) lista_parametros -> parametro .

    PDER            reduce using rule 13 (lista_parametros -> parametro .)
    COMA            reduce using rule 13 (lista_parametros -> parametro .)


state 33

    (14) parametro -> tipo_dato . ID

    ID              shift and go to state 43


state 34

    (15) parametro -> MULTIPLICACION . tipo_dato ID
    (96) tipo_dato -> . INT
    (97) tipo_dato -> . STRING_TYPE
    (98) tipo_dato -> . BOOLEAN
    (99) tipo_dato -> . FLOAT

    INT             shift and go to state 26
    STRING_TYPE     shift and go to state 27
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 29

    tipo_dato                      shift and go to state 44

state 35

    (8) bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER .

    error           reduce using rule 8 (bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER .)
    CLASS           reduce using rule 8 (bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER .)
    INT             reduce using rule 8 (bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER .)
    STRING_TYPE     reduce using rule 8 (bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER .)
    BOOLEAN         reduce using rule 8 (bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER .)
    VOID            reduce using rule 8 (bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER .)
    FLOAT           reduce using rule 8 (bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER .)
    $end            reduce using rule 8 (bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER .)


state 36

    (18) instrs_clase -> instrs_clase instr .

    LLAVEDER        reduce using rule 18 (instrs_clase -> instrs_clase instr .)
    INT             reduce using rule 18 (instrs_clase -> instrs_clase instr .)
    STRING_TYPE     reduce using rule 18 (instrs_clase -> instrs_clase instr .)
    BOOLEAN         reduce using rule 18 (instrs_clase -> instrs_clase instr .)
    FLOAT           reduce using rule 18 (instrs_clase -> instrs_clase instr .)


state 37

    (20) instr -> declaracion PTCOMA .

    LLAVEDER        reduce using rule 20 (instr -> declaracion PTCOMA .)
    INT             reduce using rule 20 (instr -> declaracion PTCOMA .)
    STRING_TYPE     reduce using rule 20 (instr -> declaracion PTCOMA .)
    BOOLEAN         reduce using rule 20 (instr -> declaracion PTCOMA .)
    FLOAT           reduce using rule 20 (instr -> declaracion PTCOMA .)


state 38

    (31) declaracion -> tipo_dato ID . IGUAL expresion
    (32) declaracion -> tipo_dato ID .

    IGUAL           shift and go to state 45
    PTCOMA          reduce using rule 32 (declaracion -> tipo_dato ID .)


state 39

    (10) funcion -> tipo_funcion ID PIZQ PDER bloque .

    error           reduce using rule 10 (funcion -> tipo_funcion ID PIZQ PDER bloque .)
    CLASS           reduce using rule 10 (funcion -> tipo_funcion ID PIZQ PDER bloque .)
    INT             reduce using rule 10 (funcion -> tipo_funcion ID PIZQ PDER bloque .)
    STRING_TYPE     reduce using rule 10 (funcion -> tipo_funcion ID PIZQ PDER bloque .)
    BOOLEAN         reduce using rule 10 (funcion -> tipo_funcion ID PIZQ PDER bloque .)
    VOID            reduce using rule 10 (funcion -> tipo_funcion ID PIZQ PDER bloque .)
    FLOAT           reduce using rule 10 (funcion -> tipo_funcion ID PIZQ PDER bloque .)
    $end            reduce using rule 10 (funcion -> tipo_funcion ID PIZQ PDER bloque .)


state 40

    (16) bloque -> LLAVEIZQ . LLAVEDER
    (17) bloque -> LLAVEIZQ . instrucciones LLAVEDER
    (21) instrucciones -> . instrucciones instruccion
    (22) instrucciones -> . instruccion
    (23) instruccion -> . print_inst PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . declaracion_objeto PTCOMA
    (26) instruccion -> . declaracion_arreglo PTCOMA
    (27) instruccion -> . llamada PTCOMA
    (28) instruccion -> . return_inst PTCOMA
    (29) instruccion -> . if_instr
    (30) instruccion -> . error PTCOMA
    (38) print_inst -> . PRINT PIZQ expresion PDER
    (31) declaracion -> . tipo_dato ID IGUAL expresion
    (32) declaracion -> . tipo_dato ID
    (37) declaracion_objeto -> . ID ID IGUAL expresion
    (33) declaracion_arreglo -> . tipo_dato niveles ID IGUAL expresion
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (41) return_inst -> . RETURN_W
    (42) return_inst -> . RETURN_W expresion
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (96) tipo_dato -> . INT
    (97) tipo_dato -> . STRING_TYPE
    (98) tipo_dato -> . BOOLEAN
    (99) tipo_dato -> . FLOAT

    LLAVEDER        shift and go to state 46
    error           shift and go to state 56
    PRINT           shift and go to state 57
    ID              shift and go to state 59
    RETURN_W        shift and go to state 60
    IF_W            shift and go to state 61
    INT             shift and go to state 26
    STRING_TYPE     shift and go to state 27
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 29

    instrucciones                  shift and go to state 47
    instruccion                    shift and go to state 48
    print_inst                     shift and go to state 49
    declaracion                    shift and go to state 50
    declaracion_objeto             shift and go to state 51
    declaracion_arreglo            shift and go to state 52
    llamada                        shift and go to state 53
    return_inst                    shift and go to state 54
    if_instr                       shift and go to state 55
    tipo_dato                      shift and go to state 58

state 41

    (11) funcion -> tipo_funcion ID PIZQ lista_parametros PDER . bloque
    (16) bloque -> . LLAVEIZQ LLAVEDER
    (17) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 40

    bloque                         shift and go to state 62

state 42

    (12) lista_parametros -> lista_parametros COMA . parametro
    (14) parametro -> . tipo_dato ID
    (15) parametro -> . MULTIPLICACION tipo_dato ID
    (96) tipo_dato -> . INT
    (97) tipo_dato -> . STRING_TYPE
    (98) tipo_dato -> . BOOLEAN
    (99) tipo_dato -> . FLOAT

    MULTIPLICACION  shift and go to state 34
    INT             shift and go to state 26
    STRING_TYPE     shift and go to state 27
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 29

    parametro                      shift and go to state 63
    tipo_dato                      shift and go to state 33

state 43

    (14) parametro -> tipo_dato ID .

    PDER            reduce using rule 14 (parametro -> tipo_dato ID .)
    COMA            reduce using rule 14 (parametro -> tipo_dato ID .)


state 44

    (15) parametro -> MULTIPLICACION tipo_dato . ID

    ID              shift and go to state 64


state 45

    (31) declaracion -> tipo_dato ID IGUAL . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 66
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 46

    (16) bloque -> LLAVEIZQ LLAVEDER .

    error           reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    CLASS           reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    INT             reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    STRING_TYPE     reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    BOOLEAN         reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    VOID            reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    FLOAT           reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    $end            reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    ELSE_W          reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    LLAVEDER        reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    PRINT           reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    ID              reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    RETURN_W        reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    IF_W            reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    OR              reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    AND             reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    MENOR           reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    MAYOR           reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    MAYORIGUAL      reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    MENORIGUAL      reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    DIFERENTE       reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    IGUALIGUAL      reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    MAS             reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    MENOS           reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    MULTIPLICACION  reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    DIVISION        reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    PTCOMA          reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    PUNTO           reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    PDER            reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    CORDER          reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    COMA            reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)


state 47

    (17) bloque -> LLAVEIZQ instrucciones . LLAVEDER
    (21) instrucciones -> instrucciones . instruccion
    (23) instruccion -> . print_inst PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . declaracion_objeto PTCOMA
    (26) instruccion -> . declaracion_arreglo PTCOMA
    (27) instruccion -> . llamada PTCOMA
    (28) instruccion -> . return_inst PTCOMA
    (29) instruccion -> . if_instr
    (30) instruccion -> . error PTCOMA
    (38) print_inst -> . PRINT PIZQ expresion PDER
    (31) declaracion -> . tipo_dato ID IGUAL expresion
    (32) declaracion -> . tipo_dato ID
    (37) declaracion_objeto -> . ID ID IGUAL expresion
    (33) declaracion_arreglo -> . tipo_dato niveles ID IGUAL expresion
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (41) return_inst -> . RETURN_W
    (42) return_inst -> . RETURN_W expresion
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (96) tipo_dato -> . INT
    (97) tipo_dato -> . STRING_TYPE
    (98) tipo_dato -> . BOOLEAN
    (99) tipo_dato -> . FLOAT

    LLAVEDER        shift and go to state 85
    error           shift and go to state 56
    PRINT           shift and go to state 57
    ID              shift and go to state 59
    RETURN_W        shift and go to state 60
    IF_W            shift and go to state 61
    INT             shift and go to state 26
    STRING_TYPE     shift and go to state 27
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 29

    instruccion                    shift and go to state 86
    print_inst                     shift and go to state 49
    declaracion                    shift and go to state 50
    declaracion_objeto             shift and go to state 51
    declaracion_arreglo            shift and go to state 52
    llamada                        shift and go to state 53
    return_inst                    shift and go to state 54
    if_instr                       shift and go to state 55
    tipo_dato                      shift and go to state 58

state 48

    (22) instrucciones -> instruccion .

    LLAVEDER        reduce using rule 22 (instrucciones -> instruccion .)
    error           reduce using rule 22 (instrucciones -> instruccion .)
    PRINT           reduce using rule 22 (instrucciones -> instruccion .)
    ID              reduce using rule 22 (instrucciones -> instruccion .)
    RETURN_W        reduce using rule 22 (instrucciones -> instruccion .)
    IF_W            reduce using rule 22 (instrucciones -> instruccion .)
    INT             reduce using rule 22 (instrucciones -> instruccion .)
    STRING_TYPE     reduce using rule 22 (instrucciones -> instruccion .)
    BOOLEAN         reduce using rule 22 (instrucciones -> instruccion .)
    FLOAT           reduce using rule 22 (instrucciones -> instruccion .)


state 49

    (23) instruccion -> print_inst . PTCOMA

    PTCOMA          shift and go to state 87


state 50

    (24) instruccion -> declaracion . PTCOMA

    PTCOMA          shift and go to state 88


state 51

    (25) instruccion -> declaracion_objeto . PTCOMA

    PTCOMA          shift and go to state 89


state 52

    (26) instruccion -> declaracion_arreglo . PTCOMA

    PTCOMA          shift and go to state 90


state 53

    (27) instruccion -> llamada . PTCOMA

    PTCOMA          shift and go to state 91


state 54

    (28) instruccion -> return_inst . PTCOMA

    PTCOMA          shift and go to state 92


state 55

    (29) instruccion -> if_instr .

    LLAVEDER        reduce using rule 29 (instruccion -> if_instr .)
    error           reduce using rule 29 (instruccion -> if_instr .)
    PRINT           reduce using rule 29 (instruccion -> if_instr .)
    ID              reduce using rule 29 (instruccion -> if_instr .)
    RETURN_W        reduce using rule 29 (instruccion -> if_instr .)
    IF_W            reduce using rule 29 (instruccion -> if_instr .)
    INT             reduce using rule 29 (instruccion -> if_instr .)
    STRING_TYPE     reduce using rule 29 (instruccion -> if_instr .)
    BOOLEAN         reduce using rule 29 (instruccion -> if_instr .)
    FLOAT           reduce using rule 29 (instruccion -> if_instr .)


state 56

    (30) instruccion -> error . PTCOMA

    PTCOMA          shift and go to state 93


state 57

    (38) print_inst -> PRINT . PIZQ expresion PDER

    PIZQ            shift and go to state 94


state 58

    (31) declaracion -> tipo_dato . ID IGUAL expresion
    (32) declaracion -> tipo_dato . ID
    (33) declaracion_arreglo -> tipo_dato . niveles ID IGUAL expresion
    (34) niveles -> . niveles nivel
    (35) niveles -> . nivel
    (36) nivel -> . CORIZQ CORDER

    ID              shift and go to state 38
    CORIZQ          shift and go to state 97

    niveles                        shift and go to state 95
    nivel                          shift and go to state 96

state 59

    (37) declaracion_objeto -> ID . ID IGUAL expresion
    (39) llamada -> ID . PIZQ PDER
    (40) llamada -> ID . PIZQ lista_expresiones PDER

    ID              shift and go to state 98
    PIZQ            shift and go to state 99


state 60

    (41) return_inst -> RETURN_W .
    (42) return_inst -> RETURN_W . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    PTCOMA          reduce using rule 41 (return_inst -> RETURN_W .)
    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 100
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 61

    (43) if_instr -> IF_W . PIZQ expresion PDER bloque
    (44) if_instr -> IF_W . PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> IF_W . PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> IF_W . PIZQ expresion PDER bloque listaelseif ELSE_W bloque

    PIZQ            shift and go to state 101


state 62

    (11) funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque .

    error           reduce using rule 11 (funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque .)
    CLASS           reduce using rule 11 (funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque .)
    INT             reduce using rule 11 (funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque .)
    STRING_TYPE     reduce using rule 11 (funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque .)
    BOOLEAN         reduce using rule 11 (funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque .)
    VOID            reduce using rule 11 (funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque .)
    FLOAT           reduce using rule 11 (funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque .)
    $end            reduce using rule 11 (funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque .)


state 63

    (12) lista_parametros -> lista_parametros COMA parametro .

    PDER            reduce using rule 12 (lista_parametros -> lista_parametros COMA parametro .)
    COMA            reduce using rule 12 (lista_parametros -> lista_parametros COMA parametro .)


state 64

    (15) parametro -> MULTIPLICACION tipo_dato ID .

    PDER            reduce using rule 15 (parametro -> MULTIPLICACION tipo_dato ID .)
    COMA            reduce using rule 15 (parametro -> MULTIPLICACION tipo_dato ID .)


state 65

    (69) expresion -> ID .
    (39) llamada -> ID . PIZQ PDER
    (40) llamada -> ID . PIZQ lista_expresiones PDER
    (90) acceso_array_expresion -> ID . dimensiones
    (82) dimensiones -> . dimensiones dimension
    (83) dimensiones -> . dimension
    (84) dimension -> . CORIZQ expresion CORDER

    OR              reduce using rule 69 (expresion -> ID .)
    AND             reduce using rule 69 (expresion -> ID .)
    MENOR           reduce using rule 69 (expresion -> ID .)
    MAYOR           reduce using rule 69 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 69 (expresion -> ID .)
    MENORIGUAL      reduce using rule 69 (expresion -> ID .)
    DIFERENTE       reduce using rule 69 (expresion -> ID .)
    IGUALIGUAL      reduce using rule 69 (expresion -> ID .)
    MAS             reduce using rule 69 (expresion -> ID .)
    MENOS           reduce using rule 69 (expresion -> ID .)
    MULTIPLICACION  reduce using rule 69 (expresion -> ID .)
    DIVISION        reduce using rule 69 (expresion -> ID .)
    PTCOMA          reduce using rule 69 (expresion -> ID .)
    PUNTO           reduce using rule 69 (expresion -> ID .)
    PDER            reduce using rule 69 (expresion -> ID .)
    CORDER          reduce using rule 69 (expresion -> ID .)
    COMA            reduce using rule 69 (expresion -> ID .)
    PIZQ            shift and go to state 99
    CORIZQ          shift and go to state 104

    dimensiones                    shift and go to state 102
    dimension                      shift and go to state 103

state 66

    (31) declaracion -> tipo_dato ID IGUAL expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 31 (declaracion -> tipo_dato ID IGUAL expresion .)
    PTCOMA          reduce using rule 31 (declaracion -> tipo_dato ID IGUAL expresion .)
    OR              shift and go to state 105
    AND             shift and go to state 106
    MENOR           shift and go to state 107
    MAYOR           shift and go to state 108
    MAYORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    DIFERENTE       shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116
    PUNTO           reduce using rule 89 (acceso_objeto -> expresion .)

  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 67

    (54) expresion -> NOT . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 117
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 68

    (61) expresion -> MENOS . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 118
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 69

    (66) expresion -> PIZQ . expresion PDER
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 119
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 70

    (67) expresion -> ENTERO .

    OR              reduce using rule 67 (expresion -> ENTERO .)
    AND             reduce using rule 67 (expresion -> ENTERO .)
    MENOR           reduce using rule 67 (expresion -> ENTERO .)
    MAYOR           reduce using rule 67 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 67 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 67 (expresion -> ENTERO .)
    DIFERENTE       reduce using rule 67 (expresion -> ENTERO .)
    IGUALIGUAL      reduce using rule 67 (expresion -> ENTERO .)
    MAS             reduce using rule 67 (expresion -> ENTERO .)
    MENOS           reduce using rule 67 (expresion -> ENTERO .)
    MULTIPLICACION  reduce using rule 67 (expresion -> ENTERO .)
    DIVISION        reduce using rule 67 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 67 (expresion -> ENTERO .)
    PUNTO           reduce using rule 67 (expresion -> ENTERO .)
    PDER            reduce using rule 67 (expresion -> ENTERO .)
    CORDER          reduce using rule 67 (expresion -> ENTERO .)
    COMA            reduce using rule 67 (expresion -> ENTERO .)


state 71

    (68) expresion -> DECIMAL .

    OR              reduce using rule 68 (expresion -> DECIMAL .)
    AND             reduce using rule 68 (expresion -> DECIMAL .)
    MENOR           reduce using rule 68 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 68 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 68 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 68 (expresion -> DECIMAL .)
    DIFERENTE       reduce using rule 68 (expresion -> DECIMAL .)
    IGUALIGUAL      reduce using rule 68 (expresion -> DECIMAL .)
    MAS             reduce using rule 68 (expresion -> DECIMAL .)
    MENOS           reduce using rule 68 (expresion -> DECIMAL .)
    MULTIPLICACION  reduce using rule 68 (expresion -> DECIMAL .)
    DIVISION        reduce using rule 68 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 68 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 68 (expresion -> DECIMAL .)
    PDER            reduce using rule 68 (expresion -> DECIMAL .)
    CORDER          reduce using rule 68 (expresion -> DECIMAL .)
    COMA            reduce using rule 68 (expresion -> DECIMAL .)


state 72

    (70) expresion -> CADENA .

    OR              reduce using rule 70 (expresion -> CADENA .)
    AND             reduce using rule 70 (expresion -> CADENA .)
    MENOR           reduce using rule 70 (expresion -> CADENA .)
    MAYOR           reduce using rule 70 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 70 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 70 (expresion -> CADENA .)
    DIFERENTE       reduce using rule 70 (expresion -> CADENA .)
    IGUALIGUAL      reduce using rule 70 (expresion -> CADENA .)
    MAS             reduce using rule 70 (expresion -> CADENA .)
    MENOS           reduce using rule 70 (expresion -> CADENA .)
    MULTIPLICACION  reduce using rule 70 (expresion -> CADENA .)
    DIVISION        reduce using rule 70 (expresion -> CADENA .)
    PTCOMA          reduce using rule 70 (expresion -> CADENA .)
    PUNTO           reduce using rule 70 (expresion -> CADENA .)
    PDER            reduce using rule 70 (expresion -> CADENA .)
    CORDER          reduce using rule 70 (expresion -> CADENA .)
    COMA            reduce using rule 70 (expresion -> CADENA .)


state 73

    (71) expresion -> TRUE .

    OR              reduce using rule 71 (expresion -> TRUE .)
    AND             reduce using rule 71 (expresion -> TRUE .)
    MENOR           reduce using rule 71 (expresion -> TRUE .)
    MAYOR           reduce using rule 71 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 71 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 71 (expresion -> TRUE .)
    DIFERENTE       reduce using rule 71 (expresion -> TRUE .)
    IGUALIGUAL      reduce using rule 71 (expresion -> TRUE .)
    MAS             reduce using rule 71 (expresion -> TRUE .)
    MENOS           reduce using rule 71 (expresion -> TRUE .)
    MULTIPLICACION  reduce using rule 71 (expresion -> TRUE .)
    DIVISION        reduce using rule 71 (expresion -> TRUE .)
    PTCOMA          reduce using rule 71 (expresion -> TRUE .)
    PUNTO           reduce using rule 71 (expresion -> TRUE .)
    PDER            reduce using rule 71 (expresion -> TRUE .)
    CORDER          reduce using rule 71 (expresion -> TRUE .)
    COMA            reduce using rule 71 (expresion -> TRUE .)


state 74

    (72) expresion -> FALSE .

    OR              reduce using rule 72 (expresion -> FALSE .)
    AND             reduce using rule 72 (expresion -> FALSE .)
    MENOR           reduce using rule 72 (expresion -> FALSE .)
    MAYOR           reduce using rule 72 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 72 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 72 (expresion -> FALSE .)
    DIFERENTE       reduce using rule 72 (expresion -> FALSE .)
    IGUALIGUAL      reduce using rule 72 (expresion -> FALSE .)
    MAS             reduce using rule 72 (expresion -> FALSE .)
    MENOS           reduce using rule 72 (expresion -> FALSE .)
    MULTIPLICACION  reduce using rule 72 (expresion -> FALSE .)
    DIVISION        reduce using rule 72 (expresion -> FALSE .)
    PTCOMA          reduce using rule 72 (expresion -> FALSE .)
    PUNTO           reduce using rule 72 (expresion -> FALSE .)
    PDER            reduce using rule 72 (expresion -> FALSE .)
    CORDER          reduce using rule 72 (expresion -> FALSE .)
    COMA            reduce using rule 72 (expresion -> FALSE .)


state 75

    (73) expresion -> llamada .

    OR              reduce using rule 73 (expresion -> llamada .)
    AND             reduce using rule 73 (expresion -> llamada .)
    MENOR           reduce using rule 73 (expresion -> llamada .)
    MAYOR           reduce using rule 73 (expresion -> llamada .)
    MAYORIGUAL      reduce using rule 73 (expresion -> llamada .)
    MENORIGUAL      reduce using rule 73 (expresion -> llamada .)
    DIFERENTE       reduce using rule 73 (expresion -> llamada .)
    IGUALIGUAL      reduce using rule 73 (expresion -> llamada .)
    MAS             reduce using rule 73 (expresion -> llamada .)
    MENOS           reduce using rule 73 (expresion -> llamada .)
    MULTIPLICACION  reduce using rule 73 (expresion -> llamada .)
    DIVISION        reduce using rule 73 (expresion -> llamada .)
    PTCOMA          reduce using rule 73 (expresion -> llamada .)
    PUNTO           reduce using rule 73 (expresion -> llamada .)
    PDER            reduce using rule 73 (expresion -> llamada .)
    CORDER          reduce using rule 73 (expresion -> llamada .)
    COMA            reduce using rule 73 (expresion -> llamada .)


state 76

    (74) expresion -> acceso_objeto_expresion .

    OR              reduce using rule 74 (expresion -> acceso_objeto_expresion .)
    AND             reduce using rule 74 (expresion -> acceso_objeto_expresion .)
    MENOR           reduce using rule 74 (expresion -> acceso_objeto_expresion .)
    MAYOR           reduce using rule 74 (expresion -> acceso_objeto_expresion .)
    MAYORIGUAL      reduce using rule 74 (expresion -> acceso_objeto_expresion .)
    MENORIGUAL      reduce using rule 74 (expresion -> acceso_objeto_expresion .)
    DIFERENTE       reduce using rule 74 (expresion -> acceso_objeto_expresion .)
    IGUALIGUAL      reduce using rule 74 (expresion -> acceso_objeto_expresion .)
    MAS             reduce using rule 74 (expresion -> acceso_objeto_expresion .)
    MENOS           reduce using rule 74 (expresion -> acceso_objeto_expresion .)
    MULTIPLICACION  reduce using rule 74 (expresion -> acceso_objeto_expresion .)
    DIVISION        reduce using rule 74 (expresion -> acceso_objeto_expresion .)
    PTCOMA          reduce using rule 74 (expresion -> acceso_objeto_expresion .)
    PUNTO           reduce using rule 74 (expresion -> acceso_objeto_expresion .)
    PDER            reduce using rule 74 (expresion -> acceso_objeto_expresion .)
    CORDER          reduce using rule 74 (expresion -> acceso_objeto_expresion .)
    COMA            reduce using rule 74 (expresion -> acceso_objeto_expresion .)


state 77

    (75) expresion -> acceso_array_expresion .

    OR              reduce using rule 75 (expresion -> acceso_array_expresion .)
    AND             reduce using rule 75 (expresion -> acceso_array_expresion .)
    MENOR           reduce using rule 75 (expresion -> acceso_array_expresion .)
    MAYOR           reduce using rule 75 (expresion -> acceso_array_expresion .)
    MAYORIGUAL      reduce using rule 75 (expresion -> acceso_array_expresion .)
    MENORIGUAL      reduce using rule 75 (expresion -> acceso_array_expresion .)
    DIFERENTE       reduce using rule 75 (expresion -> acceso_array_expresion .)
    IGUALIGUAL      reduce using rule 75 (expresion -> acceso_array_expresion .)
    MAS             reduce using rule 75 (expresion -> acceso_array_expresion .)
    MENOS           reduce using rule 75 (expresion -> acceso_array_expresion .)
    MULTIPLICACION  reduce using rule 75 (expresion -> acceso_array_expresion .)
    DIVISION        reduce using rule 75 (expresion -> acceso_array_expresion .)
    PTCOMA          reduce using rule 75 (expresion -> acceso_array_expresion .)
    PUNTO           reduce using rule 75 (expresion -> acceso_array_expresion .)
    PDER            reduce using rule 75 (expresion -> acceso_array_expresion .)
    CORDER          reduce using rule 75 (expresion -> acceso_array_expresion .)
    COMA            reduce using rule 75 (expresion -> acceso_array_expresion .)


state 78

    (76) expresion -> instancia_objeto .

    OR              reduce using rule 76 (expresion -> instancia_objeto .)
    AND             reduce using rule 76 (expresion -> instancia_objeto .)
    MENOR           reduce using rule 76 (expresion -> instancia_objeto .)
    MAYOR           reduce using rule 76 (expresion -> instancia_objeto .)
    MAYORIGUAL      reduce using rule 76 (expresion -> instancia_objeto .)
    MENORIGUAL      reduce using rule 76 (expresion -> instancia_objeto .)
    DIFERENTE       reduce using rule 76 (expresion -> instancia_objeto .)
    IGUALIGUAL      reduce using rule 76 (expresion -> instancia_objeto .)
    MAS             reduce using rule 76 (expresion -> instancia_objeto .)
    MENOS           reduce using rule 76 (expresion -> instancia_objeto .)
    MULTIPLICACION  reduce using rule 76 (expresion -> instancia_objeto .)
    DIVISION        reduce using rule 76 (expresion -> instancia_objeto .)
    PTCOMA          reduce using rule 76 (expresion -> instancia_objeto .)
    PUNTO           reduce using rule 76 (expresion -> instancia_objeto .)
    PDER            reduce using rule 76 (expresion -> instancia_objeto .)
    CORDER          reduce using rule 76 (expresion -> instancia_objeto .)
    COMA            reduce using rule 76 (expresion -> instancia_objeto .)


state 79

    (77) expresion -> array_data .

    OR              reduce using rule 77 (expresion -> array_data .)
    AND             reduce using rule 77 (expresion -> array_data .)
    MENOR           reduce using rule 77 (expresion -> array_data .)
    MAYOR           reduce using rule 77 (expresion -> array_data .)
    MAYORIGUAL      reduce using rule 77 (expresion -> array_data .)
    MENORIGUAL      reduce using rule 77 (expresion -> array_data .)
    DIFERENTE       reduce using rule 77 (expresion -> array_data .)
    IGUALIGUAL      reduce using rule 77 (expresion -> array_data .)
    MAS             reduce using rule 77 (expresion -> array_data .)
    MENOS           reduce using rule 77 (expresion -> array_data .)
    MULTIPLICACION  reduce using rule 77 (expresion -> array_data .)
    DIVISION        reduce using rule 77 (expresion -> array_data .)
    PTCOMA          reduce using rule 77 (expresion -> array_data .)
    PUNTO           reduce using rule 77 (expresion -> array_data .)
    PDER            reduce using rule 77 (expresion -> array_data .)
    CORDER          reduce using rule 77 (expresion -> array_data .)
    COMA            reduce using rule 77 (expresion -> array_data .)


state 80

    (78) expresion -> array_instancia .

    OR              reduce using rule 78 (expresion -> array_instancia .)
    AND             reduce using rule 78 (expresion -> array_instancia .)
    MENOR           reduce using rule 78 (expresion -> array_instancia .)
    MAYOR           reduce using rule 78 (expresion -> array_instancia .)
    MAYORIGUAL      reduce using rule 78 (expresion -> array_instancia .)
    MENORIGUAL      reduce using rule 78 (expresion -> array_instancia .)
    DIFERENTE       reduce using rule 78 (expresion -> array_instancia .)
    IGUALIGUAL      reduce using rule 78 (expresion -> array_instancia .)
    MAS             reduce using rule 78 (expresion -> array_instancia .)
    MENOS           reduce using rule 78 (expresion -> array_instancia .)
    MULTIPLICACION  reduce using rule 78 (expresion -> array_instancia .)
    DIVISION        reduce using rule 78 (expresion -> array_instancia .)
    PTCOMA          reduce using rule 78 (expresion -> array_instancia .)
    PUNTO           reduce using rule 78 (expresion -> array_instancia .)
    PDER            reduce using rule 78 (expresion -> array_instancia .)
    CORDER          reduce using rule 78 (expresion -> array_instancia .)
    COMA            reduce using rule 78 (expresion -> array_instancia .)


state 81

    (79) expresion -> if_instr .

    OR              reduce using rule 79 (expresion -> if_instr .)
    AND             reduce using rule 79 (expresion -> if_instr .)
    MENOR           reduce using rule 79 (expresion -> if_instr .)
    MAYOR           reduce using rule 79 (expresion -> if_instr .)
    MAYORIGUAL      reduce using rule 79 (expresion -> if_instr .)
    MENORIGUAL      reduce using rule 79 (expresion -> if_instr .)
    DIFERENTE       reduce using rule 79 (expresion -> if_instr .)
    IGUALIGUAL      reduce using rule 79 (expresion -> if_instr .)
    MAS             reduce using rule 79 (expresion -> if_instr .)
    MENOS           reduce using rule 79 (expresion -> if_instr .)
    MULTIPLICACION  reduce using rule 79 (expresion -> if_instr .)
    DIVISION        reduce using rule 79 (expresion -> if_instr .)
    PTCOMA          reduce using rule 79 (expresion -> if_instr .)
    PUNTO           reduce using rule 79 (expresion -> if_instr .)
    PDER            reduce using rule 79 (expresion -> if_instr .)
    CORDER          reduce using rule 79 (expresion -> if_instr .)
    COMA            reduce using rule 79 (expresion -> if_instr .)


state 82

    (87) acceso_objeto_expresion -> acceso_objeto .
    (88) acceso_objeto -> acceso_objeto . PUNTO expresion

  ! shift/reduce conflict for PUNTO resolved as shift
    OR              reduce using rule 87 (acceso_objeto_expresion -> acceso_objeto .)
    AND             reduce using rule 87 (acceso_objeto_expresion -> acceso_objeto .)
    MENOR           reduce using rule 87 (acceso_objeto_expresion -> acceso_objeto .)
    MAYOR           reduce using rule 87 (acceso_objeto_expresion -> acceso_objeto .)
    MAYORIGUAL      reduce using rule 87 (acceso_objeto_expresion -> acceso_objeto .)
    MENORIGUAL      reduce using rule 87 (acceso_objeto_expresion -> acceso_objeto .)
    DIFERENTE       reduce using rule 87 (acceso_objeto_expresion -> acceso_objeto .)
    IGUALIGUAL      reduce using rule 87 (acceso_objeto_expresion -> acceso_objeto .)
    MAS             reduce using rule 87 (acceso_objeto_expresion -> acceso_objeto .)
    MENOS           reduce using rule 87 (acceso_objeto_expresion -> acceso_objeto .)
    MULTIPLICACION  reduce using rule 87 (acceso_objeto_expresion -> acceso_objeto .)
    DIVISION        reduce using rule 87 (acceso_objeto_expresion -> acceso_objeto .)
    PTCOMA          reduce using rule 87 (acceso_objeto_expresion -> acceso_objeto .)
    PDER            reduce using rule 87 (acceso_objeto_expresion -> acceso_objeto .)
    CORDER          reduce using rule 87 (acceso_objeto_expresion -> acceso_objeto .)
    COMA            reduce using rule 87 (acceso_objeto_expresion -> acceso_objeto .)
    PUNTO           shift and go to state 120

  ! PUNTO           [ reduce using rule 87 (acceso_objeto_expresion -> acceso_objeto .) ]


state 83

    (85) instancia_objeto -> NEW . ID PIZQ PDER
    (86) instancia_objeto -> NEW . ID PIZQ lista_expresiones PDER
    (81) array_instancia -> NEW . tipo_dato dimensiones
    (96) tipo_dato -> . INT
    (97) tipo_dato -> . STRING_TYPE
    (98) tipo_dato -> . BOOLEAN
    (99) tipo_dato -> . FLOAT

    ID              shift and go to state 121
    INT             shift and go to state 26
    STRING_TYPE     shift and go to state 27
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 29

    tipo_dato                      shift and go to state 122

state 84

    (80) array_data -> CORIZQ . lista_expresiones CORDER
    (50) lista_expresiones -> . lista_expresiones COMA expresion
    (51) lista_expresiones -> . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    lista_expresiones              shift and go to state 123
    expresion                      shift and go to state 124
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 85

    (17) bloque -> LLAVEIZQ instrucciones LLAVEDER .

    error           reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CLASS           reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    INT             reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    STRING_TYPE     reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    BOOLEAN         reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    VOID            reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    FLOAT           reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    ELSE_W          reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PRINT           reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    RETURN_W        reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    IF_W            reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENOR           reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAYOR           reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIGUAL      reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENORIGUAL      reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    DIFERENTE       reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    IGUALIGUAL      reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MULTIPLICACION  reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    DIVISION        reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PUNTO           reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PDER            reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CORDER          reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)


state 86

    (21) instrucciones -> instrucciones instruccion .

    LLAVEDER        reduce using rule 21 (instrucciones -> instrucciones instruccion .)
    error           reduce using rule 21 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 21 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 21 (instrucciones -> instrucciones instruccion .)
    RETURN_W        reduce using rule 21 (instrucciones -> instrucciones instruccion .)
    IF_W            reduce using rule 21 (instrucciones -> instrucciones instruccion .)
    INT             reduce using rule 21 (instrucciones -> instrucciones instruccion .)
    STRING_TYPE     reduce using rule 21 (instrucciones -> instrucciones instruccion .)
    BOOLEAN         reduce using rule 21 (instrucciones -> instrucciones instruccion .)
    FLOAT           reduce using rule 21 (instrucciones -> instrucciones instruccion .)


state 87

    (23) instruccion -> print_inst PTCOMA .

    LLAVEDER        reduce using rule 23 (instruccion -> print_inst PTCOMA .)
    error           reduce using rule 23 (instruccion -> print_inst PTCOMA .)
    PRINT           reduce using rule 23 (instruccion -> print_inst PTCOMA .)
    ID              reduce using rule 23 (instruccion -> print_inst PTCOMA .)
    RETURN_W        reduce using rule 23 (instruccion -> print_inst PTCOMA .)
    IF_W            reduce using rule 23 (instruccion -> print_inst PTCOMA .)
    INT             reduce using rule 23 (instruccion -> print_inst PTCOMA .)
    STRING_TYPE     reduce using rule 23 (instruccion -> print_inst PTCOMA .)
    BOOLEAN         reduce using rule 23 (instruccion -> print_inst PTCOMA .)
    FLOAT           reduce using rule 23 (instruccion -> print_inst PTCOMA .)


state 88

    (24) instruccion -> declaracion PTCOMA .

    LLAVEDER        reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    error           reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    PRINT           reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    ID              reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    RETURN_W        reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    IF_W            reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    INT             reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    STRING_TYPE     reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    BOOLEAN         reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    FLOAT           reduce using rule 24 (instruccion -> declaracion PTCOMA .)


state 89

    (25) instruccion -> declaracion_objeto PTCOMA .

    LLAVEDER        reduce using rule 25 (instruccion -> declaracion_objeto PTCOMA .)
    error           reduce using rule 25 (instruccion -> declaracion_objeto PTCOMA .)
    PRINT           reduce using rule 25 (instruccion -> declaracion_objeto PTCOMA .)
    ID              reduce using rule 25 (instruccion -> declaracion_objeto PTCOMA .)
    RETURN_W        reduce using rule 25 (instruccion -> declaracion_objeto PTCOMA .)
    IF_W            reduce using rule 25 (instruccion -> declaracion_objeto PTCOMA .)
    INT             reduce using rule 25 (instruccion -> declaracion_objeto PTCOMA .)
    STRING_TYPE     reduce using rule 25 (instruccion -> declaracion_objeto PTCOMA .)
    BOOLEAN         reduce using rule 25 (instruccion -> declaracion_objeto PTCOMA .)
    FLOAT           reduce using rule 25 (instruccion -> declaracion_objeto PTCOMA .)


state 90

    (26) instruccion -> declaracion_arreglo PTCOMA .

    LLAVEDER        reduce using rule 26 (instruccion -> declaracion_arreglo PTCOMA .)
    error           reduce using rule 26 (instruccion -> declaracion_arreglo PTCOMA .)
    PRINT           reduce using rule 26 (instruccion -> declaracion_arreglo PTCOMA .)
    ID              reduce using rule 26 (instruccion -> declaracion_arreglo PTCOMA .)
    RETURN_W        reduce using rule 26 (instruccion -> declaracion_arreglo PTCOMA .)
    IF_W            reduce using rule 26 (instruccion -> declaracion_arreglo PTCOMA .)
    INT             reduce using rule 26 (instruccion -> declaracion_arreglo PTCOMA .)
    STRING_TYPE     reduce using rule 26 (instruccion -> declaracion_arreglo PTCOMA .)
    BOOLEAN         reduce using rule 26 (instruccion -> declaracion_arreglo PTCOMA .)
    FLOAT           reduce using rule 26 (instruccion -> declaracion_arreglo PTCOMA .)


state 91

    (27) instruccion -> llamada PTCOMA .

    LLAVEDER        reduce using rule 27 (instruccion -> llamada PTCOMA .)
    error           reduce using rule 27 (instruccion -> llamada PTCOMA .)
    PRINT           reduce using rule 27 (instruccion -> llamada PTCOMA .)
    ID              reduce using rule 27 (instruccion -> llamada PTCOMA .)
    RETURN_W        reduce using rule 27 (instruccion -> llamada PTCOMA .)
    IF_W            reduce using rule 27 (instruccion -> llamada PTCOMA .)
    INT             reduce using rule 27 (instruccion -> llamada PTCOMA .)
    STRING_TYPE     reduce using rule 27 (instruccion -> llamada PTCOMA .)
    BOOLEAN         reduce using rule 27 (instruccion -> llamada PTCOMA .)
    FLOAT           reduce using rule 27 (instruccion -> llamada PTCOMA .)


state 92

    (28) instruccion -> return_inst PTCOMA .

    LLAVEDER        reduce using rule 28 (instruccion -> return_inst PTCOMA .)
    error           reduce using rule 28 (instruccion -> return_inst PTCOMA .)
    PRINT           reduce using rule 28 (instruccion -> return_inst PTCOMA .)
    ID              reduce using rule 28 (instruccion -> return_inst PTCOMA .)
    RETURN_W        reduce using rule 28 (instruccion -> return_inst PTCOMA .)
    IF_W            reduce using rule 28 (instruccion -> return_inst PTCOMA .)
    INT             reduce using rule 28 (instruccion -> return_inst PTCOMA .)
    STRING_TYPE     reduce using rule 28 (instruccion -> return_inst PTCOMA .)
    BOOLEAN         reduce using rule 28 (instruccion -> return_inst PTCOMA .)
    FLOAT           reduce using rule 28 (instruccion -> return_inst PTCOMA .)


state 93

    (30) instruccion -> error PTCOMA .

    LLAVEDER        reduce using rule 30 (instruccion -> error PTCOMA .)
    error           reduce using rule 30 (instruccion -> error PTCOMA .)
    PRINT           reduce using rule 30 (instruccion -> error PTCOMA .)
    ID              reduce using rule 30 (instruccion -> error PTCOMA .)
    RETURN_W        reduce using rule 30 (instruccion -> error PTCOMA .)
    IF_W            reduce using rule 30 (instruccion -> error PTCOMA .)
    INT             reduce using rule 30 (instruccion -> error PTCOMA .)
    STRING_TYPE     reduce using rule 30 (instruccion -> error PTCOMA .)
    BOOLEAN         reduce using rule 30 (instruccion -> error PTCOMA .)
    FLOAT           reduce using rule 30 (instruccion -> error PTCOMA .)


state 94

    (38) print_inst -> PRINT PIZQ . expresion PDER
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 125
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 95

    (33) declaracion_arreglo -> tipo_dato niveles . ID IGUAL expresion
    (34) niveles -> niveles . nivel
    (36) nivel -> . CORIZQ CORDER

    ID              shift and go to state 126
    CORIZQ          shift and go to state 97

    nivel                          shift and go to state 127

state 96

    (35) niveles -> nivel .

    ID              reduce using rule 35 (niveles -> nivel .)
    CORIZQ          reduce using rule 35 (niveles -> nivel .)


state 97

    (36) nivel -> CORIZQ . CORDER

    CORDER          shift and go to state 128


state 98

    (37) declaracion_objeto -> ID ID . IGUAL expresion

    IGUAL           shift and go to state 129


state 99

    (39) llamada -> ID PIZQ . PDER
    (40) llamada -> ID PIZQ . lista_expresiones PDER
    (50) lista_expresiones -> . lista_expresiones COMA expresion
    (51) lista_expresiones -> . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    PDER            shift and go to state 130
    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    lista_expresiones              shift and go to state 131
    expresion                      shift and go to state 124
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 100

    (42) return_inst -> RETURN_W expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 42 (return_inst -> RETURN_W expresion .)
    PTCOMA          reduce using rule 42 (return_inst -> RETURN_W expresion .)
    OR              shift and go to state 105
    AND             shift and go to state 106
    MENOR           shift and go to state 107
    MAYOR           shift and go to state 108
    MAYORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    DIFERENTE       shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116
    PUNTO           reduce using rule 89 (acceso_objeto -> expresion .)

  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 101

    (43) if_instr -> IF_W PIZQ . expresion PDER bloque
    (44) if_instr -> IF_W PIZQ . expresion PDER bloque ELSE_W bloque
    (45) if_instr -> IF_W PIZQ . expresion PDER bloque listaelseif
    (46) if_instr -> IF_W PIZQ . expresion PDER bloque listaelseif ELSE_W bloque
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 132
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 102

    (90) acceso_array_expresion -> ID dimensiones .
    (82) dimensiones -> dimensiones . dimension
    (84) dimension -> . CORIZQ expresion CORDER

    OR              reduce using rule 90 (acceso_array_expresion -> ID dimensiones .)
    AND             reduce using rule 90 (acceso_array_expresion -> ID dimensiones .)
    MENOR           reduce using rule 90 (acceso_array_expresion -> ID dimensiones .)
    MAYOR           reduce using rule 90 (acceso_array_expresion -> ID dimensiones .)
    MAYORIGUAL      reduce using rule 90 (acceso_array_expresion -> ID dimensiones .)
    MENORIGUAL      reduce using rule 90 (acceso_array_expresion -> ID dimensiones .)
    DIFERENTE       reduce using rule 90 (acceso_array_expresion -> ID dimensiones .)
    IGUALIGUAL      reduce using rule 90 (acceso_array_expresion -> ID dimensiones .)
    MAS             reduce using rule 90 (acceso_array_expresion -> ID dimensiones .)
    MENOS           reduce using rule 90 (acceso_array_expresion -> ID dimensiones .)
    MULTIPLICACION  reduce using rule 90 (acceso_array_expresion -> ID dimensiones .)
    DIVISION        reduce using rule 90 (acceso_array_expresion -> ID dimensiones .)
    PTCOMA          reduce using rule 90 (acceso_array_expresion -> ID dimensiones .)
    PUNTO           reduce using rule 90 (acceso_array_expresion -> ID dimensiones .)
    PDER            reduce using rule 90 (acceso_array_expresion -> ID dimensiones .)
    CORDER          reduce using rule 90 (acceso_array_expresion -> ID dimensiones .)
    COMA            reduce using rule 90 (acceso_array_expresion -> ID dimensiones .)
    CORIZQ          shift and go to state 104

    dimension                      shift and go to state 133

state 103

    (83) dimensiones -> dimension .

    CORIZQ          reduce using rule 83 (dimensiones -> dimension .)
    OR              reduce using rule 83 (dimensiones -> dimension .)
    AND             reduce using rule 83 (dimensiones -> dimension .)
    MENOR           reduce using rule 83 (dimensiones -> dimension .)
    MAYOR           reduce using rule 83 (dimensiones -> dimension .)
    MAYORIGUAL      reduce using rule 83 (dimensiones -> dimension .)
    MENORIGUAL      reduce using rule 83 (dimensiones -> dimension .)
    DIFERENTE       reduce using rule 83 (dimensiones -> dimension .)
    IGUALIGUAL      reduce using rule 83 (dimensiones -> dimension .)
    MAS             reduce using rule 83 (dimensiones -> dimension .)
    MENOS           reduce using rule 83 (dimensiones -> dimension .)
    MULTIPLICACION  reduce using rule 83 (dimensiones -> dimension .)
    DIVISION        reduce using rule 83 (dimensiones -> dimension .)
    PTCOMA          reduce using rule 83 (dimensiones -> dimension .)
    PUNTO           reduce using rule 83 (dimensiones -> dimension .)
    PDER            reduce using rule 83 (dimensiones -> dimension .)
    CORDER          reduce using rule 83 (dimensiones -> dimension .)
    COMA            reduce using rule 83 (dimensiones -> dimension .)


state 104

    (84) dimension -> CORIZQ . expresion CORDER
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 134
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 105

    (52) expresion -> expresion OR . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 135
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 106

    (53) expresion -> expresion AND . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 136
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 107

    (55) expresion -> expresion MENOR . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 137
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 108

    (56) expresion -> expresion MAYOR . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 138
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 109

    (57) expresion -> expresion MAYORIGUAL . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 139
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 110

    (58) expresion -> expresion MENORIGUAL . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 140
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 111

    (59) expresion -> expresion DIFERENTE . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 141
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 112

    (60) expresion -> expresion IGUALIGUAL . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 142
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 113

    (62) expresion -> expresion MAS . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 143
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 114

    (63) expresion -> expresion MENOS . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 144
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 115

    (64) expresion -> expresion MULTIPLICACION . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 145
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 116

    (65) expresion -> expresion DIVISION . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 146
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 117

    (54) expresion -> NOT expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 54 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for AND resolved using rule 54 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for MENOR resolved using rule 54 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 54 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 54 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 54 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 54 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 54 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 54 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 54 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 54 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for DIVISION resolved using rule 54 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 54 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 54 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 54 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 54 (expresion -> NOT expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 54 (expresion -> NOT expresion .)
    OR              reduce using rule 54 (expresion -> NOT expresion .)
    AND             reduce using rule 54 (expresion -> NOT expresion .)
    MENOR           reduce using rule 54 (expresion -> NOT expresion .)
    MAYOR           reduce using rule 54 (expresion -> NOT expresion .)
    MAYORIGUAL      reduce using rule 54 (expresion -> NOT expresion .)
    MENORIGUAL      reduce using rule 54 (expresion -> NOT expresion .)
    DIFERENTE       reduce using rule 54 (expresion -> NOT expresion .)
    IGUALIGUAL      reduce using rule 54 (expresion -> NOT expresion .)
    MAS             reduce using rule 54 (expresion -> NOT expresion .)
    MENOS           reduce using rule 54 (expresion -> NOT expresion .)
    MULTIPLICACION  reduce using rule 54 (expresion -> NOT expresion .)
    DIVISION        reduce using rule 54 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 54 (expresion -> NOT expresion .)
    PUNTO           reduce using rule 54 (expresion -> NOT expresion .)
    PDER            reduce using rule 54 (expresion -> NOT expresion .)
    CORDER          reduce using rule 54 (expresion -> NOT expresion .)
    COMA            reduce using rule 54 (expresion -> NOT expresion .)

  ! OR              [ shift and go to state 105 ]
  ! AND             [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MAYORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! DIFERENTE       [ shift and go to state 111 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! MAS             [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! MULTIPLICACION  [ shift and go to state 115 ]
  ! DIVISION        [ shift and go to state 116 ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 118

    (61) expresion -> MENOS expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 61 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for AND resolved using rule 61 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for MENOR resolved using rule 61 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 61 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 61 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 61 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 61 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 61 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 61 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 61 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 61 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for DIVISION resolved using rule 61 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 61 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 61 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 61 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 61 (expresion -> MENOS expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 61 (expresion -> MENOS expresion .)
    OR              reduce using rule 61 (expresion -> MENOS expresion .)
    AND             reduce using rule 61 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 61 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 61 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 61 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 61 (expresion -> MENOS expresion .)
    DIFERENTE       reduce using rule 61 (expresion -> MENOS expresion .)
    IGUALIGUAL      reduce using rule 61 (expresion -> MENOS expresion .)
    MAS             reduce using rule 61 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 61 (expresion -> MENOS expresion .)
    MULTIPLICACION  reduce using rule 61 (expresion -> MENOS expresion .)
    DIVISION        reduce using rule 61 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 61 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 61 (expresion -> MENOS expresion .)
    PDER            reduce using rule 61 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 61 (expresion -> MENOS expresion .)
    COMA            reduce using rule 61 (expresion -> MENOS expresion .)

  ! OR              [ shift and go to state 105 ]
  ! AND             [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MAYORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! DIFERENTE       [ shift and go to state 111 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! MAS             [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! MULTIPLICACION  [ shift and go to state 115 ]
  ! DIVISION        [ shift and go to state 116 ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 119

    (66) expresion -> PIZQ expresion . PDER
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! shift/reduce conflict for PDER resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    PDER            shift and go to state 147
    OR              shift and go to state 105
    AND             shift and go to state 106
    MENOR           shift and go to state 107
    MAYOR           shift and go to state 108
    MAYORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    DIFERENTE       shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116
    PUNTO           reduce using rule 89 (acceso_objeto -> expresion .)

  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 120

    (88) acceso_objeto -> acceso_objeto PUNTO . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    acceso_objeto                  shift and go to state 82
    expresion                      shift and go to state 148
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81

state 121

    (85) instancia_objeto -> NEW ID . PIZQ PDER
    (86) instancia_objeto -> NEW ID . PIZQ lista_expresiones PDER

    PIZQ            shift and go to state 149


state 122

    (81) array_instancia -> NEW tipo_dato . dimensiones
    (82) dimensiones -> . dimensiones dimension
    (83) dimensiones -> . dimension
    (84) dimension -> . CORIZQ expresion CORDER

    CORIZQ          shift and go to state 104

    dimensiones                    shift and go to state 150
    dimension                      shift and go to state 103

state 123

    (80) array_data -> CORIZQ lista_expresiones . CORDER
    (50) lista_expresiones -> lista_expresiones . COMA expresion

    CORDER          shift and go to state 151
    COMA            shift and go to state 152


state 124

    (51) lista_expresiones -> expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for CORDER resolved using rule 51 (lista_expresiones -> expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 51 (lista_expresiones -> expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 51 (lista_expresiones -> expresion .)
    CORDER          reduce using rule 51 (lista_expresiones -> expresion .)
    COMA            reduce using rule 51 (lista_expresiones -> expresion .)
    PDER            reduce using rule 51 (lista_expresiones -> expresion .)
    OR              shift and go to state 105
    AND             shift and go to state 106
    MENOR           shift and go to state 107
    MAYOR           shift and go to state 108
    MAYORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    DIFERENTE       shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116
    PUNTO           reduce using rule 89 (acceso_objeto -> expresion .)

  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 125

    (38) print_inst -> PRINT PIZQ expresion . PDER
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! shift/reduce conflict for PDER resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    PDER            shift and go to state 153
    OR              shift and go to state 105
    AND             shift and go to state 106
    MENOR           shift and go to state 107
    MAYOR           shift and go to state 108
    MAYORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    DIFERENTE       shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116
    PUNTO           reduce using rule 89 (acceso_objeto -> expresion .)

  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 126

    (33) declaracion_arreglo -> tipo_dato niveles ID . IGUAL expresion

    IGUAL           shift and go to state 154


state 127

    (34) niveles -> niveles nivel .

    ID              reduce using rule 34 (niveles -> niveles nivel .)
    CORIZQ          reduce using rule 34 (niveles -> niveles nivel .)


state 128

    (36) nivel -> CORIZQ CORDER .

    ID              reduce using rule 36 (nivel -> CORIZQ CORDER .)
    CORIZQ          reduce using rule 36 (nivel -> CORIZQ CORDER .)


state 129

    (37) declaracion_objeto -> ID ID IGUAL . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 155
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 130

    (39) llamada -> ID PIZQ PDER .

    PTCOMA          reduce using rule 39 (llamada -> ID PIZQ PDER .)
    OR              reduce using rule 39 (llamada -> ID PIZQ PDER .)
    AND             reduce using rule 39 (llamada -> ID PIZQ PDER .)
    MENOR           reduce using rule 39 (llamada -> ID PIZQ PDER .)
    MAYOR           reduce using rule 39 (llamada -> ID PIZQ PDER .)
    MAYORIGUAL      reduce using rule 39 (llamada -> ID PIZQ PDER .)
    MENORIGUAL      reduce using rule 39 (llamada -> ID PIZQ PDER .)
    DIFERENTE       reduce using rule 39 (llamada -> ID PIZQ PDER .)
    IGUALIGUAL      reduce using rule 39 (llamada -> ID PIZQ PDER .)
    MAS             reduce using rule 39 (llamada -> ID PIZQ PDER .)
    MENOS           reduce using rule 39 (llamada -> ID PIZQ PDER .)
    MULTIPLICACION  reduce using rule 39 (llamada -> ID PIZQ PDER .)
    DIVISION        reduce using rule 39 (llamada -> ID PIZQ PDER .)
    PUNTO           reduce using rule 39 (llamada -> ID PIZQ PDER .)
    PDER            reduce using rule 39 (llamada -> ID PIZQ PDER .)
    CORDER          reduce using rule 39 (llamada -> ID PIZQ PDER .)
    COMA            reduce using rule 39 (llamada -> ID PIZQ PDER .)


state 131

    (40) llamada -> ID PIZQ lista_expresiones . PDER
    (50) lista_expresiones -> lista_expresiones . COMA expresion

    PDER            shift and go to state 156
    COMA            shift and go to state 152


state 132

    (43) if_instr -> IF_W PIZQ expresion . PDER bloque
    (44) if_instr -> IF_W PIZQ expresion . PDER bloque ELSE_W bloque
    (45) if_instr -> IF_W PIZQ expresion . PDER bloque listaelseif
    (46) if_instr -> IF_W PIZQ expresion . PDER bloque listaelseif ELSE_W bloque
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! shift/reduce conflict for PDER resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    PDER            shift and go to state 157
    OR              shift and go to state 105
    AND             shift and go to state 106
    MENOR           shift and go to state 107
    MAYOR           shift and go to state 108
    MAYORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    DIFERENTE       shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116
    PUNTO           reduce using rule 89 (acceso_objeto -> expresion .)

  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 133

    (82) dimensiones -> dimensiones dimension .

    CORIZQ          reduce using rule 82 (dimensiones -> dimensiones dimension .)
    OR              reduce using rule 82 (dimensiones -> dimensiones dimension .)
    AND             reduce using rule 82 (dimensiones -> dimensiones dimension .)
    MENOR           reduce using rule 82 (dimensiones -> dimensiones dimension .)
    MAYOR           reduce using rule 82 (dimensiones -> dimensiones dimension .)
    MAYORIGUAL      reduce using rule 82 (dimensiones -> dimensiones dimension .)
    MENORIGUAL      reduce using rule 82 (dimensiones -> dimensiones dimension .)
    DIFERENTE       reduce using rule 82 (dimensiones -> dimensiones dimension .)
    IGUALIGUAL      reduce using rule 82 (dimensiones -> dimensiones dimension .)
    MAS             reduce using rule 82 (dimensiones -> dimensiones dimension .)
    MENOS           reduce using rule 82 (dimensiones -> dimensiones dimension .)
    MULTIPLICACION  reduce using rule 82 (dimensiones -> dimensiones dimension .)
    DIVISION        reduce using rule 82 (dimensiones -> dimensiones dimension .)
    PTCOMA          reduce using rule 82 (dimensiones -> dimensiones dimension .)
    PUNTO           reduce using rule 82 (dimensiones -> dimensiones dimension .)
    PDER            reduce using rule 82 (dimensiones -> dimensiones dimension .)
    CORDER          reduce using rule 82 (dimensiones -> dimensiones dimension .)
    COMA            reduce using rule 82 (dimensiones -> dimensiones dimension .)


state 134

    (84) dimension -> CORIZQ expresion . CORDER
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! shift/reduce conflict for CORDER resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    CORDER          shift and go to state 158
    OR              shift and go to state 105
    AND             shift and go to state 106
    MENOR           shift and go to state 107
    MAYOR           shift and go to state 108
    MAYORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    DIFERENTE       shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116
    PUNTO           reduce using rule 89 (acceso_objeto -> expresion .)

  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 135

    (52) expresion -> expresion OR expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 52 (expresion -> expresion OR expresion .)
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 52 (expresion -> expresion OR expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 52 (expresion -> expresion OR expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 52 (expresion -> expresion OR expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 52 (expresion -> expresion OR expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 52 (expresion -> expresion OR expresion .)
    OR              reduce using rule 52 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 52 (expresion -> expresion OR expresion .)
    PUNTO           reduce using rule 52 (expresion -> expresion OR expresion .)
    PDER            reduce using rule 52 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 52 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 52 (expresion -> expresion OR expresion .)
    AND             shift and go to state 106
    MENOR           shift and go to state 107
    MAYOR           shift and go to state 108
    MAYORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    DIFERENTE       shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116

  ! AND             [ reduce using rule 52 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 52 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 52 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 52 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 52 (expresion -> expresion OR expresion .) ]
  ! DIFERENTE       [ reduce using rule 52 (expresion -> expresion OR expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 52 (expresion -> expresion OR expresion .) ]
  ! MAS             [ reduce using rule 52 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 52 (expresion -> expresion OR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 52 (expresion -> expresion OR expresion .) ]
  ! DIVISION        [ reduce using rule 52 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 105 ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 136

    (53) expresion -> expresion AND expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 53 (expresion -> expresion AND expresion .)
  ! reduce/reduce conflict for AND resolved using rule 53 (expresion -> expresion AND expresion .)
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 53 (expresion -> expresion AND expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 53 (expresion -> expresion AND expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 53 (expresion -> expresion AND expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 53 (expresion -> expresion AND expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 53 (expresion -> expresion AND expresion .)
    OR              reduce using rule 53 (expresion -> expresion AND expresion .)
    AND             reduce using rule 53 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 53 (expresion -> expresion AND expresion .)
    PUNTO           reduce using rule 53 (expresion -> expresion AND expresion .)
    PDER            reduce using rule 53 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 53 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 53 (expresion -> expresion AND expresion .)
    MENOR           shift and go to state 107
    MAYOR           shift and go to state 108
    MAYORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    DIFERENTE       shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116

  ! MENOR           [ reduce using rule 53 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 53 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 53 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 53 (expresion -> expresion AND expresion .) ]
  ! DIFERENTE       [ reduce using rule 53 (expresion -> expresion AND expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 53 (expresion -> expresion AND expresion .) ]
  ! MAS             [ reduce using rule 53 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 53 (expresion -> expresion AND expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 53 (expresion -> expresion AND expresion .) ]
  ! DIVISION        [ reduce using rule 53 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 105 ]
  ! AND             [ shift and go to state 106 ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 137

    (55) expresion -> expresion MENOR expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 55 (expresion -> expresion MENOR expresion .)
  ! reduce/reduce conflict for AND resolved using rule 55 (expresion -> expresion MENOR expresion .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 55 (expresion -> expresion MENOR expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 55 (expresion -> expresion MENOR expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 55 (expresion -> expresion MENOR expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 55 (expresion -> expresion MENOR expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 55 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 55 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 55 (expresion -> expresion MENOR expresion .)
    PTCOMA          reduce using rule 55 (expresion -> expresion MENOR expresion .)
    PUNTO           reduce using rule 55 (expresion -> expresion MENOR expresion .)
    PDER            reduce using rule 55 (expresion -> expresion MENOR expresion .)
    CORDER          reduce using rule 55 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 55 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116
    MENOR           reduce using rule 89 (acceso_objeto -> expresion .)
    MAYOR           reduce using rule 89 (acceso_objeto -> expresion .)
    MAYORIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)
    MENORIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)
    DIFERENTE       reduce using rule 89 (acceso_objeto -> expresion .)
    IGUALIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)

  ! MENOR           [ reduce using rule 55 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ reduce using rule 55 (expresion -> expresion MENOR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 55 (expresion -> expresion MENOR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 55 (expresion -> expresion MENOR expresion .) ]
  ! DIFERENTE       [ reduce using rule 55 (expresion -> expresion MENOR expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 55 (expresion -> expresion MENOR expresion .) ]
  ! MAS             [ reduce using rule 55 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 55 (expresion -> expresion MENOR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 55 (expresion -> expresion MENOR expresion .) ]
  ! DIVISION        [ reduce using rule 55 (expresion -> expresion MENOR expresion .) ]
  ! OR              [ shift and go to state 105 ]
  ! AND             [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MAYORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! DIFERENTE       [ shift and go to state 111 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 138

    (56) expresion -> expresion MAYOR expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 56 (expresion -> expresion MAYOR expresion .)
  ! reduce/reduce conflict for AND resolved using rule 56 (expresion -> expresion MAYOR expresion .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 56 (expresion -> expresion MAYOR expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 56 (expresion -> expresion MAYOR expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 56 (expresion -> expresion MAYOR expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 56 (expresion -> expresion MAYOR expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 56 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 56 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 56 (expresion -> expresion MAYOR expresion .)
    PTCOMA          reduce using rule 56 (expresion -> expresion MAYOR expresion .)
    PUNTO           reduce using rule 56 (expresion -> expresion MAYOR expresion .)
    PDER            reduce using rule 56 (expresion -> expresion MAYOR expresion .)
    CORDER          reduce using rule 56 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 56 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116
    MENOR           reduce using rule 89 (acceso_objeto -> expresion .)
    MAYOR           reduce using rule 89 (acceso_objeto -> expresion .)
    MAYORIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)
    MENORIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)
    DIFERENTE       reduce using rule 89 (acceso_objeto -> expresion .)
    IGUALIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)

  ! MENOR           [ reduce using rule 56 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ reduce using rule 56 (expresion -> expresion MAYOR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 56 (expresion -> expresion MAYOR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 56 (expresion -> expresion MAYOR expresion .) ]
  ! DIFERENTE       [ reduce using rule 56 (expresion -> expresion MAYOR expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 56 (expresion -> expresion MAYOR expresion .) ]
  ! MAS             [ reduce using rule 56 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 56 (expresion -> expresion MAYOR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 56 (expresion -> expresion MAYOR expresion .) ]
  ! DIVISION        [ reduce using rule 56 (expresion -> expresion MAYOR expresion .) ]
  ! OR              [ shift and go to state 105 ]
  ! AND             [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MAYORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! DIFERENTE       [ shift and go to state 111 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 139

    (57) expresion -> expresion MAYORIGUAL expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 57 (expresion -> expresion MAYORIGUAL expresion .)
  ! reduce/reduce conflict for AND resolved using rule 57 (expresion -> expresion MAYORIGUAL expresion .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 57 (expresion -> expresion MAYORIGUAL expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 57 (expresion -> expresion MAYORIGUAL expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 57 (expresion -> expresion MAYORIGUAL expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 57 (expresion -> expresion MAYORIGUAL expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 57 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 57 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 57 (expresion -> expresion MAYORIGUAL expresion .)
    PTCOMA          reduce using rule 57 (expresion -> expresion MAYORIGUAL expresion .)
    PUNTO           reduce using rule 57 (expresion -> expresion MAYORIGUAL expresion .)
    PDER            reduce using rule 57 (expresion -> expresion MAYORIGUAL expresion .)
    CORDER          reduce using rule 57 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 57 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116
    MENOR           reduce using rule 89 (acceso_objeto -> expresion .)
    MAYOR           reduce using rule 89 (acceso_objeto -> expresion .)
    MAYORIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)
    MENORIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)
    DIFERENTE       reduce using rule 89 (acceso_objeto -> expresion .)
    IGUALIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)

  ! MENOR           [ reduce using rule 57 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 57 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 57 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 57 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIFERENTE       [ reduce using rule 57 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 57 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAS             [ reduce using rule 57 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 57 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 57 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 57 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! OR              [ shift and go to state 105 ]
  ! AND             [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MAYORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! DIFERENTE       [ shift and go to state 111 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 140

    (58) expresion -> expresion MENORIGUAL expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 58 (expresion -> expresion MENORIGUAL expresion .)
  ! reduce/reduce conflict for AND resolved using rule 58 (expresion -> expresion MENORIGUAL expresion .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 58 (expresion -> expresion MENORIGUAL expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 58 (expresion -> expresion MENORIGUAL expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 58 (expresion -> expresion MENORIGUAL expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 58 (expresion -> expresion MENORIGUAL expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 58 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 58 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 58 (expresion -> expresion MENORIGUAL expresion .)
    PTCOMA          reduce using rule 58 (expresion -> expresion MENORIGUAL expresion .)
    PUNTO           reduce using rule 58 (expresion -> expresion MENORIGUAL expresion .)
    PDER            reduce using rule 58 (expresion -> expresion MENORIGUAL expresion .)
    CORDER          reduce using rule 58 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 58 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116
    MENOR           reduce using rule 89 (acceso_objeto -> expresion .)
    MAYOR           reduce using rule 89 (acceso_objeto -> expresion .)
    MAYORIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)
    MENORIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)
    DIFERENTE       reduce using rule 89 (acceso_objeto -> expresion .)
    IGUALIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)

  ! MENOR           [ reduce using rule 58 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 58 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 58 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 58 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIFERENTE       [ reduce using rule 58 (expresion -> expresion MENORIGUAL expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 58 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAS             [ reduce using rule 58 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 58 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 58 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 58 (expresion -> expresion MENORIGUAL expresion .) ]
  ! OR              [ shift and go to state 105 ]
  ! AND             [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MAYORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! DIFERENTE       [ shift and go to state 111 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 141

    (59) expresion -> expresion DIFERENTE expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 59 (expresion -> expresion DIFERENTE expresion .)
  ! reduce/reduce conflict for AND resolved using rule 59 (expresion -> expresion DIFERENTE expresion .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 59 (expresion -> expresion DIFERENTE expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 59 (expresion -> expresion DIFERENTE expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 59 (expresion -> expresion DIFERENTE expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 59 (expresion -> expresion DIFERENTE expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 59 (expresion -> expresion DIFERENTE expresion .)
    OR              reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    AND             reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    PTCOMA          reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    PUNTO           reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    PDER            reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    CORDER          reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    COMA            reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116
    MENOR           reduce using rule 89 (acceso_objeto -> expresion .)
    MAYOR           reduce using rule 89 (acceso_objeto -> expresion .)
    MAYORIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)
    MENORIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)
    DIFERENTE       reduce using rule 89 (acceso_objeto -> expresion .)
    IGUALIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)

  ! MENOR           [ reduce using rule 59 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYOR           [ reduce using rule 59 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 59 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENORIGUAL      [ reduce using rule 59 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIFERENTE       [ reduce using rule 59 (expresion -> expresion DIFERENTE expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 59 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAS             [ reduce using rule 59 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENOS           [ reduce using rule 59 (expresion -> expresion DIFERENTE expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 59 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIVISION        [ reduce using rule 59 (expresion -> expresion DIFERENTE expresion .) ]
  ! OR              [ shift and go to state 105 ]
  ! AND             [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MAYORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! DIFERENTE       [ shift and go to state 111 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 142

    (60) expresion -> expresion IGUALIGUAL expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 60 (expresion -> expresion IGUALIGUAL expresion .)
  ! reduce/reduce conflict for AND resolved using rule 60 (expresion -> expresion IGUALIGUAL expresion .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 60 (expresion -> expresion IGUALIGUAL expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 60 (expresion -> expresion IGUALIGUAL expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 60 (expresion -> expresion IGUALIGUAL expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 60 (expresion -> expresion IGUALIGUAL expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 60 (expresion -> expresion IGUALIGUAL expresion .)
    OR              reduce using rule 60 (expresion -> expresion IGUALIGUAL expresion .)
    AND             reduce using rule 60 (expresion -> expresion IGUALIGUAL expresion .)
    PTCOMA          reduce using rule 60 (expresion -> expresion IGUALIGUAL expresion .)
    PUNTO           reduce using rule 60 (expresion -> expresion IGUALIGUAL expresion .)
    PDER            reduce using rule 60 (expresion -> expresion IGUALIGUAL expresion .)
    CORDER          reduce using rule 60 (expresion -> expresion IGUALIGUAL expresion .)
    COMA            reduce using rule 60 (expresion -> expresion IGUALIGUAL expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116
    MENOR           reduce using rule 89 (acceso_objeto -> expresion .)
    MAYOR           reduce using rule 89 (acceso_objeto -> expresion .)
    MAYORIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)
    MENORIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)
    DIFERENTE       reduce using rule 89 (acceso_objeto -> expresion .)
    IGUALIGUAL      reduce using rule 89 (acceso_objeto -> expresion .)

  ! MENOR           [ reduce using rule 60 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 60 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 60 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 60 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! DIFERENTE       [ reduce using rule 60 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 60 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MAS             [ reduce using rule 60 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 60 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 60 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 60 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! OR              [ shift and go to state 105 ]
  ! AND             [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MAYORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! DIFERENTE       [ shift and go to state 111 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 143

    (62) expresion -> expresion MAS expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 62 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for AND resolved using rule 62 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for MENOR resolved using rule 62 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 62 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 62 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 62 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 62 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 62 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 62 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 62 (expresion -> expresion MAS expresion .)
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 62 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 62 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 62 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 62 (expresion -> expresion MAS expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 62 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 62 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 62 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 62 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 62 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 62 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 62 (expresion -> expresion MAS expresion .)
    DIFERENTE       reduce using rule 62 (expresion -> expresion MAS expresion .)
    IGUALIGUAL      reduce using rule 62 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 62 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 62 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 62 (expresion -> expresion MAS expresion .)
    PUNTO           reduce using rule 62 (expresion -> expresion MAS expresion .)
    PDER            reduce using rule 62 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 62 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 62 (expresion -> expresion MAS expresion .)
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116

  ! MULTIPLICACION  [ reduce using rule 62 (expresion -> expresion MAS expresion .) ]
  ! DIVISION        [ reduce using rule 62 (expresion -> expresion MAS expresion .) ]
  ! OR              [ shift and go to state 105 ]
  ! AND             [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MAYORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! DIFERENTE       [ shift and go to state 111 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! MAS             [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 144

    (63) expresion -> expresion MENOS expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 63 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for AND resolved using rule 63 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MENOR resolved using rule 63 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 63 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 63 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 63 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 63 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 63 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 63 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 63 (expresion -> expresion MENOS expresion .)
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 63 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 63 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 63 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 63 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 63 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 63 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 63 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 63 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 63 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 63 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 63 (expresion -> expresion MENOS expresion .)
    DIFERENTE       reduce using rule 63 (expresion -> expresion MENOS expresion .)
    IGUALIGUAL      reduce using rule 63 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 63 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 63 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 63 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 63 (expresion -> expresion MENOS expresion .)
    PDER            reduce using rule 63 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 63 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 63 (expresion -> expresion MENOS expresion .)
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116

  ! MULTIPLICACION  [ reduce using rule 63 (expresion -> expresion MENOS expresion .) ]
  ! DIVISION        [ reduce using rule 63 (expresion -> expresion MENOS expresion .) ]
  ! OR              [ shift and go to state 105 ]
  ! AND             [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MAYORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! DIFERENTE       [ shift and go to state 111 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! MAS             [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 145

    (64) expresion -> expresion MULTIPLICACION expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for AND resolved using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for MENOR resolved using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for DIVISION resolved using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    OR              reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    AND             reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    MENOR           reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    MAYOR           reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    MAYORIGUAL      reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    MENORIGUAL      reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    DIFERENTE       reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    IGUALIGUAL      reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    MAS             reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    MENOS           reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    MULTIPLICACION  reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    DIVISION        reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    PTCOMA          reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    PUNTO           reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    PDER            reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    CORDER          reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    COMA            reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)

  ! OR              [ shift and go to state 105 ]
  ! AND             [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MAYORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! DIFERENTE       [ shift and go to state 111 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! MAS             [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! MULTIPLICACION  [ shift and go to state 115 ]
  ! DIVISION        [ shift and go to state 116 ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 146

    (65) expresion -> expresion DIVISION expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! reduce/reduce conflict for OR resolved using rule 65 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for AND resolved using rule 65 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for MENOR resolved using rule 65 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 65 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 65 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 65 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 65 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 65 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for MAS resolved using rule 65 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 65 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 65 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for DIVISION resolved using rule 65 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 65 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 65 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 65 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 65 (expresion -> expresion DIVISION expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 65 (expresion -> expresion DIVISION expresion .)
    OR              reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    AND             reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    MENOR           reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    MAYOR           reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    MAYORIGUAL      reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    MENORIGUAL      reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    DIFERENTE       reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    IGUALIGUAL      reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    MAS             reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    MENOS           reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    MULTIPLICACION  reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    PTCOMA          reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    PUNTO           reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    PDER            reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    CORDER          reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    COMA            reduce using rule 65 (expresion -> expresion DIVISION expresion .)

  ! OR              [ shift and go to state 105 ]
  ! AND             [ shift and go to state 106 ]
  ! MENOR           [ shift and go to state 107 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MAYORIGUAL      [ shift and go to state 109 ]
  ! MENORIGUAL      [ shift and go to state 110 ]
  ! DIFERENTE       [ shift and go to state 111 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! MAS             [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! MULTIPLICACION  [ shift and go to state 115 ]
  ! DIVISION        [ shift and go to state 116 ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 147

    (66) expresion -> PIZQ expresion PDER .

    OR              reduce using rule 66 (expresion -> PIZQ expresion PDER .)
    AND             reduce using rule 66 (expresion -> PIZQ expresion PDER .)
    MENOR           reduce using rule 66 (expresion -> PIZQ expresion PDER .)
    MAYOR           reduce using rule 66 (expresion -> PIZQ expresion PDER .)
    MAYORIGUAL      reduce using rule 66 (expresion -> PIZQ expresion PDER .)
    MENORIGUAL      reduce using rule 66 (expresion -> PIZQ expresion PDER .)
    DIFERENTE       reduce using rule 66 (expresion -> PIZQ expresion PDER .)
    IGUALIGUAL      reduce using rule 66 (expresion -> PIZQ expresion PDER .)
    MAS             reduce using rule 66 (expresion -> PIZQ expresion PDER .)
    MENOS           reduce using rule 66 (expresion -> PIZQ expresion PDER .)
    MULTIPLICACION  reduce using rule 66 (expresion -> PIZQ expresion PDER .)
    DIVISION        reduce using rule 66 (expresion -> PIZQ expresion PDER .)
    PTCOMA          reduce using rule 66 (expresion -> PIZQ expresion PDER .)
    PUNTO           reduce using rule 66 (expresion -> PIZQ expresion PDER .)
    PDER            reduce using rule 66 (expresion -> PIZQ expresion PDER .)
    CORDER          reduce using rule 66 (expresion -> PIZQ expresion PDER .)
    COMA            reduce using rule 66 (expresion -> PIZQ expresion PDER .)


state 148

    (88) acceso_objeto -> acceso_objeto PUNTO expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .)
    PTCOMA          reduce using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .)
    PUNTO           reduce using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .)
    PDER            reduce using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .)
    CORDER          reduce using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .)
    COMA            reduce using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .)
    OR              shift and go to state 105
    AND             shift and go to state 106
    MENOR           shift and go to state 107
    MAYOR           shift and go to state 108
    MAYORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    DIFERENTE       shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116

  ! OR              [ reduce using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! AND             [ reduce using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! MENOR           [ reduce using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! MAYOR           [ reduce using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! MENORIGUAL      [ reduce using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! DIFERENTE       [ reduce using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! MAS             [ reduce using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! MENOS           [ reduce using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! DIVISION        [ reduce using rule 88 (acceso_objeto -> acceso_objeto PUNTO expresion .) ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PUNTO           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 149

    (85) instancia_objeto -> NEW ID PIZQ . PDER
    (86) instancia_objeto -> NEW ID PIZQ . lista_expresiones PDER
    (50) lista_expresiones -> . lista_expresiones COMA expresion
    (51) lista_expresiones -> . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    PDER            shift and go to state 159
    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    lista_expresiones              shift and go to state 160
    expresion                      shift and go to state 124
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 150

    (81) array_instancia -> NEW tipo_dato dimensiones .
    (82) dimensiones -> dimensiones . dimension
    (84) dimension -> . CORIZQ expresion CORDER

    OR              reduce using rule 81 (array_instancia -> NEW tipo_dato dimensiones .)
    AND             reduce using rule 81 (array_instancia -> NEW tipo_dato dimensiones .)
    MENOR           reduce using rule 81 (array_instancia -> NEW tipo_dato dimensiones .)
    MAYOR           reduce using rule 81 (array_instancia -> NEW tipo_dato dimensiones .)
    MAYORIGUAL      reduce using rule 81 (array_instancia -> NEW tipo_dato dimensiones .)
    MENORIGUAL      reduce using rule 81 (array_instancia -> NEW tipo_dato dimensiones .)
    DIFERENTE       reduce using rule 81 (array_instancia -> NEW tipo_dato dimensiones .)
    IGUALIGUAL      reduce using rule 81 (array_instancia -> NEW tipo_dato dimensiones .)
    MAS             reduce using rule 81 (array_instancia -> NEW tipo_dato dimensiones .)
    MENOS           reduce using rule 81 (array_instancia -> NEW tipo_dato dimensiones .)
    MULTIPLICACION  reduce using rule 81 (array_instancia -> NEW tipo_dato dimensiones .)
    DIVISION        reduce using rule 81 (array_instancia -> NEW tipo_dato dimensiones .)
    PTCOMA          reduce using rule 81 (array_instancia -> NEW tipo_dato dimensiones .)
    PUNTO           reduce using rule 81 (array_instancia -> NEW tipo_dato dimensiones .)
    PDER            reduce using rule 81 (array_instancia -> NEW tipo_dato dimensiones .)
    CORDER          reduce using rule 81 (array_instancia -> NEW tipo_dato dimensiones .)
    COMA            reduce using rule 81 (array_instancia -> NEW tipo_dato dimensiones .)
    CORIZQ          shift and go to state 104

    dimension                      shift and go to state 133

state 151

    (80) array_data -> CORIZQ lista_expresiones CORDER .

    OR              reduce using rule 80 (array_data -> CORIZQ lista_expresiones CORDER .)
    AND             reduce using rule 80 (array_data -> CORIZQ lista_expresiones CORDER .)
    MENOR           reduce using rule 80 (array_data -> CORIZQ lista_expresiones CORDER .)
    MAYOR           reduce using rule 80 (array_data -> CORIZQ lista_expresiones CORDER .)
    MAYORIGUAL      reduce using rule 80 (array_data -> CORIZQ lista_expresiones CORDER .)
    MENORIGUAL      reduce using rule 80 (array_data -> CORIZQ lista_expresiones CORDER .)
    DIFERENTE       reduce using rule 80 (array_data -> CORIZQ lista_expresiones CORDER .)
    IGUALIGUAL      reduce using rule 80 (array_data -> CORIZQ lista_expresiones CORDER .)
    MAS             reduce using rule 80 (array_data -> CORIZQ lista_expresiones CORDER .)
    MENOS           reduce using rule 80 (array_data -> CORIZQ lista_expresiones CORDER .)
    MULTIPLICACION  reduce using rule 80 (array_data -> CORIZQ lista_expresiones CORDER .)
    DIVISION        reduce using rule 80 (array_data -> CORIZQ lista_expresiones CORDER .)
    PTCOMA          reduce using rule 80 (array_data -> CORIZQ lista_expresiones CORDER .)
    PUNTO           reduce using rule 80 (array_data -> CORIZQ lista_expresiones CORDER .)
    PDER            reduce using rule 80 (array_data -> CORIZQ lista_expresiones CORDER .)
    CORDER          reduce using rule 80 (array_data -> CORIZQ lista_expresiones CORDER .)
    COMA            reduce using rule 80 (array_data -> CORIZQ lista_expresiones CORDER .)


state 152

    (50) lista_expresiones -> lista_expresiones COMA . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 161
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 153

    (38) print_inst -> PRINT PIZQ expresion PDER .

    PTCOMA          reduce using rule 38 (print_inst -> PRINT PIZQ expresion PDER .)


state 154

    (33) declaracion_arreglo -> tipo_dato niveles ID IGUAL . expresion
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 162
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 155

    (37) declaracion_objeto -> ID ID IGUAL expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 37 (declaracion_objeto -> ID ID IGUAL expresion .)
    PTCOMA          reduce using rule 37 (declaracion_objeto -> ID ID IGUAL expresion .)
    OR              shift and go to state 105
    AND             shift and go to state 106
    MENOR           shift and go to state 107
    MAYOR           shift and go to state 108
    MAYORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    DIFERENTE       shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116
    PUNTO           reduce using rule 89 (acceso_objeto -> expresion .)

  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 156

    (40) llamada -> ID PIZQ lista_expresiones PDER .

    PTCOMA          reduce using rule 40 (llamada -> ID PIZQ lista_expresiones PDER .)
    OR              reduce using rule 40 (llamada -> ID PIZQ lista_expresiones PDER .)
    AND             reduce using rule 40 (llamada -> ID PIZQ lista_expresiones PDER .)
    MENOR           reduce using rule 40 (llamada -> ID PIZQ lista_expresiones PDER .)
    MAYOR           reduce using rule 40 (llamada -> ID PIZQ lista_expresiones PDER .)
    MAYORIGUAL      reduce using rule 40 (llamada -> ID PIZQ lista_expresiones PDER .)
    MENORIGUAL      reduce using rule 40 (llamada -> ID PIZQ lista_expresiones PDER .)
    DIFERENTE       reduce using rule 40 (llamada -> ID PIZQ lista_expresiones PDER .)
    IGUALIGUAL      reduce using rule 40 (llamada -> ID PIZQ lista_expresiones PDER .)
    MAS             reduce using rule 40 (llamada -> ID PIZQ lista_expresiones PDER .)
    MENOS           reduce using rule 40 (llamada -> ID PIZQ lista_expresiones PDER .)
    MULTIPLICACION  reduce using rule 40 (llamada -> ID PIZQ lista_expresiones PDER .)
    DIVISION        reduce using rule 40 (llamada -> ID PIZQ lista_expresiones PDER .)
    PUNTO           reduce using rule 40 (llamada -> ID PIZQ lista_expresiones PDER .)
    PDER            reduce using rule 40 (llamada -> ID PIZQ lista_expresiones PDER .)
    CORDER          reduce using rule 40 (llamada -> ID PIZQ lista_expresiones PDER .)
    COMA            reduce using rule 40 (llamada -> ID PIZQ lista_expresiones PDER .)


state 157

    (43) if_instr -> IF_W PIZQ expresion PDER . bloque
    (44) if_instr -> IF_W PIZQ expresion PDER . bloque ELSE_W bloque
    (45) if_instr -> IF_W PIZQ expresion PDER . bloque listaelseif
    (46) if_instr -> IF_W PIZQ expresion PDER . bloque listaelseif ELSE_W bloque
    (16) bloque -> . LLAVEIZQ LLAVEDER
    (17) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 40

    bloque                         shift and go to state 163

state 158

    (84) dimension -> CORIZQ expresion CORDER .

    CORIZQ          reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)
    OR              reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)
    AND             reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)
    MENOR           reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)
    MAYOR           reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)
    MAYORIGUAL      reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)
    MENORIGUAL      reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)
    DIFERENTE       reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)
    IGUALIGUAL      reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)
    MULTIPLICACION  reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)
    DIVISION        reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)
    PUNTO           reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)
    PDER            reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 84 (dimension -> CORIZQ expresion CORDER .)


state 159

    (85) instancia_objeto -> NEW ID PIZQ PDER .

    OR              reduce using rule 85 (instancia_objeto -> NEW ID PIZQ PDER .)
    AND             reduce using rule 85 (instancia_objeto -> NEW ID PIZQ PDER .)
    MENOR           reduce using rule 85 (instancia_objeto -> NEW ID PIZQ PDER .)
    MAYOR           reduce using rule 85 (instancia_objeto -> NEW ID PIZQ PDER .)
    MAYORIGUAL      reduce using rule 85 (instancia_objeto -> NEW ID PIZQ PDER .)
    MENORIGUAL      reduce using rule 85 (instancia_objeto -> NEW ID PIZQ PDER .)
    DIFERENTE       reduce using rule 85 (instancia_objeto -> NEW ID PIZQ PDER .)
    IGUALIGUAL      reduce using rule 85 (instancia_objeto -> NEW ID PIZQ PDER .)
    MAS             reduce using rule 85 (instancia_objeto -> NEW ID PIZQ PDER .)
    MENOS           reduce using rule 85 (instancia_objeto -> NEW ID PIZQ PDER .)
    MULTIPLICACION  reduce using rule 85 (instancia_objeto -> NEW ID PIZQ PDER .)
    DIVISION        reduce using rule 85 (instancia_objeto -> NEW ID PIZQ PDER .)
    PTCOMA          reduce using rule 85 (instancia_objeto -> NEW ID PIZQ PDER .)
    PUNTO           reduce using rule 85 (instancia_objeto -> NEW ID PIZQ PDER .)
    PDER            reduce using rule 85 (instancia_objeto -> NEW ID PIZQ PDER .)
    CORDER          reduce using rule 85 (instancia_objeto -> NEW ID PIZQ PDER .)
    COMA            reduce using rule 85 (instancia_objeto -> NEW ID PIZQ PDER .)


state 160

    (86) instancia_objeto -> NEW ID PIZQ lista_expresiones . PDER
    (50) lista_expresiones -> lista_expresiones . COMA expresion

    PDER            shift and go to state 164
    COMA            shift and go to state 152


state 161

    (50) lista_expresiones -> lista_expresiones COMA expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for CORDER resolved using rule 50 (lista_expresiones -> lista_expresiones COMA expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 50 (lista_expresiones -> lista_expresiones COMA expresion .)
  ! reduce/reduce conflict for PDER resolved using rule 50 (lista_expresiones -> lista_expresiones COMA expresion .)
    CORDER          reduce using rule 50 (lista_expresiones -> lista_expresiones COMA expresion .)
    COMA            reduce using rule 50 (lista_expresiones -> lista_expresiones COMA expresion .)
    PDER            reduce using rule 50 (lista_expresiones -> lista_expresiones COMA expresion .)
    OR              shift and go to state 105
    AND             shift and go to state 106
    MENOR           shift and go to state 107
    MAYOR           shift and go to state 108
    MAYORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    DIFERENTE       shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116
    PUNTO           reduce using rule 89 (acceso_objeto -> expresion .)

  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! CORDER          [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! COMA            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 162

    (33) declaracion_arreglo -> tipo_dato niveles ID IGUAL expresion .
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 33 (declaracion_arreglo -> tipo_dato niveles ID IGUAL expresion .)
    PTCOMA          reduce using rule 33 (declaracion_arreglo -> tipo_dato niveles ID IGUAL expresion .)
    OR              shift and go to state 105
    AND             shift and go to state 106
    MENOR           shift and go to state 107
    MAYOR           shift and go to state 108
    MAYORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    DIFERENTE       shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116
    PUNTO           reduce using rule 89 (acceso_objeto -> expresion .)

  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! PTCOMA          [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 163

    (43) if_instr -> IF_W PIZQ expresion PDER bloque .
    (44) if_instr -> IF_W PIZQ expresion PDER bloque . ELSE_W bloque
    (45) if_instr -> IF_W PIZQ expresion PDER bloque . listaelseif
    (46) if_instr -> IF_W PIZQ expresion PDER bloque . listaelseif ELSE_W bloque
    (47) listaelseif -> . listaelseif else_if
    (48) listaelseif -> . else_if
    (49) else_if -> . ELSE_W IF_W PIZQ expresion PDER bloque

    LLAVEDER        reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    error           reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    PRINT           reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    ID              reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    RETURN_W        reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    IF_W            reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    INT             reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    STRING_TYPE     reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    BOOLEAN         reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    FLOAT           reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    OR              reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    AND             reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    MENOR           reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    MAYOR           reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    MAYORIGUAL      reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    MENORIGUAL      reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    DIFERENTE       reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    IGUALIGUAL      reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    MAS             reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    MENOS           reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    MULTIPLICACION  reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    DIVISION        reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    PTCOMA          reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    PUNTO           reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    PDER            reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    CORDER          reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    COMA            reduce using rule 43 (if_instr -> IF_W PIZQ expresion PDER bloque .)
    ELSE_W          shift and go to state 165

    listaelseif                    shift and go to state 166
    else_if                        shift and go to state 167

state 164

    (86) instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .

    OR              reduce using rule 86 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    AND             reduce using rule 86 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    MENOR           reduce using rule 86 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    MAYOR           reduce using rule 86 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    MAYORIGUAL      reduce using rule 86 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    MENORIGUAL      reduce using rule 86 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    DIFERENTE       reduce using rule 86 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    IGUALIGUAL      reduce using rule 86 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    MAS             reduce using rule 86 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    MENOS           reduce using rule 86 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    MULTIPLICACION  reduce using rule 86 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    DIVISION        reduce using rule 86 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    PTCOMA          reduce using rule 86 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    PUNTO           reduce using rule 86 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    PDER            reduce using rule 86 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    CORDER          reduce using rule 86 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)
    COMA            reduce using rule 86 (instancia_objeto -> NEW ID PIZQ lista_expresiones PDER .)


state 165

    (44) if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W . bloque
    (49) else_if -> ELSE_W . IF_W PIZQ expresion PDER bloque
    (16) bloque -> . LLAVEIZQ LLAVEDER
    (17) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    IF_W            shift and go to state 168
    LLAVEIZQ        shift and go to state 40

    bloque                         shift and go to state 169

state 166

    (45) if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .
    (46) if_instr -> IF_W PIZQ expresion PDER bloque listaelseif . ELSE_W bloque
    (47) listaelseif -> listaelseif . else_if
    (49) else_if -> . ELSE_W IF_W PIZQ expresion PDER bloque

    LLAVEDER        reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    error           reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    PRINT           reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    ID              reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    RETURN_W        reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    IF_W            reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    INT             reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    STRING_TYPE     reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    BOOLEAN         reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    FLOAT           reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    OR              reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    AND             reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    MENOR           reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    MAYOR           reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    MAYORIGUAL      reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    MENORIGUAL      reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    DIFERENTE       reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    IGUALIGUAL      reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    MAS             reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    MENOS           reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    MULTIPLICACION  reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    DIVISION        reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    PTCOMA          reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    PUNTO           reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    PDER            reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    CORDER          reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    COMA            reduce using rule 45 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif .)
    ELSE_W          shift and go to state 170

    else_if                        shift and go to state 171

state 167

    (48) listaelseif -> else_if .

    ELSE_W          reduce using rule 48 (listaelseif -> else_if .)
    LLAVEDER        reduce using rule 48 (listaelseif -> else_if .)
    error           reduce using rule 48 (listaelseif -> else_if .)
    PRINT           reduce using rule 48 (listaelseif -> else_if .)
    ID              reduce using rule 48 (listaelseif -> else_if .)
    RETURN_W        reduce using rule 48 (listaelseif -> else_if .)
    IF_W            reduce using rule 48 (listaelseif -> else_if .)
    INT             reduce using rule 48 (listaelseif -> else_if .)
    STRING_TYPE     reduce using rule 48 (listaelseif -> else_if .)
    BOOLEAN         reduce using rule 48 (listaelseif -> else_if .)
    FLOAT           reduce using rule 48 (listaelseif -> else_if .)
    OR              reduce using rule 48 (listaelseif -> else_if .)
    AND             reduce using rule 48 (listaelseif -> else_if .)
    MENOR           reduce using rule 48 (listaelseif -> else_if .)
    MAYOR           reduce using rule 48 (listaelseif -> else_if .)
    MAYORIGUAL      reduce using rule 48 (listaelseif -> else_if .)
    MENORIGUAL      reduce using rule 48 (listaelseif -> else_if .)
    DIFERENTE       reduce using rule 48 (listaelseif -> else_if .)
    IGUALIGUAL      reduce using rule 48 (listaelseif -> else_if .)
    MAS             reduce using rule 48 (listaelseif -> else_if .)
    MENOS           reduce using rule 48 (listaelseif -> else_if .)
    MULTIPLICACION  reduce using rule 48 (listaelseif -> else_if .)
    DIVISION        reduce using rule 48 (listaelseif -> else_if .)
    PTCOMA          reduce using rule 48 (listaelseif -> else_if .)
    PUNTO           reduce using rule 48 (listaelseif -> else_if .)
    PDER            reduce using rule 48 (listaelseif -> else_if .)
    CORDER          reduce using rule 48 (listaelseif -> else_if .)
    COMA            reduce using rule 48 (listaelseif -> else_if .)


state 168

    (49) else_if -> ELSE_W IF_W . PIZQ expresion PDER bloque

    PIZQ            shift and go to state 172


state 169

    (44) if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .

    LLAVEDER        reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    error           reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    PRINT           reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    ID              reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    RETURN_W        reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    IF_W            reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    INT             reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    STRING_TYPE     reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    BOOLEAN         reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    FLOAT           reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    OR              reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    AND             reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    MENOR           reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    MAYOR           reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    MAYORIGUAL      reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    MENORIGUAL      reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    DIFERENTE       reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    IGUALIGUAL      reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    MAS             reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    MENOS           reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    MULTIPLICACION  reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    DIVISION        reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    PTCOMA          reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    PUNTO           reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    PDER            reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    CORDER          reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)
    COMA            reduce using rule 44 (if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque .)


state 170

    (46) if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W . bloque
    (49) else_if -> ELSE_W . IF_W PIZQ expresion PDER bloque
    (16) bloque -> . LLAVEIZQ LLAVEDER
    (17) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    IF_W            shift and go to state 168
    LLAVEIZQ        shift and go to state 40

    bloque                         shift and go to state 173

state 171

    (47) listaelseif -> listaelseif else_if .

    ELSE_W          reduce using rule 47 (listaelseif -> listaelseif else_if .)
    LLAVEDER        reduce using rule 47 (listaelseif -> listaelseif else_if .)
    error           reduce using rule 47 (listaelseif -> listaelseif else_if .)
    PRINT           reduce using rule 47 (listaelseif -> listaelseif else_if .)
    ID              reduce using rule 47 (listaelseif -> listaelseif else_if .)
    RETURN_W        reduce using rule 47 (listaelseif -> listaelseif else_if .)
    IF_W            reduce using rule 47 (listaelseif -> listaelseif else_if .)
    INT             reduce using rule 47 (listaelseif -> listaelseif else_if .)
    STRING_TYPE     reduce using rule 47 (listaelseif -> listaelseif else_if .)
    BOOLEAN         reduce using rule 47 (listaelseif -> listaelseif else_if .)
    FLOAT           reduce using rule 47 (listaelseif -> listaelseif else_if .)
    OR              reduce using rule 47 (listaelseif -> listaelseif else_if .)
    AND             reduce using rule 47 (listaelseif -> listaelseif else_if .)
    MENOR           reduce using rule 47 (listaelseif -> listaelseif else_if .)
    MAYOR           reduce using rule 47 (listaelseif -> listaelseif else_if .)
    MAYORIGUAL      reduce using rule 47 (listaelseif -> listaelseif else_if .)
    MENORIGUAL      reduce using rule 47 (listaelseif -> listaelseif else_if .)
    DIFERENTE       reduce using rule 47 (listaelseif -> listaelseif else_if .)
    IGUALIGUAL      reduce using rule 47 (listaelseif -> listaelseif else_if .)
    MAS             reduce using rule 47 (listaelseif -> listaelseif else_if .)
    MENOS           reduce using rule 47 (listaelseif -> listaelseif else_if .)
    MULTIPLICACION  reduce using rule 47 (listaelseif -> listaelseif else_if .)
    DIVISION        reduce using rule 47 (listaelseif -> listaelseif else_if .)
    PTCOMA          reduce using rule 47 (listaelseif -> listaelseif else_if .)
    PUNTO           reduce using rule 47 (listaelseif -> listaelseif else_if .)
    PDER            reduce using rule 47 (listaelseif -> listaelseif else_if .)
    CORDER          reduce using rule 47 (listaelseif -> listaelseif else_if .)
    COMA            reduce using rule 47 (listaelseif -> listaelseif else_if .)


state 172

    (49) else_if -> ELSE_W IF_W PIZQ . expresion PDER bloque
    (52) expresion -> . expresion OR expresion
    (53) expresion -> . expresion AND expresion
    (54) expresion -> . NOT expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYOR expresion
    (57) expresion -> . expresion MAYORIGUAL expresion
    (58) expresion -> . expresion MENORIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion IGUALIGUAL expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . PIZQ expresion PDER
    (67) expresion -> . ENTERO
    (68) expresion -> . DECIMAL
    (69) expresion -> . ID
    (70) expresion -> . CADENA
    (71) expresion -> . TRUE
    (72) expresion -> . FALSE
    (73) expresion -> . llamada
    (74) expresion -> . acceso_objeto_expresion
    (75) expresion -> . acceso_array_expresion
    (76) expresion -> . instancia_objeto
    (77) expresion -> . array_data
    (78) expresion -> . array_instancia
    (79) expresion -> . if_instr
    (39) llamada -> . ID PIZQ PDER
    (40) llamada -> . ID PIZQ lista_expresiones PDER
    (87) acceso_objeto_expresion -> . acceso_objeto
    (90) acceso_array_expresion -> . ID dimensiones
    (85) instancia_objeto -> . NEW ID PIZQ PDER
    (86) instancia_objeto -> . NEW ID PIZQ lista_expresiones PDER
    (80) array_data -> . CORIZQ lista_expresiones CORDER
    (81) array_instancia -> . NEW tipo_dato dimensiones
    (43) if_instr -> . IF_W PIZQ expresion PDER bloque
    (44) if_instr -> . IF_W PIZQ expresion PDER bloque ELSE_W bloque
    (45) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif
    (46) if_instr -> . IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque
    (88) acceso_objeto -> . acceso_objeto PUNTO expresion
    (89) acceso_objeto -> . expresion

    NOT             shift and go to state 67
    MENOS           shift and go to state 68
    PIZQ            shift and go to state 69
    ENTERO          shift and go to state 70
    DECIMAL         shift and go to state 71
    ID              shift and go to state 65
    CADENA          shift and go to state 72
    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    NEW             shift and go to state 83
    CORIZQ          shift and go to state 84
    IF_W            shift and go to state 61

    expresion                      shift and go to state 174
    llamada                        shift and go to state 75
    acceso_objeto_expresion        shift and go to state 76
    acceso_array_expresion         shift and go to state 77
    instancia_objeto               shift and go to state 78
    array_data                     shift and go to state 79
    array_instancia                shift and go to state 80
    if_instr                       shift and go to state 81
    acceso_objeto                  shift and go to state 82

state 173

    (46) if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .

    LLAVEDER        reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    error           reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    PRINT           reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    ID              reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    RETURN_W        reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    IF_W            reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    INT             reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    STRING_TYPE     reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    BOOLEAN         reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    FLOAT           reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    OR              reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    AND             reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    MENOR           reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    MAYOR           reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    MAYORIGUAL      reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    MENORIGUAL      reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    DIFERENTE       reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    IGUALIGUAL      reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    MAS             reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    MENOS           reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    MULTIPLICACION  reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    DIVISION        reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    PTCOMA          reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    PUNTO           reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    PDER            reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    CORDER          reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)
    COMA            reduce using rule 46 (if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque .)


state 174

    (49) else_if -> ELSE_W IF_W PIZQ expresion . PDER bloque
    (52) expresion -> expresion . OR expresion
    (53) expresion -> expresion . AND expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYOR expresion
    (57) expresion -> expresion . MAYORIGUAL expresion
    (58) expresion -> expresion . MENORIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . IGUALIGUAL expresion
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (89) acceso_objeto -> expresion .

  ! shift/reduce conflict for PDER resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    PDER            shift and go to state 175
    OR              shift and go to state 105
    AND             shift and go to state 106
    MENOR           shift and go to state 107
    MAYOR           shift and go to state 108
    MAYORIGUAL      shift and go to state 109
    MENORIGUAL      shift and go to state 110
    DIFERENTE       shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116
    PUNTO           reduce using rule 89 (acceso_objeto -> expresion .)

  ! PDER            [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! OR              [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! AND             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYOR           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MAS             [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MENOS           [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 89 (acceso_objeto -> expresion .) ]
  ! DIVISION        [ reduce using rule 89 (acceso_objeto -> expresion .) ]


state 175

    (49) else_if -> ELSE_W IF_W PIZQ expresion PDER . bloque
    (16) bloque -> . LLAVEIZQ LLAVEDER
    (17) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 40

    bloque                         shift and go to state 176

state 176

    (49) else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .

    ELSE_W          reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    LLAVEDER        reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    error           reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    PRINT           reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    ID              reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    RETURN_W        reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    IF_W            reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    INT             reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    STRING_TYPE     reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    BOOLEAN         reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    FLOAT           reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    OR              reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    AND             reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    MENOR           reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    MAYOR           reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    MAYORIGUAL      reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    MENORIGUAL      reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    DIFERENTE       reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    IGUALIGUAL      reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    MAS             reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    MENOS           reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    MULTIPLICACION  reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    DIVISION        reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    PTCOMA          reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    PUNTO           reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    PDER            reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    CORDER          reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)
    COMA            reduce using rule 49 (else_if -> ELSE_W IF_W PIZQ expresion PDER bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OR in state 66 resolved as shift
WARNING: shift/reduce conflict for AND in state 66 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 66 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 66 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 66 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for MAS in state 66 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 66 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 66 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 66 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 82 resolved as shift
WARNING: shift/reduce conflict for OR in state 100 resolved as shift
WARNING: shift/reduce conflict for AND in state 100 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 100 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 100 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 100 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 100 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 100 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 100 resolved as shift
WARNING: shift/reduce conflict for MAS in state 100 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 100 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 100 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 100 resolved as shift
WARNING: shift/reduce conflict for PDER in state 119 resolved as shift
WARNING: shift/reduce conflict for OR in state 119 resolved as shift
WARNING: shift/reduce conflict for AND in state 119 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 119 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 119 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 119 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for MAS in state 119 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 119 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 119 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 119 resolved as shift
WARNING: shift/reduce conflict for OR in state 124 resolved as shift
WARNING: shift/reduce conflict for AND in state 124 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 124 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 124 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 124 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for MAS in state 124 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 124 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 124 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 124 resolved as shift
WARNING: shift/reduce conflict for PDER in state 125 resolved as shift
WARNING: shift/reduce conflict for OR in state 125 resolved as shift
WARNING: shift/reduce conflict for AND in state 125 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 125 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 125 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 125 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for MAS in state 125 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 125 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 125 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 125 resolved as shift
WARNING: shift/reduce conflict for PDER in state 132 resolved as shift
WARNING: shift/reduce conflict for OR in state 132 resolved as shift
WARNING: shift/reduce conflict for AND in state 132 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 132 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 132 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 132 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for MAS in state 132 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 132 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 132 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 132 resolved as shift
WARNING: shift/reduce conflict for CORDER in state 134 resolved as shift
WARNING: shift/reduce conflict for OR in state 134 resolved as shift
WARNING: shift/reduce conflict for AND in state 134 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 134 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 134 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 134 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for MAS in state 134 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 134 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 134 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 134 resolved as shift
WARNING: shift/reduce conflict for AND in state 135 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 135 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 135 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 135 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for MAS in state 135 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 135 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 135 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 135 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 136 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 136 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 136 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for MAS in state 136 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 136 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 136 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 136 resolved as shift
WARNING: shift/reduce conflict for MAS in state 137 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 137 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 137 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 137 resolved as shift
WARNING: shift/reduce conflict for MAS in state 138 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 138 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 138 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 138 resolved as shift
WARNING: shift/reduce conflict for MAS in state 139 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 139 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 139 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 139 resolved as shift
WARNING: shift/reduce conflict for MAS in state 140 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 140 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 140 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 140 resolved as shift
WARNING: shift/reduce conflict for MAS in state 141 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 141 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 141 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 141 resolved as shift
WARNING: shift/reduce conflict for MAS in state 142 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 142 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 142 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 142 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 143 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 143 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 144 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 144 resolved as shift
WARNING: shift/reduce conflict for OR in state 148 resolved as shift
WARNING: shift/reduce conflict for AND in state 148 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 148 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 148 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 148 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for MAS in state 148 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 148 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 148 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 148 resolved as shift
WARNING: shift/reduce conflict for OR in state 148 resolved as shift
WARNING: shift/reduce conflict for AND in state 148 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 148 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 148 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 148 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for MAS in state 148 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 148 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 148 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 148 resolved as shift
WARNING: shift/reduce conflict for OR in state 155 resolved as shift
WARNING: shift/reduce conflict for AND in state 155 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 155 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 155 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 155 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for MAS in state 155 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 155 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 155 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 155 resolved as shift
WARNING: shift/reduce conflict for OR in state 161 resolved as shift
WARNING: shift/reduce conflict for AND in state 161 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 161 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 161 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 161 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 161 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 161 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 161 resolved as shift
WARNING: shift/reduce conflict for MAS in state 161 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 161 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 161 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 161 resolved as shift
WARNING: shift/reduce conflict for OR in state 162 resolved as shift
WARNING: shift/reduce conflict for AND in state 162 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 162 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 162 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 162 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 162 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 162 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 162 resolved as shift
WARNING: shift/reduce conflict for MAS in state 162 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 162 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 162 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 162 resolved as shift
WARNING: shift/reduce conflict for PDER in state 174 resolved as shift
WARNING: shift/reduce conflict for OR in state 174 resolved as shift
WARNING: shift/reduce conflict for AND in state 174 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 174 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 174 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 174 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 174 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 174 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 174 resolved as shift
WARNING: shift/reduce conflict for MAS in state 174 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 174 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 174 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 174 resolved as shift
WARNING: reduce/reduce conflict in state 66 resolved using rule (declaracion -> tipo_dato ID IGUAL expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 66
WARNING: reduce/reduce conflict in state 100 resolved using rule (return_inst -> RETURN_W expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 100
WARNING: reduce/reduce conflict in state 117 resolved using rule (expresion -> NOT expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 117
WARNING: reduce/reduce conflict in state 118 resolved using rule (expresion -> MENOS expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 118
WARNING: reduce/reduce conflict in state 124 resolved using rule (lista_expresiones -> expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 124
WARNING: reduce/reduce conflict in state 135 resolved using rule (expresion -> expresion OR expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 135
WARNING: reduce/reduce conflict in state 136 resolved using rule (expresion -> expresion AND expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 136
WARNING: reduce/reduce conflict in state 137 resolved using rule (expresion -> expresion MENOR expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 137
WARNING: reduce/reduce conflict in state 138 resolved using rule (expresion -> expresion MAYOR expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 138
WARNING: reduce/reduce conflict in state 139 resolved using rule (expresion -> expresion MAYORIGUAL expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 139
WARNING: reduce/reduce conflict in state 140 resolved using rule (expresion -> expresion MENORIGUAL expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 140
WARNING: reduce/reduce conflict in state 141 resolved using rule (expresion -> expresion DIFERENTE expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 141
WARNING: reduce/reduce conflict in state 142 resolved using rule (expresion -> expresion IGUALIGUAL expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 142
WARNING: reduce/reduce conflict in state 143 resolved using rule (expresion -> expresion MAS expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 143
WARNING: reduce/reduce conflict in state 144 resolved using rule (expresion -> expresion MENOS expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 144
WARNING: reduce/reduce conflict in state 145 resolved using rule (expresion -> expresion MULTIPLICACION expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 145
WARNING: reduce/reduce conflict in state 146 resolved using rule (expresion -> expresion DIVISION expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 146
WARNING: reduce/reduce conflict in state 148 resolved using rule (acceso_objeto -> acceso_objeto PUNTO expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 148
WARNING: reduce/reduce conflict in state 155 resolved using rule (declaracion_objeto -> ID ID IGUAL expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 155
WARNING: reduce/reduce conflict in state 161 resolved using rule (lista_expresiones -> lista_expresiones COMA expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 161
WARNING: reduce/reduce conflict in state 162 resolved using rule (declaracion_arreglo -> tipo_dato niveles ID IGUAL expresion)
WARNING: rejected rule (acceso_objeto -> expresion) in state 162
