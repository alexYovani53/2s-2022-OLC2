
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocMAYORMENORIGUALMENORMAYORIGUALIGUALIGUALDIFERENTEleftMASMENOSleftMULTIPLICACIONDIVISIONrightNOTUMENOSAND BOOLEAN CADENA CLASS COMA CORDER CORIZQ DECIMAL DIFERENTE DIVISION DOBLEPT ELSE_W ENTERO FALSE FLOAT ID IF_W IGUAL IGUALIGUAL INT MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MULTIPLICACION NEW NOT OR PDER PIZQ PRINT PTCOMA PUNTO RETURN_W STRING_TYPE TRUE VOIDinit : clases_funciones  clases_funciones : clases_funciones clase_funcion  clases_funciones : clase_funcion  clase_funcion : clase\n                      | funcion  clase : CLASS ID bloqueClase bloqueClase : CORIZQ instrs_clase CORDER\n                    | CORIZQ  CORDER instrs_clase : instrs_clase instruccion  instrs_clase :  instruccion  funcion : tipo_funcion ID PIZQ  PDER bloque\n               | tipo_funcion ID PIZQ lista_parametros PDER bloque lista_parametros : lista_parametros COMA parametro lista_parametros : parametro parametro : tipo_dato ID bloque  : CORIZQ  CORDER\n                | CORIZQ  instrucciones CORDER instrucciones : instrucciones instruccion instrucciones : instruccioninstruccion : print_inst PTCOMA\n                   | declaracion PTCOMA\n                   | declaracion_objeto PTCOMA\n                   | llamada PTCOMA\n                   | return_inst PTCOMA\n                   | if_instr  declaracion : tipo_dato ID IGUAL expresion\n                    | tipo_dato ID  declaracion_objeto : ID ID IGUAL expresion print_inst : PRINT PIZQ expresion PDER llamada : ID PIZQ PDER\n                | ID PIZQ lista_expresiones PDER return_inst : RETURN_W\n                    | RETURN_W expresion if_instr :  IF_W PIZQ expresion PDER bloque\n                 |  IF_W PIZQ expresion PDER bloque ELSE_W bloque\n                 |  IF_W PIZQ expresion PDER bloque  listaelseif\n                 |  IF_W PIZQ expresion PDER bloque  listaelseif ELSE_W bloque listaelseif : listaelseif else_if   listaelseif : else_if else_if : ELSE_W IF_W PIZQ expresion PDER bloque lista_expresiones : lista_expresiones COMA  expresion lista_expresiones : expresionexpresion : expresion OR expresion\n                 | expresion AND expresion\n                 | NOT expresion %prec NOTexpresion : expresion MENOR expresion\n                 | expresion MAYOR expresion\n                 | expresion MAYORIGUAL expresion\n                 | expresion MENORIGUAL expresion\n                 | expresion DIFERENTE expresion\n                 | expresion IGUALIGUAL expresionexpresion : MENOS expresion %prec UMENOS\n                 | expresion MAS expresion\n                 | expresion MENOS expresion\n                 | expresion MULTIPLICACION expresion\n                 | expresion DIVISION expresion\n                 | PIZQ expresion PDERexpresion : ENTERO\n                    | DECIMAL\n                    | ID\n                    | CADENA\n                    | TRUE\n                    | FALSE expresion : llamada\n                  | acceso_objeto_expresion\n                  | instancia_objeto\n                  | if_instr acceso_objeto_expresion : acceso_objeto acceso_objeto : acceso_objeto  PUNTO expresion acceso_objeto : expresion instancia_objeto : NEW ID PIZQ PDER\n                         | NEW ID PIZQ lista_expresiones PDER tipo_funcion : INT\n                     | STRING_TYPE\n                     | BOOLEAN\n                     | VOID\n                     | FLOAT tipo_dato : INT\n                     | STRING_TYPE\n                     | BOOLEAN\n                     | FLOAT'
    
_lr_action_items = {'CLASS':([0,2,3,4,5,13,16,20,41,69,98,101,124,],[6,6,-3,-4,-5,-2,-6,-8,-7,-11,-16,-12,-17,]),'INT':([0,2,3,4,5,13,16,17,18,19,20,21,27,41,42,43,44,45,46,47,69,70,72,98,99,100,101,124,125,129,132,133,135,137,139,142,],[8,8,-3,-4,-5,-2,-6,33,33,33,-8,-10,-25,-7,-9,-20,-21,-22,-23,-24,-11,33,33,-16,33,-19,-12,-17,-18,-34,-36,-39,-35,-38,-37,-40,]),'STRING_TYPE':([0,2,3,4,5,13,16,17,18,19,20,21,27,41,42,43,44,45,46,47,69,70,72,98,99,100,101,124,125,129,132,133,135,137,139,142,],[9,9,-3,-4,-5,-2,-6,34,34,34,-8,-10,-25,-7,-9,-20,-21,-22,-23,-24,-11,34,34,-16,34,-19,-12,-17,-18,-34,-36,-39,-35,-38,-37,-40,]),'BOOLEAN':([0,2,3,4,5,13,16,17,18,19,20,21,27,41,42,43,44,45,46,47,69,70,72,98,99,100,101,124,125,129,132,133,135,137,139,142,],[10,10,-3,-4,-5,-2,-6,35,35,35,-8,-10,-25,-7,-9,-20,-21,-22,-23,-24,-11,35,35,-16,35,-19,-12,-17,-18,-34,-36,-39,-35,-38,-37,-40,]),'VOID':([0,2,3,4,5,13,16,20,41,69,98,101,124,],[11,11,-3,-4,-5,-2,-6,-8,-7,-11,-16,-12,-17,]),'FLOAT':([0,2,3,4,5,13,16,17,18,19,20,21,27,41,42,43,44,45,46,47,69,70,72,98,99,100,101,124,125,129,132,133,135,137,139,142,],[12,12,-3,-4,-5,-2,-6,36,36,36,-8,-10,-25,-7,-9,-20,-21,-22,-23,-24,-11,36,36,-16,36,-19,-12,-17,-18,-34,-36,-39,-35,-38,-37,-40,]),'$end':([1,2,3,4,5,13,16,20,41,69,98,101,124,],[0,-1,-3,-4,-5,-2,-6,-8,-7,-11,-16,-12,-17,]),'ID':([6,7,8,9,10,11,12,17,19,21,27,29,30,31,33,34,35,36,40,42,43,44,45,46,47,48,51,53,54,55,67,68,70,75,76,80,81,82,83,84,85,86,87,88,89,90,91,95,98,99,100,107,122,124,125,129,132,133,135,137,138,139,142,],[14,15,-73,-74,-75,-76,-77,30,30,-10,-25,49,50,58,-78,-79,-80,-81,73,-9,-20,-21,-22,-23,-24,58,58,58,58,58,96,58,30,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-16,30,-19,58,58,-17,-18,-34,-36,-39,-35,-38,58,-37,-40,]),'CORIZQ':([14,37,71,123,131,136,141,],[17,70,70,70,70,70,70,]),'PIZQ':([15,28,30,31,32,48,51,53,54,55,58,68,75,76,80,81,82,83,84,85,86,87,88,89,90,91,95,96,107,122,134,138,],[18,48,51,55,68,55,55,55,55,55,51,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,122,55,55,138,55,]),'CORDER':([17,19,21,27,42,43,44,45,46,47,70,98,99,100,124,125,129,132,133,135,137,139,142,],[20,41,-10,-25,-9,-20,-21,-22,-23,-24,98,-16,124,-19,-17,-18,-34,-36,-39,-35,-38,-37,-40,]),'PRINT':([17,19,21,27,42,43,44,45,46,47,70,98,99,100,124,125,129,132,133,135,137,139,142,],[28,28,-10,-25,-9,-20,-21,-22,-23,-24,28,-16,28,-19,-17,-18,-34,-36,-39,-35,-38,-37,-40,]),'RETURN_W':([17,19,21,27,42,43,44,45,46,47,70,98,99,100,124,125,129,132,133,135,137,139,142,],[31,31,-10,-25,-9,-20,-21,-22,-23,-24,31,-16,31,-19,-17,-18,-34,-36,-39,-35,-38,-37,-40,]),'IF_W':([17,19,21,27,31,42,43,44,45,46,47,48,51,53,54,55,68,70,75,76,80,81,82,83,84,85,86,87,88,89,90,91,95,98,99,100,107,122,124,125,129,131,132,133,135,136,137,138,139,142,],[32,32,-10,-25,32,-9,-20,-21,-22,-23,-24,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-16,32,-19,32,32,-17,-18,-34,134,-36,-39,-35,134,-38,32,-37,-40,]),'PDER':([18,38,39,51,56,57,58,59,60,61,62,63,64,65,66,73,74,77,78,79,92,93,94,97,98,102,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,126,127,128,129,130,132,133,135,137,139,140,142,],[37,71,-14,77,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-15,103,-30,106,-42,-45,-52,120,123,-16,-13,-31,-43,-44,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-69,127,-17,-41,-71,130,-34,-72,-36,-39,-35,-38,-37,141,-40,]),'PTCOMA':([22,23,24,25,26,31,49,52,56,57,58,59,60,61,62,63,64,65,66,77,92,93,98,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,129,130,132,133,135,137,139,142,],[43,44,45,46,47,-32,-27,-33,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-30,-45,-52,-16,-29,-26,-28,-31,-43,-44,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-69,-17,-71,-34,-72,-36,-39,-35,-38,-37,-40,]),'NOT':([31,48,51,53,54,55,68,75,76,80,81,82,83,84,85,86,87,88,89,90,91,95,107,122,138,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'MENOS':([31,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,126,127,129,130,132,133,135,137,138,139,140,142,],[54,54,54,89,54,54,54,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,54,89,54,54,-30,89,54,54,54,54,54,54,54,54,54,54,54,54,-45,-52,89,54,89,-16,89,89,-31,54,89,89,89,89,89,89,89,89,-53,-54,-55,-56,-57,89,54,-17,89,-71,-34,-72,-36,-39,-35,-38,54,-37,89,-40,]),'ENTERO':([31,48,51,53,54,55,68,75,76,80,81,82,83,84,85,86,87,88,89,90,91,95,107,122,138,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'DECIMAL':([31,48,51,53,54,55,68,75,76,80,81,82,83,84,85,86,87,88,89,90,91,95,107,122,138,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'CADENA':([31,48,51,53,54,55,68,75,76,80,81,82,83,84,85,86,87,88,89,90,91,95,107,122,138,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'TRUE':([31,48,51,53,54,55,68,75,76,80,81,82,83,84,85,86,87,88,89,90,91,95,107,122,138,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'FALSE':([31,48,51,53,54,55,68,75,76,80,81,82,83,84,85,86,87,88,89,90,91,95,107,122,138,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'NEW':([31,48,51,53,54,55,68,75,76,80,81,82,83,84,85,86,87,88,89,90,91,95,107,122,138,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'COMA':([38,39,56,57,58,59,60,61,62,63,64,65,66,73,77,78,79,92,93,98,102,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,126,127,128,129,130,132,133,135,137,139,142,],[72,-14,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-15,-30,107,-42,-45,-52,-16,-13,-31,-43,-44,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-69,-17,-41,-71,107,-34,-72,-36,-39,-35,-38,-37,-40,]),'IGUAL':([49,50,],[75,76,]),'OR':([52,56,57,58,59,60,61,62,63,64,65,66,74,77,79,92,93,94,97,98,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,126,127,129,130,132,133,135,137,139,140,142,],[80,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,80,-30,80,-45,-52,80,80,-16,80,80,-31,-43,-44,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,80,-17,80,-71,-34,-72,-36,-39,-35,-38,-37,80,-40,]),'AND':([52,56,57,58,59,60,61,62,63,64,65,66,74,77,79,92,93,94,97,98,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,126,127,129,130,132,133,135,137,139,140,142,],[81,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,81,-30,81,-45,-52,81,81,-16,81,81,-31,81,-44,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,81,-17,81,-71,-34,-72,-36,-39,-35,-38,-37,81,-40,]),'MENOR':([52,56,57,58,59,60,61,62,63,64,65,66,74,77,79,92,93,94,97,98,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,126,127,129,130,132,133,135,137,139,140,142,],[82,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,82,-30,82,-45,-52,82,82,-16,82,82,-31,82,82,-70,-70,-70,-70,-70,-70,-53,-54,-55,-56,-57,82,-17,82,-71,-34,-72,-36,-39,-35,-38,-37,82,-40,]),'MAYOR':([52,56,57,58,59,60,61,62,63,64,65,66,74,77,79,92,93,94,97,98,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,126,127,129,130,132,133,135,137,139,140,142,],[83,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,83,-30,83,-45,-52,83,83,-16,83,83,-31,83,83,-70,-70,-70,-70,-70,-70,-53,-54,-55,-56,-57,83,-17,83,-71,-34,-72,-36,-39,-35,-38,-37,83,-40,]),'MAYORIGUAL':([52,56,57,58,59,60,61,62,63,64,65,66,74,77,79,92,93,94,97,98,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,126,127,129,130,132,133,135,137,139,140,142,],[84,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,84,-30,84,-45,-52,84,84,-16,84,84,-31,84,84,-70,-70,-70,-70,-70,-70,-53,-54,-55,-56,-57,84,-17,84,-71,-34,-72,-36,-39,-35,-38,-37,84,-40,]),'MENORIGUAL':([52,56,57,58,59,60,61,62,63,64,65,66,74,77,79,92,93,94,97,98,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,126,127,129,130,132,133,135,137,139,140,142,],[85,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,85,-30,85,-45,-52,85,85,-16,85,85,-31,85,85,-70,-70,-70,-70,-70,-70,-53,-54,-55,-56,-57,85,-17,85,-71,-34,-72,-36,-39,-35,-38,-37,85,-40,]),'DIFERENTE':([52,56,57,58,59,60,61,62,63,64,65,66,74,77,79,92,93,94,97,98,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,126,127,129,130,132,133,135,137,139,140,142,],[86,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,86,-30,86,-45,-52,86,86,-16,86,86,-31,86,86,-70,-70,-70,-70,-70,-70,-53,-54,-55,-56,-57,86,-17,86,-71,-34,-72,-36,-39,-35,-38,-37,86,-40,]),'IGUALIGUAL':([52,56,57,58,59,60,61,62,63,64,65,66,74,77,79,92,93,94,97,98,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,126,127,129,130,132,133,135,137,139,140,142,],[87,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,87,-30,87,-45,-52,87,87,-16,87,87,-31,87,87,-70,-70,-70,-70,-70,-70,-53,-54,-55,-56,-57,87,-17,87,-71,-34,-72,-36,-39,-35,-38,-37,87,-40,]),'MAS':([52,56,57,58,59,60,61,62,63,64,65,66,74,77,79,92,93,94,97,98,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,126,127,129,130,132,133,135,137,139,140,142,],[88,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,88,-30,88,-45,-52,88,88,-16,88,88,-31,88,88,88,88,88,88,88,88,-53,-54,-55,-56,-57,88,-17,88,-71,-34,-72,-36,-39,-35,-38,-37,88,-40,]),'MULTIPLICACION':([52,56,57,58,59,60,61,62,63,64,65,66,74,77,79,92,93,94,97,98,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,126,127,129,130,132,133,135,137,139,140,142,],[90,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,90,-30,90,-45,-52,90,90,-16,90,90,-31,90,90,90,90,90,90,90,90,90,90,-55,-56,-57,90,-17,90,-71,-34,-72,-36,-39,-35,-38,-37,90,-40,]),'DIVISION':([52,56,57,58,59,60,61,62,63,64,65,66,74,77,79,92,93,94,97,98,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,126,127,129,130,132,133,135,137,139,140,142,],[91,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,91,-30,91,-45,-52,91,91,-16,91,91,-31,91,91,91,91,91,91,91,91,91,91,-55,-56,-57,91,-17,91,-71,-34,-72,-36,-39,-35,-38,-37,91,-40,]),'PUNTO':([52,56,57,58,59,60,61,62,63,64,65,66,74,77,79,92,93,94,97,98,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,126,127,129,130,132,133,135,137,139,140,142,],[-70,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,95,-70,-30,-70,-45,-52,-70,-70,-16,-70,-70,-31,-43,-44,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-69,-17,-70,-71,-34,-72,-36,-39,-35,-38,-37,-70,-40,]),'ELSE_W':([98,124,129,132,133,137,142,],[-16,-17,131,136,-39,-38,-40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'clases_funciones':([0,],[2,]),'clase_funcion':([0,2,],[3,13,]),'clase':([0,2,],[4,4,]),'funcion':([0,2,],[5,5,]),'tipo_funcion':([0,2,],[7,7,]),'bloqueClase':([14,],[16,]),'instrs_clase':([17,],[19,]),'instruccion':([17,19,70,99,],[21,42,100,125,]),'print_inst':([17,19,70,99,],[22,22,22,22,]),'declaracion':([17,19,70,99,],[23,23,23,23,]),'declaracion_objeto':([17,19,70,99,],[24,24,24,24,]),'llamada':([17,19,31,48,51,53,54,55,68,70,75,76,80,81,82,83,84,85,86,87,88,89,90,91,95,99,107,122,138,],[25,25,62,62,62,62,62,62,62,25,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,25,62,62,62,]),'return_inst':([17,19,70,99,],[26,26,26,26,]),'if_instr':([17,19,31,48,51,53,54,55,68,70,75,76,80,81,82,83,84,85,86,87,88,89,90,91,95,99,107,122,138,],[27,27,65,65,65,65,65,65,65,27,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,27,65,65,65,]),'tipo_dato':([17,18,19,70,72,99,],[29,40,29,29,40,29,]),'lista_parametros':([18,],[38,]),'parametro':([18,72,],[39,102,]),'expresion':([31,48,51,53,54,55,68,75,76,80,81,82,83,84,85,86,87,88,89,90,91,95,107,122,138,],[52,74,79,92,93,94,97,104,105,108,109,110,111,112,113,114,115,116,117,118,119,121,126,79,140,]),'acceso_objeto_expresion':([31,48,51,53,54,55,68,75,76,80,81,82,83,84,85,86,87,88,89,90,91,95,107,122,138,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'instancia_objeto':([31,48,51,53,54,55,68,75,76,80,81,82,83,84,85,86,87,88,89,90,91,95,107,122,138,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'acceso_objeto':([31,48,51,53,54,55,68,75,76,80,81,82,83,84,85,86,87,88,89,90,91,95,107,122,138,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'bloque':([37,71,123,131,136,141,],[69,101,129,135,139,142,]),'lista_expresiones':([51,122,],[78,128,]),'instrucciones':([70,],[99,]),'listaelseif':([129,],[132,]),'else_if':([129,132,],[133,137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> clases_funciones','init',1,'p_init','gramatica.py',168),
  ('clases_funciones -> clases_funciones clase_funcion','clases_funciones',2,'p_clases_funciones','gramatica.py',174),
  ('clases_funciones -> clase_funcion','clases_funciones',1,'p_clases_funciones_corte','gramatica.py',180),
  ('clase_funcion -> clase','clase_funcion',1,'p_clase_funcion','gramatica.py',185),
  ('clase_funcion -> funcion','clase_funcion',1,'p_clase_funcion','gramatica.py',186),
  ('clase -> CLASS ID bloqueClase','clase',3,'p_clase','gramatica.py',192),
  ('bloqueClase -> CORIZQ instrs_clase CORDER','bloqueClase',3,'p_bloque_clase','gramatica.py',197),
  ('bloqueClase -> CORIZQ CORDER','bloqueClase',2,'p_bloque_clase','gramatica.py',198),
  ('instrs_clase -> instrs_clase instruccion','instrs_clase',2,'p_instrs_clase','gramatica.py',206),
  ('instrs_clase -> instruccion','instrs_clase',1,'p_instrs_clase_corte','gramatica.py',212),
  ('funcion -> tipo_funcion ID PIZQ PDER bloque','funcion',5,'p_funcion','gramatica.py',218),
  ('funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque','funcion',6,'p_funcion','gramatica.py',219),
  ('lista_parametros -> lista_parametros COMA parametro','lista_parametros',3,'p_lista_parametros','gramatica.py',230),
  ('lista_parametros -> parametro','lista_parametros',1,'p_lista_parametros_corte','gramatica.py',236),
  ('parametro -> tipo_dato ID','parametro',2,'p_parametro','gramatica.py',241),
  ('bloque -> CORIZQ CORDER','bloque',2,'p_bloque','gramatica.py',249),
  ('bloque -> CORIZQ instrucciones CORDER','bloque',3,'p_bloque','gramatica.py',250),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',261),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',267),
  ('instruccion -> print_inst PTCOMA','instruccion',2,'p_instruccion','gramatica.py',272),
  ('instruccion -> declaracion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',273),
  ('instruccion -> declaracion_objeto PTCOMA','instruccion',2,'p_instruccion','gramatica.py',274),
  ('instruccion -> llamada PTCOMA','instruccion',2,'p_instruccion','gramatica.py',275),
  ('instruccion -> return_inst PTCOMA','instruccion',2,'p_instruccion','gramatica.py',276),
  ('instruccion -> if_instr','instruccion',1,'p_instruccion','gramatica.py',277),
  ('declaracion -> tipo_dato ID IGUAL expresion','declaracion',4,'p_declaracion','gramatica.py',282),
  ('declaracion -> tipo_dato ID','declaracion',2,'p_declaracion','gramatica.py',283),
  ('declaracion_objeto -> ID ID IGUAL expresion','declaracion_objeto',4,'p_declaracion_objeto','gramatica.py',292),
  ('print_inst -> PRINT PIZQ expresion PDER','print_inst',4,'p_print','gramatica.py',298),
  ('llamada -> ID PIZQ PDER','llamada',3,'p_llamada','gramatica.py',304),
  ('llamada -> ID PIZQ lista_expresiones PDER','llamada',4,'p_llamada','gramatica.py',305),
  ('return_inst -> RETURN_W','return_inst',1,'p_return_instr','gramatica.py',314),
  ('return_inst -> RETURN_W expresion','return_inst',2,'p_return_instr','gramatica.py',315),
  ('if_instr -> IF_W PIZQ expresion PDER bloque','if_instr',5,'p_if_instr','gramatica.py',325),
  ('if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque','if_instr',7,'p_if_instr','gramatica.py',326),
  ('if_instr -> IF_W PIZQ expresion PDER bloque listaelseif','if_instr',6,'p_if_instr','gramatica.py',327),
  ('if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque','if_instr',8,'p_if_instr','gramatica.py',328),
  ('listaelseif -> listaelseif else_if','listaelseif',2,'p_lista_else_if','gramatica.py',341),
  ('listaelseif -> else_if','listaelseif',1,'p_lista_else_if_corte','gramatica.py',347),
  ('else_if -> ELSE_W IF_W PIZQ expresion PDER bloque','else_if',6,'p_else_if','gramatica.py',352),
  ('lista_expresiones -> lista_expresiones COMA expresion','lista_expresiones',3,'p_lista_expresiones','gramatica.py',358),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_lista_expresiones_corte','gramatica.py',364),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica','gramatica.py',371),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica','gramatica.py',372),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_logica','gramatica.py',373),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_relacional','gramatica.py',382),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_relacional','gramatica.py',383),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',384),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',385),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_relacional','gramatica.py',386),
  ('expresion -> expresion IGUALIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',387),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_aritmetica','gramatica.py',404),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',405),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',406),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',407),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',408),
  ('expresion -> PIZQ expresion PDER','expresion',3,'p_expresion_aritmetica','gramatica.py',409),
  ('expresion -> ENTERO','expresion',1,'p_expresion_primitiva','gramatica.py',423),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_primitiva','gramatica.py',424),
  ('expresion -> ID','expresion',1,'p_expresion_primitiva','gramatica.py',425),
  ('expresion -> CADENA','expresion',1,'p_expresion_primitiva','gramatica.py',426),
  ('expresion -> TRUE','expresion',1,'p_expresion_primitiva','gramatica.py',427),
  ('expresion -> FALSE','expresion',1,'p_expresion_primitiva','gramatica.py',428),
  ('expresion -> llamada','expresion',1,'p_otras_expresiones','gramatica.py',447),
  ('expresion -> acceso_objeto_expresion','expresion',1,'p_otras_expresiones','gramatica.py',448),
  ('expresion -> instancia_objeto','expresion',1,'p_otras_expresiones','gramatica.py',449),
  ('expresion -> if_instr','expresion',1,'p_otras_expresiones','gramatica.py',450),
  ('acceso_objeto_expresion -> acceso_objeto','acceso_objeto_expresion',1,'p_acceso_objeto_expresion','gramatica.py',455),
  ('acceso_objeto -> acceso_objeto PUNTO expresion','acceso_objeto',3,'p_acceso_objeto','gramatica.py',460),
  ('acceso_objeto -> expresion','acceso_objeto',1,'p_acceso_objeto_cort','gramatica.py',466),
  ('instancia_objeto -> NEW ID PIZQ PDER','instancia_objeto',4,'p_instancia_objeto','gramatica.py',471),
  ('instancia_objeto -> NEW ID PIZQ lista_expresiones PDER','instancia_objeto',5,'p_instancia_objeto','gramatica.py',472),
  ('tipo_funcion -> INT','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',482),
  ('tipo_funcion -> STRING_TYPE','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',483),
  ('tipo_funcion -> BOOLEAN','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',484),
  ('tipo_funcion -> VOID','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',485),
  ('tipo_funcion -> FLOAT','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',486),
  ('tipo_dato -> INT','tipo_dato',1,'p_tipo_dato','gramatica.py',501),
  ('tipo_dato -> STRING_TYPE','tipo_dato',1,'p_tipo_dato','gramatica.py',502),
  ('tipo_dato -> BOOLEAN','tipo_dato',1,'p_tipo_dato','gramatica.py',503),
  ('tipo_dato -> FLOAT','tipo_dato',1,'p_tipo_dato','gramatica.py',504),
]
