
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASMENOSleftMULTIPLICACIONDIVISIONCORDER CORIZQ DECIMAL DIVISION ENTERO ID INT MAS MENOS MULTIPLICACION PDER PIZQ PRINT PTCOMAinit :  instruccionesinstrucciones : instrucciones instruccion instrucciones : instruccioninstruccion : print_instprint_inst : PRINT PIZQ expression PDERexpression : expression MAS expression\n                 | expression MENOS expressionexpression : ENTERO\n                    | DECIMAL'
    
_lr_action_items = {'PRINT':([0,2,3,4,6,11,],[5,5,-3,-4,-2,-5,]),'$end':([1,2,3,4,6,11,],[0,-1,-3,-4,-2,-5,]),'PIZQ':([5,],[7,]),'ENTERO':([7,12,13,],[9,9,9,]),'DECIMAL':([7,12,13,],[10,10,10,]),'PDER':([8,9,10,14,15,],[11,-8,-9,-6,-7,]),'MAS':([8,9,10,14,15,],[12,-8,-9,-6,-7,]),'MENOS':([8,9,10,14,15,],[13,-8,-9,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,6,]),'print_inst':([0,2,],[4,4,]),'expression':([7,12,13,],[8,14,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica.py',89),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',94),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',100),
  ('instruccion -> print_inst','instruccion',1,'p_instruccion','gramatica.py',105),
  ('print_inst -> PRINT PIZQ expression PDER','print_inst',4,'p_print','gramatica.py',110),
  ('expression -> expression MAS expression','expression',3,'p_expression_aritmetica','gramatica.py',116),
  ('expression -> expression MENOS expression','expression',3,'p_expression_aritmetica','gramatica.py',117),
  ('expression -> ENTERO','expression',1,'p_expression_primitiva','gramatica.py',126),
  ('expression -> DECIMAL','expression',1,'p_expression_primitiva','gramatica.py',127),
]
