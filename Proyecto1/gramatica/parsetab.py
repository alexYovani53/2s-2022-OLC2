
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocMAYORMENORIGUALMENORMAYORIGUALIGUALIGUALDIFERENTEleftMASMENOSleftMULTIPLICACIONDIVISIONrightNOTUMENOSAND BOOLEAN CADENA CLASS COMA CORDER CORIZQ DECIMAL DIFERENTE DIVISION DOBLEPT ELSE_W ENTERO FALSE FLOAT ID IF_W IGUAL IGUALIGUAL INT MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MULTIPLICACION NEW NOT OR PDER PIZQ PRINT PTCOMA PUNTO RETURN_W STRING_TYPE TRUE VOIDinit : clases_funciones  clases_funciones : clases_funciones clase_funcion  clases_funciones : clase_funcion  clase_funcion : clase\n                      | funcion  clase : CLASS ID bloqueClase bloqueClase : CORIZQ instrs_clase CORDER\n                    | CORIZQ  CORDERfuncion : tipo_funcion ID PIZQ  PDER bloque\n               | tipo_funcion ID PIZQ lista_parametros PDER bloque lista_parametros : lista_parametros COMA parametro lista_parametros : parametro parametro : tipo_dato ID bloque  : CORIZQ  CORDER\n                | CORIZQ  instrucciones CORDER  instrs_clase : instrs_clase instr  instrs_clase :  instr  instr : declaracion PTCOMAinstrucciones : instrucciones instruccion instrucciones : instruccioninstruccion : print_inst PTCOMA\n                   | declaracion PTCOMA\n                   | declaracion_objeto PTCOMA\n                   | llamada PTCOMA\n                   | return_inst PTCOMA\n                   | if_instr  declaracion : tipo_dato ID IGUAL expresion\n                    | tipo_dato ID  declaracion_objeto : ID ID IGUAL expresion print_inst : PRINT PIZQ expresion PDER llamada : ID PIZQ PDER\n                | ID PIZQ lista_expresiones PDER return_inst : RETURN_W\n                    | RETURN_W expresion if_instr :  IF_W PIZQ expresion PDER bloque\n                 |  IF_W PIZQ expresion PDER bloque ELSE_W bloque\n                 |  IF_W PIZQ expresion PDER bloque  listaelseif\n                 |  IF_W PIZQ expresion PDER bloque  listaelseif ELSE_W bloque listaelseif : listaelseif else_if   listaelseif : else_if else_if : ELSE_W IF_W PIZQ expresion PDER bloque lista_expresiones : lista_expresiones COMA  expresion lista_expresiones : expresionexpresion : expresion OR expresion\n                 | expresion AND expresion\n                 | NOT expresion %prec NOTexpresion : expresion MENOR expresion\n                 | expresion MAYOR expresion\n                 | expresion MAYORIGUAL expresion\n                 | expresion MENORIGUAL expresion\n                 | expresion DIFERENTE expresion\n                 | expresion IGUALIGUAL expresionexpresion : MENOS expresion %prec UMENOS\n                 | expresion MAS expresion\n                 | expresion MENOS expresion\n                 | expresion MULTIPLICACION expresion\n                 | expresion DIVISION expresion\n                 | PIZQ expresion PDERexpresion : ENTERO\n                    | DECIMAL\n                    | ID\n                    | CADENA\n                    | TRUE\n                    | FALSE expresion : llamada\n                  | acceso_objeto_expresion\n                  | instancia_objeto\n                  | if_instr acceso_objeto_expresion : acceso_objeto acceso_objeto : acceso_objeto  PUNTO expresion acceso_objeto : expresion instancia_objeto : NEW ID PIZQ PDER\n                         | NEW ID PIZQ lista_expresiones PDER tipo_funcion : INT\n                     | STRING_TYPE\n                     | BOOLEAN\n                     | VOID\n                     | FLOAT tipo_dato : INT\n                     | STRING_TYPE\n                     | BOOLEAN\n                     | FLOAT'
    
_lr_action_items = {'CLASS':([0,2,3,4,5,13,16,20,32,36,42,55,73,],[6,6,-3,-4,-5,-2,-6,-8,-7,-9,-14,-10,-15,]),'INT':([0,2,3,4,5,13,16,17,18,19,20,21,32,33,34,36,37,39,42,43,44,50,55,73,74,75,76,77,78,79,131,134,135,137,139,141,144,],[8,8,-3,-4,-5,-2,-6,24,24,24,-8,-17,-7,-16,-18,-9,24,24,-14,24,-20,-26,-10,-15,-19,-21,-22,-23,-24,-25,-35,-37,-40,-36,-39,-38,-41,]),'STRING_TYPE':([0,2,3,4,5,13,16,17,18,19,20,21,32,33,34,36,37,39,42,43,44,50,55,73,74,75,76,77,78,79,131,134,135,137,139,141,144,],[9,9,-3,-4,-5,-2,-6,25,25,25,-8,-17,-7,-16,-18,-9,25,25,-14,25,-20,-26,-10,-15,-19,-21,-22,-23,-24,-25,-35,-37,-40,-36,-39,-38,-41,]),'BOOLEAN':([0,2,3,4,5,13,16,17,18,19,20,21,32,33,34,36,37,39,42,43,44,50,55,73,74,75,76,77,78,79,131,134,135,137,139,141,144,],[10,10,-3,-4,-5,-2,-6,26,26,26,-8,-17,-7,-16,-18,-9,26,26,-14,26,-20,-26,-10,-15,-19,-21,-22,-23,-24,-25,-35,-37,-40,-36,-39,-38,-41,]),'VOID':([0,2,3,4,5,13,16,20,32,36,42,55,73,],[11,11,-3,-4,-5,-2,-6,-8,-7,-9,-14,-10,-15,]),'FLOAT':([0,2,3,4,5,13,16,17,18,19,20,21,32,33,34,36,37,39,42,43,44,50,55,73,74,75,76,77,78,79,131,134,135,137,139,141,144,],[12,12,-3,-4,-5,-2,-6,27,27,27,-8,-17,-7,-16,-18,-9,27,27,-14,27,-20,-26,-10,-15,-19,-21,-22,-23,-24,-25,-35,-37,-40,-36,-39,-38,-41,]),'$end':([1,2,3,4,5,13,16,20,32,36,42,55,73,],[0,-1,-3,-4,-5,-2,-6,-8,-7,-9,-14,-10,-15,]),'ID':([6,7,8,9,10,11,12,23,24,25,26,27,31,37,41,42,43,44,50,52,53,59,60,61,72,73,74,75,76,77,78,79,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,100,103,122,126,131,134,135,137,139,140,141,144,],[14,15,-74,-75,-76,-77,-78,35,-79,-80,-81,-82,40,52,57,-14,52,-20,-26,81,57,57,57,57,101,-15,-19,-21,-22,-23,-24,-25,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-35,-37,-40,-36,-39,57,-38,-41,]),'CORIZQ':([14,28,38,127,133,138,143,],[17,37,37,37,37,37,37,]),'PIZQ':([15,41,51,52,53,54,57,59,60,61,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,103,122,126,136,140,],[18,61,80,82,61,84,82,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,122,61,61,61,140,61,]),'CORDER':([17,19,21,33,34,37,42,43,44,50,73,74,75,76,77,78,79,131,134,135,137,139,141,144,],[20,32,-17,-16,-18,42,-14,73,-20,-26,-15,-19,-21,-22,-23,-24,-25,-35,-37,-40,-36,-39,-38,-41,]),'PDER':([18,29,30,40,42,56,57,62,63,64,65,66,67,68,69,70,71,73,82,97,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,125,128,129,130,131,132,134,135,137,139,141,142,144,],[28,38,-12,-13,-14,-11,-61,-59,-60,-62,-63,-64,-65,-66,-67,-68,-69,-15,104,-46,-53,120,123,-31,125,-43,127,-44,-45,-47,-48,-49,-50,-51,-52,-54,-55,-56,-57,-58,-70,128,-32,-72,132,-42,-35,-73,-37,-40,-36,-39,-38,143,-41,]),'PTCOMA':([22,35,42,45,46,47,48,49,53,57,58,62,63,64,65,66,67,68,69,70,71,73,83,97,98,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,128,131,132,134,135,137,139,141,144,],[34,-28,-14,75,76,77,78,79,-33,-61,-27,-59,-60,-62,-63,-64,-65,-66,-67,-68,-69,-15,-34,-46,-53,-31,-44,-45,-47,-48,-49,-50,-51,-52,-54,-55,-56,-57,-58,-70,-30,-29,-32,-72,-35,-73,-37,-40,-36,-39,-38,-41,]),'COMA':([29,30,40,42,56,57,62,63,64,65,66,67,68,69,70,71,73,97,98,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,128,129,130,131,132,134,135,137,139,141,144,],[39,-12,-13,-14,-11,-61,-59,-60,-62,-63,-64,-65,-66,-67,-68,-69,-15,-46,-53,-31,126,-43,-44,-45,-47,-48,-49,-50,-51,-52,-54,-55,-56,-57,-58,-70,-32,-72,126,-42,-35,-73,-37,-40,-36,-39,-38,-41,]),'IGUAL':([35,81,],[41,103,]),'PRINT':([37,42,43,44,50,73,74,75,76,77,78,79,131,134,135,137,139,141,144,],[51,-14,51,-20,-26,-15,-19,-21,-22,-23,-24,-25,-35,-37,-40,-36,-39,-38,-41,]),'RETURN_W':([37,42,43,44,50,73,74,75,76,77,78,79,131,134,135,137,139,141,144,],[53,-14,53,-20,-26,-15,-19,-21,-22,-23,-24,-25,-35,-37,-40,-36,-39,-38,-41,]),'IF_W':([37,41,42,43,44,50,53,59,60,61,73,74,75,76,77,78,79,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,100,103,122,126,131,133,134,135,137,138,139,140,141,144,],[54,54,-14,54,-20,-26,54,54,54,54,-15,-19,-21,-22,-23,-24,-25,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-35,136,-37,-40,-36,136,-39,54,-38,-41,]),'NOT':([41,53,59,60,61,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,100,103,122,126,140,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'MENOS':([41,42,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,128,130,131,132,134,135,137,139,140,141,142,144,],[60,-14,60,-61,94,60,60,60,-59,-60,-62,-63,-64,-65,-66,-67,-68,-69,-15,60,60,94,60,60,60,60,60,60,60,60,60,60,60,60,60,-46,-53,94,60,94,60,-31,94,94,94,94,94,94,94,94,94,94,-54,-55,-56,-57,-58,94,60,94,-32,60,-72,94,-35,-73,-37,-40,-36,-39,60,-38,94,-41,]),'ENTERO':([41,53,59,60,61,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,100,103,122,126,140,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'DECIMAL':([41,53,59,60,61,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,100,103,122,126,140,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'CADENA':([41,53,59,60,61,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,100,103,122,126,140,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'TRUE':([41,53,59,60,61,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,100,103,122,126,140,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'FALSE':([41,53,59,60,61,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,100,103,122,126,140,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'NEW':([41,53,59,60,61,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,100,103,122,126,140,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'ELSE_W':([42,73,131,134,135,139,144,],[-14,-15,133,138,-40,-39,-41,]),'OR':([42,57,58,62,63,64,65,66,67,68,69,70,71,73,83,97,98,99,102,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,128,130,131,132,134,135,137,139,141,142,144,],[-14,-61,85,-59,-60,-62,-63,-64,-65,-66,-67,-68,-69,-15,85,-46,-53,85,85,-31,85,85,-44,-45,-47,-48,-49,-50,-51,-52,-54,-55,-56,-57,-58,85,85,-32,-72,85,-35,-73,-37,-40,-36,-39,-38,85,-41,]),'AND':([42,57,58,62,63,64,65,66,67,68,69,70,71,73,83,97,98,99,102,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,128,130,131,132,134,135,137,139,141,142,144,],[-14,-61,86,-59,-60,-62,-63,-64,-65,-66,-67,-68,-69,-15,86,-46,-53,86,86,-31,86,86,86,-45,-47,-48,-49,-50,-51,-52,-54,-55,-56,-57,-58,86,86,-32,-72,86,-35,-73,-37,-40,-36,-39,-38,86,-41,]),'MENOR':([42,57,58,62,63,64,65,66,67,68,69,70,71,73,83,97,98,99,102,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,128,130,131,132,134,135,137,139,141,142,144,],[-14,-61,87,-59,-60,-62,-63,-64,-65,-66,-67,-68,-69,-15,87,-46,-53,87,87,-31,87,87,87,87,-71,-71,-71,-71,-71,-71,-54,-55,-56,-57,-58,87,87,-32,-72,87,-35,-73,-37,-40,-36,-39,-38,87,-41,]),'MAYOR':([42,57,58,62,63,64,65,66,67,68,69,70,71,73,83,97,98,99,102,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,128,130,131,132,134,135,137,139,141,142,144,],[-14,-61,88,-59,-60,-62,-63,-64,-65,-66,-67,-68,-69,-15,88,-46,-53,88,88,-31,88,88,88,88,-71,-71,-71,-71,-71,-71,-54,-55,-56,-57,-58,88,88,-32,-72,88,-35,-73,-37,-40,-36,-39,-38,88,-41,]),'MAYORIGUAL':([42,57,58,62,63,64,65,66,67,68,69,70,71,73,83,97,98,99,102,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,128,130,131,132,134,135,137,139,141,142,144,],[-14,-61,89,-59,-60,-62,-63,-64,-65,-66,-67,-68,-69,-15,89,-46,-53,89,89,-31,89,89,89,89,-71,-71,-71,-71,-71,-71,-54,-55,-56,-57,-58,89,89,-32,-72,89,-35,-73,-37,-40,-36,-39,-38,89,-41,]),'MENORIGUAL':([42,57,58,62,63,64,65,66,67,68,69,70,71,73,83,97,98,99,102,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,128,130,131,132,134,135,137,139,141,142,144,],[-14,-61,90,-59,-60,-62,-63,-64,-65,-66,-67,-68,-69,-15,90,-46,-53,90,90,-31,90,90,90,90,-71,-71,-71,-71,-71,-71,-54,-55,-56,-57,-58,90,90,-32,-72,90,-35,-73,-37,-40,-36,-39,-38,90,-41,]),'DIFERENTE':([42,57,58,62,63,64,65,66,67,68,69,70,71,73,83,97,98,99,102,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,128,130,131,132,134,135,137,139,141,142,144,],[-14,-61,91,-59,-60,-62,-63,-64,-65,-66,-67,-68,-69,-15,91,-46,-53,91,91,-31,91,91,91,91,-71,-71,-71,-71,-71,-71,-54,-55,-56,-57,-58,91,91,-32,-72,91,-35,-73,-37,-40,-36,-39,-38,91,-41,]),'IGUALIGUAL':([42,57,58,62,63,64,65,66,67,68,69,70,71,73,83,97,98,99,102,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,128,130,131,132,134,135,137,139,141,142,144,],[-14,-61,92,-59,-60,-62,-63,-64,-65,-66,-67,-68,-69,-15,92,-46,-53,92,92,-31,92,92,92,92,-71,-71,-71,-71,-71,-71,-54,-55,-56,-57,-58,92,92,-32,-72,92,-35,-73,-37,-40,-36,-39,-38,92,-41,]),'MAS':([42,57,58,62,63,64,65,66,67,68,69,70,71,73,83,97,98,99,102,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,128,130,131,132,134,135,137,139,141,142,144,],[-14,-61,93,-59,-60,-62,-63,-64,-65,-66,-67,-68,-69,-15,93,-46,-53,93,93,-31,93,93,93,93,93,93,93,93,93,93,-54,-55,-56,-57,-58,93,93,-32,-72,93,-35,-73,-37,-40,-36,-39,-38,93,-41,]),'MULTIPLICACION':([42,57,58,62,63,64,65,66,67,68,69,70,71,73,83,97,98,99,102,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,128,130,131,132,134,135,137,139,141,142,144,],[-14,-61,95,-59,-60,-62,-63,-64,-65,-66,-67,-68,-69,-15,95,-46,-53,95,95,-31,95,95,95,95,95,95,95,95,95,95,95,95,-56,-57,-58,95,95,-32,-72,95,-35,-73,-37,-40,-36,-39,-38,95,-41,]),'DIVISION':([42,57,58,62,63,64,65,66,67,68,69,70,71,73,83,97,98,99,102,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,128,130,131,132,134,135,137,139,141,142,144,],[-14,-61,96,-59,-60,-62,-63,-64,-65,-66,-67,-68,-69,-15,96,-46,-53,96,96,-31,96,96,96,96,96,96,96,96,96,96,96,96,-56,-57,-58,96,96,-32,-72,96,-35,-73,-37,-40,-36,-39,-38,96,-41,]),'PUNTO':([42,57,58,62,63,64,65,66,67,68,69,70,71,73,83,97,98,99,102,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,128,130,131,132,134,135,137,139,141,142,144,],[-14,-61,-71,-59,-60,-62,-63,-64,-65,-66,-67,-68,100,-15,-71,-46,-53,-71,-71,-31,-71,-71,-44,-45,-47,-48,-49,-50,-51,-52,-54,-55,-56,-57,-58,-70,-71,-32,-72,-71,-35,-73,-37,-40,-36,-39,-38,-71,-41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'clases_funciones':([0,],[2,]),'clase_funcion':([0,2,],[3,13,]),'clase':([0,2,],[4,4,]),'funcion':([0,2,],[5,5,]),'tipo_funcion':([0,2,],[7,7,]),'bloqueClase':([14,],[16,]),'instrs_clase':([17,],[19,]),'instr':([17,19,],[21,33,]),'declaracion':([17,19,37,43,],[22,22,46,46,]),'tipo_dato':([17,18,19,37,39,43,],[23,31,23,23,31,23,]),'lista_parametros':([18,],[29,]),'parametro':([18,39,],[30,56,]),'bloque':([28,38,127,133,138,143,],[36,55,131,137,141,144,]),'instrucciones':([37,],[43,]),'instruccion':([37,43,],[44,74,]),'print_inst':([37,43,],[45,45,]),'declaracion_objeto':([37,43,],[47,47,]),'llamada':([37,41,43,53,59,60,61,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,100,103,122,126,140,],[48,67,48,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'return_inst':([37,43,],[49,49,]),'if_instr':([37,41,43,53,59,60,61,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,100,103,122,126,140,],[50,70,50,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'expresion':([41,53,59,60,61,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,100,103,122,126,140,],[58,83,97,98,99,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,124,106,130,142,]),'acceso_objeto_expresion':([41,53,59,60,61,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,100,103,122,126,140,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'instancia_objeto':([41,53,59,60,61,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,100,103,122,126,140,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'acceso_objeto':([41,53,59,60,61,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,100,103,122,126,140,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'lista_expresiones':([82,122,],[105,129,]),'listaelseif':([131,],[134,]),'else_if':([131,134,],[135,139,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> clases_funciones','init',1,'p_init','gramatica.py',168),
  ('clases_funciones -> clases_funciones clase_funcion','clases_funciones',2,'p_clases_funciones','gramatica.py',174),
  ('clases_funciones -> clase_funcion','clases_funciones',1,'p_clases_funciones_corte','gramatica.py',180),
  ('clase_funcion -> clase','clase_funcion',1,'p_clase_funcion','gramatica.py',185),
  ('clase_funcion -> funcion','clase_funcion',1,'p_clase_funcion','gramatica.py',186),
  ('clase -> CLASS ID bloqueClase','clase',3,'p_clase','gramatica.py',192),
  ('bloqueClase -> CORIZQ instrs_clase CORDER','bloqueClase',3,'p_bloque_clase','gramatica.py',197),
  ('bloqueClase -> CORIZQ CORDER','bloqueClase',2,'p_bloque_clase','gramatica.py',198),
  ('funcion -> tipo_funcion ID PIZQ PDER bloque','funcion',5,'p_funcion','gramatica.py',207),
  ('funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque','funcion',6,'p_funcion','gramatica.py',208),
  ('lista_parametros -> lista_parametros COMA parametro','lista_parametros',3,'p_lista_parametros','gramatica.py',219),
  ('lista_parametros -> parametro','lista_parametros',1,'p_lista_parametros_corte','gramatica.py',225),
  ('parametro -> tipo_dato ID','parametro',2,'p_parametro','gramatica.py',230),
  ('bloque -> CORIZQ CORDER','bloque',2,'p_bloque','gramatica.py',238),
  ('bloque -> CORIZQ instrucciones CORDER','bloque',3,'p_bloque','gramatica.py',239),
  ('instrs_clase -> instrs_clase instr','instrs_clase',2,'p_instrs_clase','gramatica.py',251),
  ('instrs_clase -> instr','instrs_clase',1,'p_instrs_clase_corte','gramatica.py',257),
  ('instr -> declaracion PTCOMA','instr',2,'p_in','gramatica.py',261),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',266),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',272),
  ('instruccion -> print_inst PTCOMA','instruccion',2,'p_instruccion','gramatica.py',277),
  ('instruccion -> declaracion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',278),
  ('instruccion -> declaracion_objeto PTCOMA','instruccion',2,'p_instruccion','gramatica.py',279),
  ('instruccion -> llamada PTCOMA','instruccion',2,'p_instruccion','gramatica.py',280),
  ('instruccion -> return_inst PTCOMA','instruccion',2,'p_instruccion','gramatica.py',281),
  ('instruccion -> if_instr','instruccion',1,'p_instruccion','gramatica.py',282),
  ('declaracion -> tipo_dato ID IGUAL expresion','declaracion',4,'p_declaracion','gramatica.py',288),
  ('declaracion -> tipo_dato ID','declaracion',2,'p_declaracion','gramatica.py',289),
  ('declaracion_objeto -> ID ID IGUAL expresion','declaracion_objeto',4,'p_declaracion_objeto','gramatica.py',298),
  ('print_inst -> PRINT PIZQ expresion PDER','print_inst',4,'p_print','gramatica.py',304),
  ('llamada -> ID PIZQ PDER','llamada',3,'p_llamada','gramatica.py',310),
  ('llamada -> ID PIZQ lista_expresiones PDER','llamada',4,'p_llamada','gramatica.py',311),
  ('return_inst -> RETURN_W','return_inst',1,'p_return_instr','gramatica.py',320),
  ('return_inst -> RETURN_W expresion','return_inst',2,'p_return_instr','gramatica.py',321),
  ('if_instr -> IF_W PIZQ expresion PDER bloque','if_instr',5,'p_if_instr','gramatica.py',331),
  ('if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque','if_instr',7,'p_if_instr','gramatica.py',332),
  ('if_instr -> IF_W PIZQ expresion PDER bloque listaelseif','if_instr',6,'p_if_instr','gramatica.py',333),
  ('if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque','if_instr',8,'p_if_instr','gramatica.py',334),
  ('listaelseif -> listaelseif else_if','listaelseif',2,'p_lista_else_if','gramatica.py',347),
  ('listaelseif -> else_if','listaelseif',1,'p_lista_else_if_corte','gramatica.py',353),
  ('else_if -> ELSE_W IF_W PIZQ expresion PDER bloque','else_if',6,'p_else_if','gramatica.py',358),
  ('lista_expresiones -> lista_expresiones COMA expresion','lista_expresiones',3,'p_lista_expresiones','gramatica.py',364),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_lista_expresiones_corte','gramatica.py',370),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica','gramatica.py',377),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica','gramatica.py',378),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_logica','gramatica.py',379),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_relacional','gramatica.py',388),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_relacional','gramatica.py',389),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',390),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',391),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_relacional','gramatica.py',392),
  ('expresion -> expresion IGUALIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',393),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_aritmetica','gramatica.py',410),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',411),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',412),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',413),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',414),
  ('expresion -> PIZQ expresion PDER','expresion',3,'p_expresion_aritmetica','gramatica.py',415),
  ('expresion -> ENTERO','expresion',1,'p_expresion_primitiva','gramatica.py',429),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_primitiva','gramatica.py',430),
  ('expresion -> ID','expresion',1,'p_expresion_primitiva','gramatica.py',431),
  ('expresion -> CADENA','expresion',1,'p_expresion_primitiva','gramatica.py',432),
  ('expresion -> TRUE','expresion',1,'p_expresion_primitiva','gramatica.py',433),
  ('expresion -> FALSE','expresion',1,'p_expresion_primitiva','gramatica.py',434),
  ('expresion -> llamada','expresion',1,'p_otras_expresiones','gramatica.py',453),
  ('expresion -> acceso_objeto_expresion','expresion',1,'p_otras_expresiones','gramatica.py',454),
  ('expresion -> instancia_objeto','expresion',1,'p_otras_expresiones','gramatica.py',455),
  ('expresion -> if_instr','expresion',1,'p_otras_expresiones','gramatica.py',456),
  ('acceso_objeto_expresion -> acceso_objeto','acceso_objeto_expresion',1,'p_acceso_objeto_expresion','gramatica.py',461),
  ('acceso_objeto -> acceso_objeto PUNTO expresion','acceso_objeto',3,'p_acceso_objeto','gramatica.py',466),
  ('acceso_objeto -> expresion','acceso_objeto',1,'p_acceso_objeto_cort','gramatica.py',472),
  ('instancia_objeto -> NEW ID PIZQ PDER','instancia_objeto',4,'p_instancia_objeto','gramatica.py',477),
  ('instancia_objeto -> NEW ID PIZQ lista_expresiones PDER','instancia_objeto',5,'p_instancia_objeto','gramatica.py',478),
  ('tipo_funcion -> INT','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',488),
  ('tipo_funcion -> STRING_TYPE','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',489),
  ('tipo_funcion -> BOOLEAN','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',490),
  ('tipo_funcion -> VOID','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',491),
  ('tipo_funcion -> FLOAT','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',492),
  ('tipo_dato -> INT','tipo_dato',1,'p_tipo_dato','gramatica.py',507),
  ('tipo_dato -> STRING_TYPE','tipo_dato',1,'p_tipo_dato','gramatica.py',508),
  ('tipo_dato -> BOOLEAN','tipo_dato',1,'p_tipo_dato','gramatica.py',509),
  ('tipo_dato -> FLOAT','tipo_dato',1,'p_tipo_dato','gramatica.py',510),
]
