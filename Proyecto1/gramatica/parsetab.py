
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocMAYORMENORIGUALMENORMAYORIGUALIGUALIGUALDIFERENTEleftMASMENOSleftMULTIPLICACIONDIVISIONrightNOTUMENOSAND BOOLEAN CADENA CLASS COMA CORDER CORIZQ DECIMAL DIFERENTE DIVISION DOBLEPT ELSE_W ENTERO FALSE FLOAT ID IF_W IGUAL IGUALIGUAL INT LLAVEDER LLAVEIZQ MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MULTIPLICACION NEW NOT OR PDER PIZQ PRINT PTCOMA PUNTO RETURN_W STRING_TYPE TRUE VOIDinit : clases_funciones  clases_funciones : clases_funciones clase_funcion  clases_funciones : clase_funcion  clase_funcion : clase\n                      | funcion  clase : CLASS ID bloqueClase bloqueClase : LLAVEIZQ instrs_clase LLAVEDER\n                    | LLAVEIZQ  LLAVEDERfuncion : tipo_funcion ID PIZQ  PDER bloque\n               | tipo_funcion ID PIZQ lista_parametros PDER bloque lista_parametros : lista_parametros COMA parametro lista_parametros : parametro parametro : tipo_dato ID bloque  : LLAVEIZQ  LLAVEDER\n                | LLAVEIZQ  instrucciones LLAVEDER  instrs_clase : instrs_clase instr  instrs_clase :  instr  instr : declaracion PTCOMAinstrucciones : instrucciones instruccion instrucciones : instruccioninstruccion : print_inst PTCOMA\n                   | declaracion PTCOMA\n                   | declaracion_objeto PTCOMA\n                   | declaracion_arreglo PTCOMA\n                   | llamada PTCOMA\n                   | return_inst PTCOMA\n                   | if_instr  declaracion : tipo_dato ID IGUAL expresion\n                    | tipo_dato ID  declaracion_arreglo : tipo_dato niveles ID IGUAL expresion niveles : niveles nivel  niveles : nivel  nivel : CORIZQ CORDER  declaracion_objeto : ID ID IGUAL expresion print_inst : PRINT PIZQ expresion PDER llamada : ID PIZQ PDER\n                | ID PIZQ lista_expresiones PDER return_inst : RETURN_W\n                    | RETURN_W expresion if_instr :  IF_W PIZQ expresion PDER bloque\n                 |  IF_W PIZQ expresion PDER bloque ELSE_W bloque\n                 |  IF_W PIZQ expresion PDER bloque  listaelseif\n                 |  IF_W PIZQ expresion PDER bloque  listaelseif ELSE_W bloque listaelseif : listaelseif else_if   listaelseif : else_if else_if : ELSE_W IF_W PIZQ expresion PDER bloque lista_expresiones : lista_expresiones COMA  expresion lista_expresiones : expresionexpresion : expresion OR expresion\n                 | expresion AND expresion\n                 | NOT expresion %prec NOTexpresion : expresion MENOR expresion\n                 | expresion MAYOR expresion\n                 | expresion MAYORIGUAL expresion\n                 | expresion MENORIGUAL expresion\n                 | expresion DIFERENTE expresion\n                 | expresion IGUALIGUAL expresionexpresion : MENOS expresion %prec UMENOS\n                 | expresion MAS expresion\n                 | expresion MENOS expresion\n                 | expresion MULTIPLICACION expresion\n                 | expresion DIVISION expresion\n                 | PIZQ expresion PDERexpresion : ENTERO\n                    | DECIMAL\n                    | ID\n                    | CADENA\n                    | TRUE\n                    | FALSE expresion : llamada\n                  | acceso_objeto_expresion\n                  | acceso_array_expresion\n                  | instancia_objeto\n                  | array_data\n                  | array_instancia\n                  | if_instr array_data : CORIZQ lista_expresiones CORDER array_instancia : NEW tipo_dato dimensiones dimensiones : dimensiones dimension dimensiones : dimension dimension : CORIZQ expresion CORDER instancia_objeto : NEW ID PIZQ PDER\n                         | NEW ID PIZQ lista_expresiones PDER acceso_objeto_expresion : acceso_objeto acceso_objeto : acceso_objeto  PUNTO expresion acceso_objeto : expresionacceso_array_expresion : ID dimensiones tipo_funcion : INT\n                     | STRING_TYPE\n                     | BOOLEAN\n                     | VOID\n                     | FLOAT tipo_dato : INT\n                     | STRING_TYPE\n                     | BOOLEAN\n                     | FLOAT'
    
_lr_action_items = {'CLASS':([0,2,3,4,5,13,16,20,32,36,42,57,79,],[6,6,-3,-4,-5,-2,-6,-8,-7,-9,-14,-10,-15,]),'INT':([0,2,3,4,5,13,16,17,18,19,20,21,32,33,34,36,37,39,42,43,44,51,57,77,79,80,81,82,83,84,85,86,156,159,160,162,164,166,169,],[8,8,-3,-4,-5,-2,-6,24,24,24,-8,-17,-7,-16,-18,-9,24,24,-14,24,-20,-27,-10,24,-15,-19,-21,-22,-23,-24,-25,-26,-40,-42,-45,-41,-44,-43,-46,]),'STRING_TYPE':([0,2,3,4,5,13,16,17,18,19,20,21,32,33,34,36,37,39,42,43,44,51,57,77,79,80,81,82,83,84,85,86,156,159,160,162,164,166,169,],[9,9,-3,-4,-5,-2,-6,25,25,25,-8,-17,-7,-16,-18,-9,25,25,-14,25,-20,-27,-10,25,-15,-19,-21,-22,-23,-24,-25,-26,-40,-42,-45,-41,-44,-43,-46,]),'BOOLEAN':([0,2,3,4,5,13,16,17,18,19,20,21,32,33,34,36,37,39,42,43,44,51,57,77,79,80,81,82,83,84,85,86,156,159,160,162,164,166,169,],[10,10,-3,-4,-5,-2,-6,26,26,26,-8,-17,-7,-16,-18,-9,26,26,-14,26,-20,-27,-10,26,-15,-19,-21,-22,-23,-24,-25,-26,-40,-42,-45,-41,-44,-43,-46,]),'VOID':([0,2,3,4,5,13,16,20,32,36,42,57,79,],[11,11,-3,-4,-5,-2,-6,-8,-7,-9,-14,-10,-15,]),'FLOAT':([0,2,3,4,5,13,16,17,18,19,20,21,32,33,34,36,37,39,42,43,44,51,57,77,79,80,81,82,83,84,85,86,156,159,160,162,164,166,169,],[12,12,-3,-4,-5,-2,-6,27,27,27,-8,-17,-7,-16,-18,-9,27,27,-14,27,-20,-27,-10,27,-15,-19,-21,-22,-23,-24,-25,-26,-40,-42,-45,-41,-44,-43,-46,]),'$end':([1,2,3,4,5,13,16,20,32,36,42,57,79,],[0,-1,-3,-4,-5,-2,-6,-8,-7,-9,-14,-10,-15,]),'ID':([6,7,8,9,10,11,12,23,24,25,26,27,31,37,41,42,43,44,51,53,54,55,61,62,63,77,78,79,80,81,82,83,84,85,86,87,88,89,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,120,121,122,142,145,147,156,159,160,162,164,165,166,169,],[14,15,-88,-89,-90,-91,-92,35,-93,-94,-95,-96,40,54,59,-14,54,-20,-27,35,91,59,59,59,59,114,59,-15,-19,-21,-22,-23,-24,-25,-26,59,119,-32,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-31,-33,59,59,59,59,-40,-42,-45,-41,-44,59,-43,-46,]),'LLAVEIZQ':([14,28,38,150,158,163,168,],[17,37,37,37,37,37,37,]),'PIZQ':([15,41,52,54,55,56,59,61,62,63,78,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,122,142,145,147,161,165,],[18,63,87,92,63,94,92,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,142,63,63,63,63,165,63,]),'LLAVEDER':([17,19,21,33,34,37,42,43,44,51,79,80,81,82,83,84,85,86,156,159,160,162,164,166,169,],[20,32,-17,-16,-18,42,-14,79,-20,-27,-15,-19,-21,-22,-23,-24,-25,-26,-40,-42,-45,-41,-44,-43,-46,]),'PDER':([18,29,30,40,42,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,79,92,95,96,110,111,112,117,118,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,149,151,152,153,154,156,157,159,160,162,164,166,167,169,],[28,38,-12,-13,-14,-11,-66,-64,-65,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-84,-15,123,-87,-80,-51,-58,140,-48,146,-36,149,150,-79,-49,-50,-52,-53,-54,-55,-56,-57,-59,-60,-61,-62,-63,-85,152,-78,-77,-37,-81,-82,157,-47,-40,-83,-42,-45,-41,-44,-43,168,-46,]),'PTCOMA':([22,35,42,45,46,47,48,49,50,55,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,79,93,95,96,110,111,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,146,148,149,151,152,155,156,157,159,160,162,164,166,169,],[34,-29,-14,81,82,83,84,85,86,-38,-66,-28,-64,-65,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-84,-15,-39,-87,-80,-51,-58,-36,-79,-49,-50,-52,-53,-54,-55,-56,-57,-59,-60,-61,-62,-63,-85,-78,-77,-35,-34,-37,-81,-82,-30,-40,-83,-42,-45,-41,-44,-43,-46,]),'CORIZQ':([24,25,26,27,41,53,55,59,61,62,63,78,87,88,89,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,115,120,121,122,126,142,143,145,147,151,165,],[-93,-94,-95,-96,78,90,78,97,78,78,78,78,78,90,-32,78,78,97,-80,78,78,78,78,78,78,78,78,78,78,78,78,78,78,97,-31,-33,78,-79,78,97,78,78,-81,78,]),'COMA':([29,30,40,42,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,79,95,96,110,111,116,117,123,124,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,149,151,152,153,154,156,157,159,160,162,164,166,169,],[39,-12,-13,-14,-11,-66,-64,-65,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-84,-15,-87,-80,-51,-58,145,-48,-36,145,-79,-49,-50,-52,-53,-54,-55,-56,-57,-59,-60,-61,-62,-63,-85,-78,-77,-37,-81,-82,145,-47,-40,-83,-42,-45,-41,-44,-43,-46,]),'IGUAL':([35,91,119,],[41,122,147,]),'PRINT':([37,42,43,44,51,79,80,81,82,83,84,85,86,156,159,160,162,164,166,169,],[52,-14,52,-20,-27,-15,-19,-21,-22,-23,-24,-25,-26,-40,-42,-45,-41,-44,-43,-46,]),'RETURN_W':([37,42,43,44,51,79,80,81,82,83,84,85,86,156,159,160,162,164,166,169,],[55,-14,55,-20,-27,-15,-19,-21,-22,-23,-24,-25,-26,-40,-42,-45,-41,-44,-43,-46,]),'IF_W':([37,41,42,43,44,51,55,61,62,63,78,79,80,81,82,83,84,85,86,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,122,142,145,147,156,158,159,160,162,163,164,165,166,169,],[56,56,-14,56,-20,-27,56,56,56,56,56,-15,-19,-21,-22,-23,-24,-25,-26,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-40,161,-42,-45,-41,161,-44,56,-43,-46,]),'NOT':([41,55,61,62,63,78,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,122,142,145,147,165,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'MENOS':([41,42,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,118,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,151,152,154,155,156,157,159,160,162,164,165,166,167,169,],[62,-14,62,-66,107,62,62,62,-64,-65,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-84,62,-15,62,62,107,62,-87,-80,62,62,62,62,62,62,62,62,62,62,62,62,62,-51,-58,107,62,107,107,62,-36,107,-79,107,107,107,107,107,107,107,107,107,-59,-60,-61,-62,-63,107,62,-78,-77,62,62,107,-37,-81,-82,107,107,-40,-83,-42,-45,-41,-44,62,-43,107,-46,]),'ENTERO':([41,55,61,62,63,78,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,122,142,145,147,165,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'DECIMAL':([41,55,61,62,63,78,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,122,142,145,147,165,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'CADENA':([41,55,61,62,63,78,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,122,142,145,147,165,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'TRUE':([41,55,61,62,63,78,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,122,142,145,147,165,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'FALSE':([41,55,61,62,63,78,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,122,142,145,147,165,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'NEW':([41,55,61,62,63,78,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,122,142,145,147,165,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'ELSE_W':([42,79,156,159,160,164,169,],[-14,-15,158,163,-45,-44,-46,]),'OR':([42,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,79,93,95,96,110,111,112,117,118,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,148,149,151,152,154,155,156,157,159,160,162,164,166,167,169,],[-14,-66,98,-64,-65,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-84,-15,98,-87,-80,-51,-58,98,98,98,-36,98,-79,98,-49,-50,-52,-53,-54,-55,-56,-57,-59,-60,-61,-62,-63,98,-78,-77,98,-37,-81,-82,98,98,-40,-83,-42,-45,-41,-44,-43,98,-46,]),'AND':([42,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,79,93,95,96,110,111,112,117,118,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,148,149,151,152,154,155,156,157,159,160,162,164,166,167,169,],[-14,-66,99,-64,-65,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-84,-15,99,-87,-80,-51,-58,99,99,99,-36,99,-79,99,99,-50,-52,-53,-54,-55,-56,-57,-59,-60,-61,-62,-63,99,-78,-77,99,-37,-81,-82,99,99,-40,-83,-42,-45,-41,-44,-43,99,-46,]),'MENOR':([42,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,79,93,95,96,110,111,112,117,118,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,148,149,151,152,154,155,156,157,159,160,162,164,166,167,169,],[-14,-66,100,-64,-65,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-84,-15,100,-87,-80,-51,-58,100,100,100,-36,100,-79,100,100,100,-86,-86,-86,-86,-86,-86,-59,-60,-61,-62,-63,100,-78,-77,100,-37,-81,-82,100,100,-40,-83,-42,-45,-41,-44,-43,100,-46,]),'MAYOR':([42,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,79,93,95,96,110,111,112,117,118,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,148,149,151,152,154,155,156,157,159,160,162,164,166,167,169,],[-14,-66,101,-64,-65,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-84,-15,101,-87,-80,-51,-58,101,101,101,-36,101,-79,101,101,101,-86,-86,-86,-86,-86,-86,-59,-60,-61,-62,-63,101,-78,-77,101,-37,-81,-82,101,101,-40,-83,-42,-45,-41,-44,-43,101,-46,]),'MAYORIGUAL':([42,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,79,93,95,96,110,111,112,117,118,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,148,149,151,152,154,155,156,157,159,160,162,164,166,167,169,],[-14,-66,102,-64,-65,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-84,-15,102,-87,-80,-51,-58,102,102,102,-36,102,-79,102,102,102,-86,-86,-86,-86,-86,-86,-59,-60,-61,-62,-63,102,-78,-77,102,-37,-81,-82,102,102,-40,-83,-42,-45,-41,-44,-43,102,-46,]),'MENORIGUAL':([42,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,79,93,95,96,110,111,112,117,118,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,148,149,151,152,154,155,156,157,159,160,162,164,166,167,169,],[-14,-66,103,-64,-65,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-84,-15,103,-87,-80,-51,-58,103,103,103,-36,103,-79,103,103,103,-86,-86,-86,-86,-86,-86,-59,-60,-61,-62,-63,103,-78,-77,103,-37,-81,-82,103,103,-40,-83,-42,-45,-41,-44,-43,103,-46,]),'DIFERENTE':([42,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,79,93,95,96,110,111,112,117,118,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,148,149,151,152,154,155,156,157,159,160,162,164,166,167,169,],[-14,-66,104,-64,-65,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-84,-15,104,-87,-80,-51,-58,104,104,104,-36,104,-79,104,104,104,-86,-86,-86,-86,-86,-86,-59,-60,-61,-62,-63,104,-78,-77,104,-37,-81,-82,104,104,-40,-83,-42,-45,-41,-44,-43,104,-46,]),'IGUALIGUAL':([42,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,79,93,95,96,110,111,112,117,118,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,148,149,151,152,154,155,156,157,159,160,162,164,166,167,169,],[-14,-66,105,-64,-65,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-84,-15,105,-87,-80,-51,-58,105,105,105,-36,105,-79,105,105,105,-86,-86,-86,-86,-86,-86,-59,-60,-61,-62,-63,105,-78,-77,105,-37,-81,-82,105,105,-40,-83,-42,-45,-41,-44,-43,105,-46,]),'MAS':([42,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,79,93,95,96,110,111,112,117,118,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,148,149,151,152,154,155,156,157,159,160,162,164,166,167,169,],[-14,-66,106,-64,-65,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-84,-15,106,-87,-80,-51,-58,106,106,106,-36,106,-79,106,106,106,106,106,106,106,106,106,-59,-60,-61,-62,-63,106,-78,-77,106,-37,-81,-82,106,106,-40,-83,-42,-45,-41,-44,-43,106,-46,]),'MULTIPLICACION':([42,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,79,93,95,96,110,111,112,117,118,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,148,149,151,152,154,155,156,157,159,160,162,164,166,167,169,],[-14,-66,108,-64,-65,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-84,-15,108,-87,-80,-51,-58,108,108,108,-36,108,-79,108,108,108,108,108,108,108,108,108,108,108,-61,-62,-63,108,-78,-77,108,-37,-81,-82,108,108,-40,-83,-42,-45,-41,-44,-43,108,-46,]),'DIVISION':([42,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,79,93,95,96,110,111,112,117,118,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,148,149,151,152,154,155,156,157,159,160,162,164,166,167,169,],[-14,-66,109,-64,-65,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-84,-15,109,-87,-80,-51,-58,109,109,109,-36,109,-79,109,109,109,109,109,109,109,109,109,109,109,-61,-62,-63,109,-78,-77,109,-37,-81,-82,109,109,-40,-83,-42,-45,-41,-44,-43,109,-46,]),'PUNTO':([42,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,79,93,95,96,110,111,112,117,118,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,148,149,151,152,154,155,156,157,159,160,162,164,166,167,169,],[-14,-66,-86,-64,-65,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,113,-15,-86,-87,-80,-51,-58,-86,-86,-86,-36,-86,-79,-86,-49,-50,-52,-53,-54,-55,-56,-57,-59,-60,-61,-62,-63,-85,-78,-77,-86,-37,-81,-82,-86,-86,-40,-83,-42,-45,-41,-44,-43,-86,-46,]),'CORDER':([42,59,64,65,66,67,68,69,70,71,72,73,74,75,76,79,90,95,96,110,111,116,117,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,149,151,152,154,156,157,159,160,162,164,166,169,],[-14,-66,-64,-65,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-84,-15,121,-87,-80,-51,-58,144,-48,-36,-79,151,-49,-50,-52,-53,-54,-55,-56,-57,-59,-60,-61,-62,-63,-85,-78,-77,-37,-81,-82,-47,-40,-83,-42,-45,-41,-44,-43,-46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'clases_funciones':([0,],[2,]),'clase_funcion':([0,2,],[3,13,]),'clase':([0,2,],[4,4,]),'funcion':([0,2,],[5,5,]),'tipo_funcion':([0,2,],[7,7,]),'bloqueClase':([14,],[16,]),'instrs_clase':([17,],[19,]),'instr':([17,19,],[21,33,]),'declaracion':([17,19,37,43,],[22,22,46,46,]),'tipo_dato':([17,18,19,37,39,43,77,],[23,31,23,53,31,53,115,]),'lista_parametros':([18,],[29,]),'parametro':([18,39,],[30,58,]),'bloque':([28,38,150,158,163,168,],[36,57,156,162,166,169,]),'instrucciones':([37,],[43,]),'instruccion':([37,43,],[44,80,]),'print_inst':([37,43,],[45,45,]),'declaracion_objeto':([37,43,],[47,47,]),'declaracion_arreglo':([37,43,],[48,48,]),'llamada':([37,41,43,55,61,62,63,78,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,122,142,145,147,165,],[49,69,49,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'return_inst':([37,43,],[50,50,]),'if_instr':([37,41,43,55,61,62,63,78,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,122,142,145,147,165,],[51,75,51,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'expresion':([41,55,61,62,63,78,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,122,142,145,147,165,],[60,93,110,111,112,117,118,117,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,148,117,154,155,167,]),'acceso_objeto_expresion':([41,55,61,62,63,78,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,122,142,145,147,165,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'acceso_array_expresion':([41,55,61,62,63,78,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,122,142,145,147,165,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'instancia_objeto':([41,55,61,62,63,78,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,122,142,145,147,165,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'array_data':([41,55,61,62,63,78,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,122,142,145,147,165,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'array_instancia':([41,55,61,62,63,78,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,122,142,145,147,165,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'acceso_objeto':([41,55,61,62,63,78,87,92,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,122,142,145,147,165,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'niveles':([53,],[88,]),'nivel':([53,88,],[89,120,]),'dimensiones':([59,115,],[95,143,]),'dimension':([59,95,115,143,],[96,126,96,126,]),'lista_expresiones':([78,92,142,],[116,124,153,]),'listaelseif':([156,],[159,]),'else_if':([156,159,],[160,164,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> clases_funciones','init',1,'p_init','gramatica.py',180),
  ('clases_funciones -> clases_funciones clase_funcion','clases_funciones',2,'p_clases_funciones','gramatica.py',186),
  ('clases_funciones -> clase_funcion','clases_funciones',1,'p_clases_funciones_corte','gramatica.py',192),
  ('clase_funcion -> clase','clase_funcion',1,'p_clase_funcion','gramatica.py',197),
  ('clase_funcion -> funcion','clase_funcion',1,'p_clase_funcion','gramatica.py',198),
  ('clase -> CLASS ID bloqueClase','clase',3,'p_clase','gramatica.py',204),
  ('bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER','bloqueClase',3,'p_bloque_clase','gramatica.py',209),
  ('bloqueClase -> LLAVEIZQ LLAVEDER','bloqueClase',2,'p_bloque_clase','gramatica.py',210),
  ('funcion -> tipo_funcion ID PIZQ PDER bloque','funcion',5,'p_funcion','gramatica.py',218),
  ('funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque','funcion',6,'p_funcion','gramatica.py',219),
  ('lista_parametros -> lista_parametros COMA parametro','lista_parametros',3,'p_lista_parametros','gramatica.py',230),
  ('lista_parametros -> parametro','lista_parametros',1,'p_lista_parametros_corte','gramatica.py',236),
  ('parametro -> tipo_dato ID','parametro',2,'p_parametro','gramatica.py',241),
  ('bloque -> LLAVEIZQ LLAVEDER','bloque',2,'p_bloque','gramatica.py',249),
  ('bloque -> LLAVEIZQ instrucciones LLAVEDER','bloque',3,'p_bloque','gramatica.py',250),
  ('instrs_clase -> instrs_clase instr','instrs_clase',2,'p_instrs_clase','gramatica.py',260),
  ('instrs_clase -> instr','instrs_clase',1,'p_instrs_clase_corte','gramatica.py',266),
  ('instr -> declaracion PTCOMA','instr',2,'p_instr','gramatica.py',271),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',278),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',284),
  ('instruccion -> print_inst PTCOMA','instruccion',2,'p_instruccion','gramatica.py',289),
  ('instruccion -> declaracion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',290),
  ('instruccion -> declaracion_objeto PTCOMA','instruccion',2,'p_instruccion','gramatica.py',291),
  ('instruccion -> declaracion_arreglo PTCOMA','instruccion',2,'p_instruccion','gramatica.py',292),
  ('instruccion -> llamada PTCOMA','instruccion',2,'p_instruccion','gramatica.py',293),
  ('instruccion -> return_inst PTCOMA','instruccion',2,'p_instruccion','gramatica.py',294),
  ('instruccion -> if_instr','instruccion',1,'p_instruccion','gramatica.py',295),
  ('declaracion -> tipo_dato ID IGUAL expresion','declaracion',4,'p_declaracion','gramatica.py',301),
  ('declaracion -> tipo_dato ID','declaracion',2,'p_declaracion','gramatica.py',302),
  ('declaracion_arreglo -> tipo_dato niveles ID IGUAL expresion','declaracion_arreglo',5,'p_declaracion_arreglo','gramatica.py',313),
  ('niveles -> niveles nivel','niveles',2,'p_niveles','gramatica.py',318),
  ('niveles -> nivel','niveles',1,'p_niveles_corte','gramatica.py',323),
  ('nivel -> CORIZQ CORDER','nivel',2,'p_nivel','gramatica.py',327),
  ('declaracion_objeto -> ID ID IGUAL expresion','declaracion_objeto',4,'p_declaracion_objeto','gramatica.py',332),
  ('print_inst -> PRINT PIZQ expresion PDER','print_inst',4,'p_print','gramatica.py',339),
  ('llamada -> ID PIZQ PDER','llamada',3,'p_llamada','gramatica.py',346),
  ('llamada -> ID PIZQ lista_expresiones PDER','llamada',4,'p_llamada','gramatica.py',347),
  ('return_inst -> RETURN_W','return_inst',1,'p_return_instr','gramatica.py',357),
  ('return_inst -> RETURN_W expresion','return_inst',2,'p_return_instr','gramatica.py',358),
  ('if_instr -> IF_W PIZQ expresion PDER bloque','if_instr',5,'p_if_instr','gramatica.py',368),
  ('if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque','if_instr',7,'p_if_instr','gramatica.py',369),
  ('if_instr -> IF_W PIZQ expresion PDER bloque listaelseif','if_instr',6,'p_if_instr','gramatica.py',370),
  ('if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque','if_instr',8,'p_if_instr','gramatica.py',371),
  ('listaelseif -> listaelseif else_if','listaelseif',2,'p_lista_else_if','gramatica.py',384),
  ('listaelseif -> else_if','listaelseif',1,'p_lista_else_if_corte','gramatica.py',390),
  ('else_if -> ELSE_W IF_W PIZQ expresion PDER bloque','else_if',6,'p_else_if','gramatica.py',395),
  ('lista_expresiones -> lista_expresiones COMA expresion','lista_expresiones',3,'p_lista_expresiones','gramatica.py',401),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_lista_expresiones_corte','gramatica.py',407),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica','gramatica.py',414),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica','gramatica.py',415),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_logica','gramatica.py',416),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_relacional','gramatica.py',425),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_relacional','gramatica.py',426),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',427),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',428),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_relacional','gramatica.py',429),
  ('expresion -> expresion IGUALIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',430),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_aritmetica','gramatica.py',447),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',448),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',449),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',450),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',451),
  ('expresion -> PIZQ expresion PDER','expresion',3,'p_expresion_aritmetica','gramatica.py',452),
  ('expresion -> ENTERO','expresion',1,'p_expresion_primitiva','gramatica.py',466),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_primitiva','gramatica.py',467),
  ('expresion -> ID','expresion',1,'p_expresion_primitiva','gramatica.py',468),
  ('expresion -> CADENA','expresion',1,'p_expresion_primitiva','gramatica.py',469),
  ('expresion -> TRUE','expresion',1,'p_expresion_primitiva','gramatica.py',470),
  ('expresion -> FALSE','expresion',1,'p_expresion_primitiva','gramatica.py',471),
  ('expresion -> llamada','expresion',1,'p_otras_expresiones','gramatica.py',488),
  ('expresion -> acceso_objeto_expresion','expresion',1,'p_otras_expresiones','gramatica.py',489),
  ('expresion -> acceso_array_expresion','expresion',1,'p_otras_expresiones','gramatica.py',490),
  ('expresion -> instancia_objeto','expresion',1,'p_otras_expresiones','gramatica.py',491),
  ('expresion -> array_data','expresion',1,'p_otras_expresiones','gramatica.py',492),
  ('expresion -> array_instancia','expresion',1,'p_otras_expresiones','gramatica.py',493),
  ('expresion -> if_instr','expresion',1,'p_otras_expresiones','gramatica.py',494),
  ('array_data -> CORIZQ lista_expresiones CORDER','array_data',3,'p_array_data','gramatica.py',500),
  ('array_instancia -> NEW tipo_dato dimensiones','array_instancia',3,'p_array_instancia','gramatica.py',505),
  ('dimensiones -> dimensiones dimension','dimensiones',2,'p_dimensiones','gramatica.py',509),
  ('dimensiones -> dimension','dimensiones',1,'p_dimensiones_corte','gramatica.py',515),
  ('dimension -> CORIZQ expresion CORDER','dimension',3,'p_dimension','gramatica.py',519),
  ('instancia_objeto -> NEW ID PIZQ PDER','instancia_objeto',4,'p_instancia_objeto','gramatica.py',524),
  ('instancia_objeto -> NEW ID PIZQ lista_expresiones PDER','instancia_objeto',5,'p_instancia_objeto','gramatica.py',525),
  ('acceso_objeto_expresion -> acceso_objeto','acceso_objeto_expresion',1,'p_acceso_objeto_expresion','gramatica.py',535),
  ('acceso_objeto -> acceso_objeto PUNTO expresion','acceso_objeto',3,'p_acceso_objeto','gramatica.py',540),
  ('acceso_objeto -> expresion','acceso_objeto',1,'p_acceso_objeto_cort','gramatica.py',546),
  ('acceso_array_expresion -> ID dimensiones','acceso_array_expresion',2,'p_acceso_array','gramatica.py',551),
  ('tipo_funcion -> INT','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',562),
  ('tipo_funcion -> STRING_TYPE','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',563),
  ('tipo_funcion -> BOOLEAN','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',564),
  ('tipo_funcion -> VOID','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',565),
  ('tipo_funcion -> FLOAT','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',566),
  ('tipo_dato -> INT','tipo_dato',1,'p_tipo_dato','gramatica.py',581),
  ('tipo_dato -> STRING_TYPE','tipo_dato',1,'p_tipo_dato','gramatica.py',582),
  ('tipo_dato -> BOOLEAN','tipo_dato',1,'p_tipo_dato','gramatica.py',583),
  ('tipo_dato -> FLOAT','tipo_dato',1,'p_tipo_dato','gramatica.py',584),
]
