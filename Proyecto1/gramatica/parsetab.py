
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocMAYORMENORIGUALMENORMAYORIGUALIGUALIGUALDIFERENTEleftMASMENOSleftMULTIPLICACIONDIVISIONrightNOTUMENOSAND BOOLEAN CADENA CLASS COMA CORDER CORIZQ DECIMAL DIFERENTE DIVISION DOBLEPT ELSE_W ENTERO FALSE FLOAT ID IF_W IGUAL IGUALIGUAL INT LLAVEDER LLAVEIZQ MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MULTIPLICACION NEW NOT OR PDER PIZQ PRINT PTCOMA PUNTO RETURN_W STRING_TYPE TRUE VOIDinit : clases_funciones  clases_funciones : clases_funciones clase_funcion  clases_funciones : clase_funcion  clase_funcion : clase\n                      | funcion  clase : CLASS ID bloqueClase bloqueClase : LLAVEIZQ instrs_clase LLAVEDER\n                    | LLAVEIZQ  LLAVEDERfuncion : tipo_funcion ID PIZQ  PDER bloque\n               | tipo_funcion ID PIZQ lista_parametros PDER bloque lista_parametros : lista_parametros COMA parametro lista_parametros : parametro parametro : tipo_dato ID\n                  | MULTIPLICACION tipo_dato IDbloque  : LLAVEIZQ  LLAVEDER\n                | LLAVEIZQ  instrucciones LLAVEDER  instrs_clase : instrs_clase instr  instrs_clase :  instr  instr : declaracion PTCOMAinstrucciones : instrucciones instruccion instrucciones : instruccion instruccion : print_inst PTCOMA\n                   | declaracion PTCOMA\n                   | declaracion_objeto PTCOMA\n                   | declaracion_arreglo PTCOMA\n                   | llamada PTCOMA\n                   | return_inst PTCOMA\n                   | if_instr\n                   | p_error_sintaxis  p_error_sintaxis : error PTCOMA  declaracion : tipo_dato ID IGUAL expresion\n                    | tipo_dato ID  declaracion_arreglo : tipo_dato niveles ID IGUAL expresion niveles : niveles nivel  niveles : nivel  nivel : CORIZQ CORDER  declaracion_objeto : ID ID IGUAL expresion print_inst : PRINT PIZQ expresion PDER llamada : ID PIZQ PDER\n                | ID PIZQ lista_expresiones PDER return_inst : RETURN_W\n                    | RETURN_W expresion if_instr :  IF_W PIZQ expresion PDER bloque\n                 |  IF_W PIZQ expresion PDER bloque ELSE_W bloque\n                 |  IF_W PIZQ expresion PDER bloque  listaelseif\n                 |  IF_W PIZQ expresion PDER bloque  listaelseif ELSE_W bloque listaelseif : listaelseif else_if   listaelseif : else_if else_if : ELSE_W IF_W PIZQ expresion PDER bloque lista_expresiones : lista_expresiones COMA  expresion lista_expresiones : expresionexpresion : expresion OR expresion\n                 | expresion AND expresion\n                 | NOT expresion %prec NOTexpresion : expresion MENOR expresion\n                 | expresion MAYOR expresion\n                 | expresion MAYORIGUAL expresion\n                 | expresion MENORIGUAL expresion\n                 | expresion DIFERENTE expresion\n                 | expresion IGUALIGUAL expresionexpresion : MENOS expresion %prec UMENOS\n                 | expresion MAS expresion\n                 | expresion MENOS expresion\n                 | expresion MULTIPLICACION expresion\n                 | expresion DIVISION expresion\n                 | PIZQ expresion PDERexpresion : ENTERO\n                    | DECIMAL\n                    | ID\n                    | CADENA\n                    | TRUE\n                    | FALSE expresion : llamada\n                  | acceso_objeto_expresion\n                  | acceso_array_expresion\n                  | instancia_objeto\n                  | array_data\n                  | array_instancia\n                  | if_instr array_data : CORIZQ lista_expresiones CORDER array_instancia : NEW tipo_dato dimensiones dimensiones : dimensiones dimension dimensiones : dimension dimension : CORIZQ expresion CORDER instancia_objeto : NEW ID PIZQ PDER\n                         | NEW ID PIZQ lista_expresiones PDER acceso_objeto_expresion : acceso_objeto acceso_objeto : acceso_objeto  PUNTO expresion acceso_objeto : expresionacceso_array_expresion : ID dimensiones tipo_funcion : INT\n                     | STRING_TYPE\n                     | BOOLEAN\n                     | VOID\n                     | FLOAT tipo_dato : INT\n                     | STRING_TYPE\n                     | BOOLEAN\n                     | FLOAT'
    
_lr_action_items = {'CLASS':([0,2,3,4,5,13,16,20,33,37,44,61,84,],[6,6,-3,-4,-5,-2,-6,-8,-7,-9,-15,-10,-16,]),'INT':([0,2,3,4,5,13,16,17,18,19,20,21,32,33,34,35,37,38,40,44,45,46,53,54,61,82,84,85,86,87,88,89,90,91,100,162,165,166,168,170,172,175,],[8,8,-3,-4,-5,-2,-6,24,24,24,-8,-18,24,-7,-17,-19,-9,24,24,-15,24,-21,-28,-29,-10,24,-16,-20,-22,-23,-24,-25,-26,-27,-30,-43,-45,-48,-44,-47,-46,-49,]),'STRING_TYPE':([0,2,3,4,5,13,16,17,18,19,20,21,32,33,34,35,37,38,40,44,45,46,53,54,61,82,84,85,86,87,88,89,90,91,100,162,165,166,168,170,172,175,],[9,9,-3,-4,-5,-2,-6,25,25,25,-8,-18,25,-7,-17,-19,-9,25,25,-15,25,-21,-28,-29,-10,25,-16,-20,-22,-23,-24,-25,-26,-27,-30,-43,-45,-48,-44,-47,-46,-49,]),'BOOLEAN':([0,2,3,4,5,13,16,17,18,19,20,21,32,33,34,35,37,38,40,44,45,46,53,54,61,82,84,85,86,87,88,89,90,91,100,162,165,166,168,170,172,175,],[10,10,-3,-4,-5,-2,-6,26,26,26,-8,-18,26,-7,-17,-19,-9,26,26,-15,26,-21,-28,-29,-10,26,-16,-20,-22,-23,-24,-25,-26,-27,-30,-43,-45,-48,-44,-47,-46,-49,]),'VOID':([0,2,3,4,5,13,16,20,33,37,44,61,84,],[11,11,-3,-4,-5,-2,-6,-8,-7,-9,-15,-10,-16,]),'FLOAT':([0,2,3,4,5,13,16,17,18,19,20,21,32,33,34,35,37,38,40,44,45,46,53,54,61,82,84,85,86,87,88,89,90,91,100,162,165,166,168,170,172,175,],[12,12,-3,-4,-5,-2,-6,27,27,27,-8,-18,27,-7,-17,-19,-9,27,27,-15,27,-21,-28,-29,-10,27,-16,-20,-22,-23,-24,-25,-26,-27,-30,-43,-45,-48,-44,-47,-46,-49,]),'$end':([1,2,3,4,5,13,16,20,33,37,44,61,84,],[0,-1,-3,-4,-5,-2,-6,-8,-7,-9,-15,-10,-16,]),'ID':([6,7,8,9,10,11,12,23,24,25,26,27,31,38,42,43,44,45,46,53,54,56,57,58,66,67,68,82,83,84,85,86,87,88,89,90,91,92,93,94,97,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,126,127,128,148,151,153,162,165,166,168,170,171,172,175,],[14,15,-91,-92,-93,-94,-95,36,-96,-97,-98,-99,41,57,63,64,-15,57,-21,-28,-29,36,96,64,64,64,64,120,64,-16,-20,-22,-23,-24,-25,-26,-27,64,125,-35,64,64,-30,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-34,-36,64,64,64,64,-43,-45,-48,-44,-47,64,-46,-49,]),'LLAVEIZQ':([14,28,39,156,164,169,174,],[17,38,38,38,38,38,38,]),'PIZQ':([15,43,55,57,58,59,64,66,67,68,83,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,119,120,128,148,151,153,167,171,],[18,68,92,97,68,99,97,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,148,68,68,68,68,171,68,]),'LLAVEDER':([17,19,21,34,35,38,44,45,46,53,54,84,85,86,87,88,89,90,91,100,162,165,166,168,170,172,175,],[20,33,-18,-17,-19,44,-15,84,-21,-28,-29,-16,-20,-22,-23,-24,-25,-26,-27,-30,-43,-45,-48,-44,-47,-46,-49,]),'PDER':([18,29,30,41,44,62,63,64,69,70,71,72,73,74,75,76,77,78,79,80,81,84,97,101,102,116,117,118,123,124,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,157,158,159,160,162,163,165,166,168,170,172,173,175,],[28,39,-12,-13,-15,-11,-14,-69,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-87,-16,129,-90,-83,-54,-61,146,-51,152,-39,155,156,-82,-52,-53,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,-66,-88,158,-81,-80,-40,-84,-85,163,-50,-43,-86,-45,-48,-44,-47,-46,174,-49,]),'MULTIPLICACION':([18,40,44,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,84,98,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[32,32,-15,-69,114,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-87,-16,114,-90,-83,-54,-61,114,114,114,-39,114,-82,114,114,114,114,114,114,114,114,114,114,114,-64,-65,-66,114,-81,-80,114,-40,-84,-85,114,114,-43,-86,-45,-48,-44,-47,-46,114,-49,]),'PTCOMA':([22,36,44,47,48,49,50,51,52,58,60,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,84,98,101,102,116,117,129,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,154,155,157,158,161,162,163,165,166,168,170,172,175,],[35,-32,-15,86,87,88,89,90,91,-41,100,-69,-31,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-87,-16,-42,-90,-83,-54,-61,-39,-82,-52,-53,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,-66,-88,-81,-80,-38,-37,-40,-84,-85,-33,-43,-86,-45,-48,-44,-47,-46,-49,]),'CORIZQ':([24,25,26,27,43,56,58,64,66,67,68,83,92,93,94,97,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,121,126,127,128,132,148,149,151,153,157,171,],[-96,-97,-98,-99,83,95,83,103,83,83,83,83,83,95,-35,83,83,103,-83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,103,-34,-36,83,-82,83,103,83,83,-84,83,]),'COMA':([29,30,41,44,62,63,64,69,70,71,72,73,74,75,76,77,78,79,80,81,84,101,102,116,117,122,123,129,130,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,155,157,158,159,160,162,163,165,166,168,170,172,175,],[40,-12,-13,-15,-11,-14,-69,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-87,-16,-90,-83,-54,-61,151,-51,-39,151,-82,-52,-53,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,-66,-88,-81,-80,-40,-84,-85,151,-50,-43,-86,-45,-48,-44,-47,-46,-49,]),'IGUAL':([36,96,125,],[43,128,153,]),'PRINT':([38,44,45,46,53,54,84,85,86,87,88,89,90,91,100,162,165,166,168,170,172,175,],[55,-15,55,-21,-28,-29,-16,-20,-22,-23,-24,-25,-26,-27,-30,-43,-45,-48,-44,-47,-46,-49,]),'RETURN_W':([38,44,45,46,53,54,84,85,86,87,88,89,90,91,100,162,165,166,168,170,172,175,],[58,-15,58,-21,-28,-29,-16,-20,-22,-23,-24,-25,-26,-27,-30,-43,-45,-48,-44,-47,-46,-49,]),'IF_W':([38,43,44,45,46,53,54,58,66,67,68,83,84,85,86,87,88,89,90,91,92,97,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,162,164,165,166,168,169,170,171,172,175,],[59,59,-15,59,-21,-28,-29,59,59,59,59,59,-16,-20,-22,-23,-24,-25,-26,-27,59,59,59,-30,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-43,167,-45,-48,-44,167,-47,59,-46,-49,]),'error':([38,44,45,46,53,54,84,85,86,87,88,89,90,91,100,162,165,166,168,170,172,175,],[60,-15,60,-21,-28,-29,-16,-20,-22,-23,-24,-25,-26,-27,-30,-43,-45,-48,-44,-47,-46,-49,]),'NOT':([43,58,66,67,68,83,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'MENOS':([43,44,58,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,92,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,123,124,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,157,158,160,161,162,163,165,166,168,170,171,172,173,175,],[67,-15,67,-69,113,67,67,67,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-87,67,-16,67,67,113,67,-90,-83,67,67,67,67,67,67,67,67,67,67,67,67,67,-54,-61,113,67,113,113,67,-39,113,-82,113,113,113,113,113,113,113,113,113,-62,-63,-64,-65,-66,113,67,-81,-80,67,67,113,-40,-84,-85,113,113,-43,-86,-45,-48,-44,-47,67,-46,113,-49,]),'ENTERO':([43,58,66,67,68,83,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'DECIMAL':([43,58,66,67,68,83,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'CADENA':([43,58,66,67,68,83,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'TRUE':([43,58,66,67,68,83,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'FALSE':([43,58,66,67,68,83,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'NEW':([43,58,66,67,68,83,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'ELSE_W':([44,84,162,165,166,170,175,],[-15,-16,164,169,-48,-47,-49,]),'OR':([44,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,84,98,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-15,-69,104,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-87,-16,104,-90,-83,-54,-61,104,104,104,-39,104,-82,104,-52,-53,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,-66,104,-81,-80,104,-40,-84,-85,104,104,-43,-86,-45,-48,-44,-47,-46,104,-49,]),'AND':([44,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,84,98,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-15,-69,105,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-87,-16,105,-90,-83,-54,-61,105,105,105,-39,105,-82,105,105,-53,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,-66,105,-81,-80,105,-40,-84,-85,105,105,-43,-86,-45,-48,-44,-47,-46,105,-49,]),'MENOR':([44,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,84,98,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-15,-69,106,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-87,-16,106,-90,-83,-54,-61,106,106,106,-39,106,-82,106,106,106,-89,-89,-89,-89,-89,-89,-62,-63,-64,-65,-66,106,-81,-80,106,-40,-84,-85,106,106,-43,-86,-45,-48,-44,-47,-46,106,-49,]),'MAYOR':([44,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,84,98,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-15,-69,107,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-87,-16,107,-90,-83,-54,-61,107,107,107,-39,107,-82,107,107,107,-89,-89,-89,-89,-89,-89,-62,-63,-64,-65,-66,107,-81,-80,107,-40,-84,-85,107,107,-43,-86,-45,-48,-44,-47,-46,107,-49,]),'MAYORIGUAL':([44,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,84,98,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-15,-69,108,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-87,-16,108,-90,-83,-54,-61,108,108,108,-39,108,-82,108,108,108,-89,-89,-89,-89,-89,-89,-62,-63,-64,-65,-66,108,-81,-80,108,-40,-84,-85,108,108,-43,-86,-45,-48,-44,-47,-46,108,-49,]),'MENORIGUAL':([44,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,84,98,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-15,-69,109,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-87,-16,109,-90,-83,-54,-61,109,109,109,-39,109,-82,109,109,109,-89,-89,-89,-89,-89,-89,-62,-63,-64,-65,-66,109,-81,-80,109,-40,-84,-85,109,109,-43,-86,-45,-48,-44,-47,-46,109,-49,]),'DIFERENTE':([44,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,84,98,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-15,-69,110,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-87,-16,110,-90,-83,-54,-61,110,110,110,-39,110,-82,110,110,110,-89,-89,-89,-89,-89,-89,-62,-63,-64,-65,-66,110,-81,-80,110,-40,-84,-85,110,110,-43,-86,-45,-48,-44,-47,-46,110,-49,]),'IGUALIGUAL':([44,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,84,98,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-15,-69,111,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-87,-16,111,-90,-83,-54,-61,111,111,111,-39,111,-82,111,111,111,-89,-89,-89,-89,-89,-89,-62,-63,-64,-65,-66,111,-81,-80,111,-40,-84,-85,111,111,-43,-86,-45,-48,-44,-47,-46,111,-49,]),'MAS':([44,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,84,98,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-15,-69,112,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-87,-16,112,-90,-83,-54,-61,112,112,112,-39,112,-82,112,112,112,112,112,112,112,112,112,-62,-63,-64,-65,-66,112,-81,-80,112,-40,-84,-85,112,112,-43,-86,-45,-48,-44,-47,-46,112,-49,]),'DIVISION':([44,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,84,98,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-15,-69,115,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-87,-16,115,-90,-83,-54,-61,115,115,115,-39,115,-82,115,115,115,115,115,115,115,115,115,115,115,-64,-65,-66,115,-81,-80,115,-40,-84,-85,115,115,-43,-86,-45,-48,-44,-47,-46,115,-49,]),'PUNTO':([44,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,84,98,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-15,-69,-89,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,119,-16,-89,-90,-83,-54,-61,-89,-89,-89,-39,-89,-82,-89,-52,-53,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,-66,-88,-81,-80,-89,-40,-84,-85,-89,-89,-43,-86,-45,-48,-44,-47,-46,-89,-49,]),'CORDER':([44,64,69,70,71,72,73,74,75,76,77,78,79,80,81,84,95,101,102,116,117,122,123,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,155,157,158,160,162,163,165,166,168,170,172,175,],[-15,-69,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-87,-16,127,-90,-83,-54,-61,150,-51,-39,-82,157,-52,-53,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,-66,-88,-81,-80,-40,-84,-85,-50,-43,-86,-45,-48,-44,-47,-46,-49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'clases_funciones':([0,],[2,]),'clase_funcion':([0,2,],[3,13,]),'clase':([0,2,],[4,4,]),'funcion':([0,2,],[5,5,]),'tipo_funcion':([0,2,],[7,7,]),'bloqueClase':([14,],[16,]),'instrs_clase':([17,],[19,]),'instr':([17,19,],[21,34,]),'declaracion':([17,19,38,45,],[22,22,48,48,]),'tipo_dato':([17,18,19,32,38,40,45,82,],[23,31,23,42,56,31,56,121,]),'lista_parametros':([18,],[29,]),'parametro':([18,40,],[30,62,]),'bloque':([28,39,156,164,169,174,],[37,61,162,168,172,175,]),'instrucciones':([38,],[45,]),'instruccion':([38,45,],[46,85,]),'print_inst':([38,45,],[47,47,]),'declaracion_objeto':([38,45,],[49,49,]),'declaracion_arreglo':([38,45,],[50,50,]),'llamada':([38,43,45,58,66,67,68,83,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[51,74,51,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'return_inst':([38,45,],[52,52,]),'if_instr':([38,43,45,58,66,67,68,83,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[53,80,53,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'p_error_sintaxis':([38,45,],[54,54,]),'expresion':([43,58,66,67,68,83,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[65,98,116,117,118,123,124,123,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,154,123,160,161,173,]),'acceso_objeto_expresion':([43,58,66,67,68,83,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'acceso_array_expresion':([43,58,66,67,68,83,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'instancia_objeto':([43,58,66,67,68,83,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'array_data':([43,58,66,67,68,83,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'array_instancia':([43,58,66,67,68,83,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'acceso_objeto':([43,58,66,67,68,83,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'niveles':([56,],[93,]),'nivel':([56,93,],[94,126,]),'dimensiones':([64,121,],[101,149,]),'dimension':([64,101,121,149,],[102,132,102,132,]),'lista_expresiones':([83,97,148,],[122,130,159,]),'listaelseif':([162,],[165,]),'else_if':([162,165,],[166,170,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> clases_funciones','init',1,'p_init','gramatica.py',180),
  ('clases_funciones -> clases_funciones clase_funcion','clases_funciones',2,'p_clases_funciones','gramatica.py',186),
  ('clases_funciones -> clase_funcion','clases_funciones',1,'p_clases_funciones_corte','gramatica.py',192),
  ('clase_funcion -> clase','clase_funcion',1,'p_clase_funcion','gramatica.py',197),
  ('clase_funcion -> funcion','clase_funcion',1,'p_clase_funcion','gramatica.py',198),
  ('clase -> CLASS ID bloqueClase','clase',3,'p_clase','gramatica.py',204),
  ('bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER','bloqueClase',3,'p_bloque_clase','gramatica.py',209),
  ('bloqueClase -> LLAVEIZQ LLAVEDER','bloqueClase',2,'p_bloque_clase','gramatica.py',210),
  ('funcion -> tipo_funcion ID PIZQ PDER bloque','funcion',5,'p_funcion','gramatica.py',218),
  ('funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque','funcion',6,'p_funcion','gramatica.py',219),
  ('lista_parametros -> lista_parametros COMA parametro','lista_parametros',3,'p_lista_parametros','gramatica.py',230),
  ('lista_parametros -> parametro','lista_parametros',1,'p_lista_parametros_corte','gramatica.py',236),
  ('parametro -> tipo_dato ID','parametro',2,'p_parametro','gramatica.py',241),
  ('parametro -> MULTIPLICACION tipo_dato ID','parametro',3,'p_parametro','gramatica.py',242),
  ('bloque -> LLAVEIZQ LLAVEDER','bloque',2,'p_bloque','gramatica.py',253),
  ('bloque -> LLAVEIZQ instrucciones LLAVEDER','bloque',3,'p_bloque','gramatica.py',254),
  ('instrs_clase -> instrs_clase instr','instrs_clase',2,'p_instrs_clase','gramatica.py',264),
  ('instrs_clase -> instr','instrs_clase',1,'p_instrs_clase_corte','gramatica.py',270),
  ('instr -> declaracion PTCOMA','instr',2,'p_instr','gramatica.py',275),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',282),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',288),
  ('instruccion -> print_inst PTCOMA','instruccion',2,'p_instruccion','gramatica.py',293),
  ('instruccion -> declaracion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',294),
  ('instruccion -> declaracion_objeto PTCOMA','instruccion',2,'p_instruccion','gramatica.py',295),
  ('instruccion -> declaracion_arreglo PTCOMA','instruccion',2,'p_instruccion','gramatica.py',296),
  ('instruccion -> llamada PTCOMA','instruccion',2,'p_instruccion','gramatica.py',297),
  ('instruccion -> return_inst PTCOMA','instruccion',2,'p_instruccion','gramatica.py',298),
  ('instruccion -> if_instr','instruccion',1,'p_instruccion','gramatica.py',299),
  ('instruccion -> p_error_sintaxis','instruccion',1,'p_instruccion','gramatica.py',300),
  ('p_error_sintaxis -> error PTCOMA','p_error_sintaxis',2,'p_error_sintaxis','gramatica.py',305),
  ('declaracion -> tipo_dato ID IGUAL expresion','declaracion',4,'p_declaracion','gramatica.py',311),
  ('declaracion -> tipo_dato ID','declaracion',2,'p_declaracion','gramatica.py',312),
  ('declaracion_arreglo -> tipo_dato niveles ID IGUAL expresion','declaracion_arreglo',5,'p_declaracion_arreglo','gramatica.py',323),
  ('niveles -> niveles nivel','niveles',2,'p_niveles','gramatica.py',328),
  ('niveles -> nivel','niveles',1,'p_niveles_corte','gramatica.py',333),
  ('nivel -> CORIZQ CORDER','nivel',2,'p_nivel','gramatica.py',337),
  ('declaracion_objeto -> ID ID IGUAL expresion','declaracion_objeto',4,'p_declaracion_objeto','gramatica.py',342),
  ('print_inst -> PRINT PIZQ expresion PDER','print_inst',4,'p_print','gramatica.py',349),
  ('llamada -> ID PIZQ PDER','llamada',3,'p_llamada','gramatica.py',356),
  ('llamada -> ID PIZQ lista_expresiones PDER','llamada',4,'p_llamada','gramatica.py',357),
  ('return_inst -> RETURN_W','return_inst',1,'p_return_instr','gramatica.py',367),
  ('return_inst -> RETURN_W expresion','return_inst',2,'p_return_instr','gramatica.py',368),
  ('if_instr -> IF_W PIZQ expresion PDER bloque','if_instr',5,'p_if_instr','gramatica.py',378),
  ('if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque','if_instr',7,'p_if_instr','gramatica.py',379),
  ('if_instr -> IF_W PIZQ expresion PDER bloque listaelseif','if_instr',6,'p_if_instr','gramatica.py',380),
  ('if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque','if_instr',8,'p_if_instr','gramatica.py',381),
  ('listaelseif -> listaelseif else_if','listaelseif',2,'p_lista_else_if','gramatica.py',394),
  ('listaelseif -> else_if','listaelseif',1,'p_lista_else_if_corte','gramatica.py',400),
  ('else_if -> ELSE_W IF_W PIZQ expresion PDER bloque','else_if',6,'p_else_if','gramatica.py',405),
  ('lista_expresiones -> lista_expresiones COMA expresion','lista_expresiones',3,'p_lista_expresiones','gramatica.py',411),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_lista_expresiones_corte','gramatica.py',417),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica','gramatica.py',424),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica','gramatica.py',425),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_logica','gramatica.py',426),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_relacional','gramatica.py',435),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_relacional','gramatica.py',436),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',437),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',438),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_relacional','gramatica.py',439),
  ('expresion -> expresion IGUALIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',440),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_aritmetica','gramatica.py',457),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',458),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',459),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',460),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',461),
  ('expresion -> PIZQ expresion PDER','expresion',3,'p_expresion_aritmetica','gramatica.py',462),
  ('expresion -> ENTERO','expresion',1,'p_expresion_primitiva','gramatica.py',476),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_primitiva','gramatica.py',477),
  ('expresion -> ID','expresion',1,'p_expresion_primitiva','gramatica.py',478),
  ('expresion -> CADENA','expresion',1,'p_expresion_primitiva','gramatica.py',479),
  ('expresion -> TRUE','expresion',1,'p_expresion_primitiva','gramatica.py',480),
  ('expresion -> FALSE','expresion',1,'p_expresion_primitiva','gramatica.py',481),
  ('expresion -> llamada','expresion',1,'p_otras_expresiones','gramatica.py',498),
  ('expresion -> acceso_objeto_expresion','expresion',1,'p_otras_expresiones','gramatica.py',499),
  ('expresion -> acceso_array_expresion','expresion',1,'p_otras_expresiones','gramatica.py',500),
  ('expresion -> instancia_objeto','expresion',1,'p_otras_expresiones','gramatica.py',501),
  ('expresion -> array_data','expresion',1,'p_otras_expresiones','gramatica.py',502),
  ('expresion -> array_instancia','expresion',1,'p_otras_expresiones','gramatica.py',503),
  ('expresion -> if_instr','expresion',1,'p_otras_expresiones','gramatica.py',504),
  ('array_data -> CORIZQ lista_expresiones CORDER','array_data',3,'p_array_data','gramatica.py',510),
  ('array_instancia -> NEW tipo_dato dimensiones','array_instancia',3,'p_array_instancia','gramatica.py',515),
  ('dimensiones -> dimensiones dimension','dimensiones',2,'p_dimensiones','gramatica.py',519),
  ('dimensiones -> dimension','dimensiones',1,'p_dimensiones_corte','gramatica.py',525),
  ('dimension -> CORIZQ expresion CORDER','dimension',3,'p_dimension','gramatica.py',529),
  ('instancia_objeto -> NEW ID PIZQ PDER','instancia_objeto',4,'p_instancia_objeto','gramatica.py',534),
  ('instancia_objeto -> NEW ID PIZQ lista_expresiones PDER','instancia_objeto',5,'p_instancia_objeto','gramatica.py',535),
  ('acceso_objeto_expresion -> acceso_objeto','acceso_objeto_expresion',1,'p_acceso_objeto_expresion','gramatica.py',545),
  ('acceso_objeto -> acceso_objeto PUNTO expresion','acceso_objeto',3,'p_acceso_objeto','gramatica.py',550),
  ('acceso_objeto -> expresion','acceso_objeto',1,'p_acceso_objeto_cort','gramatica.py',556),
  ('acceso_array_expresion -> ID dimensiones','acceso_array_expresion',2,'p_acceso_array','gramatica.py',561),
  ('tipo_funcion -> INT','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',572),
  ('tipo_funcion -> STRING_TYPE','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',573),
  ('tipo_funcion -> BOOLEAN','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',574),
  ('tipo_funcion -> VOID','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',575),
  ('tipo_funcion -> FLOAT','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',576),
  ('tipo_dato -> INT','tipo_dato',1,'p_tipo_dato','gramatica.py',591),
  ('tipo_dato -> STRING_TYPE','tipo_dato',1,'p_tipo_dato','gramatica.py',592),
  ('tipo_dato -> BOOLEAN','tipo_dato',1,'p_tipo_dato','gramatica.py',593),
  ('tipo_dato -> FLOAT','tipo_dato',1,'p_tipo_dato','gramatica.py',594),
]
