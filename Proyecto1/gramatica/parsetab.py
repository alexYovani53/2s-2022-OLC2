
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocMAYORMENORIGUALMENORMAYORIGUALIGUALIGUALDIFERENTEleftMASMENOSleftMULTIPLICACIONDIVISIONrightNOTUMENOSAND BOOLEAN CADENA CLASS COMA CORDER CORIZQ DECIMAL DIFERENTE DIVISION DOBLEPT ELSE_W ENTERO FALSE FLOAT ID IF_W IGUAL IGUALIGUAL INT LLAVEDER LLAVEIZQ MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MULTIPLICACION NEW NOT OR PDER PIZQ PRINT PTCOMA PUNTO RETURN_W STRING_TYPE TRUE VOIDinit : clases_funciones  clases_funciones : clases_funciones clase_funcion  clases_funciones : clase_funcion  clase_funcion : clase\n                      | funcion clase_funcion : error LLAVEDER   clase : CLASS ID bloqueClase bloqueClase : LLAVEIZQ instrs_clase LLAVEDER\n                    | LLAVEIZQ  LLAVEDERfuncion : tipo_funcion ID PIZQ  PDER bloque\n               | tipo_funcion ID PIZQ lista_parametros PDER bloque lista_parametros : lista_parametros COMA parametro lista_parametros : parametro parametro : tipo_dato ID\n                  | MULTIPLICACION tipo_dato IDbloque  : LLAVEIZQ  LLAVEDER\n                | LLAVEIZQ  instrucciones LLAVEDER  instrs_clase : instrs_clase instr  instrs_clase :  instr  instr : declaracion PTCOMAinstrucciones : instrucciones instruccion instrucciones : instruccion instruccion : print_inst PTCOMA\n                   | declaracion PTCOMA\n                   | declaracion_objeto PTCOMA\n                   | declaracion_arreglo PTCOMA\n                   | llamada PTCOMA\n                   | return_inst PTCOMA\n                   | if_instr instruccion : error PTCOMA  declaracion : tipo_dato ID IGUAL expresion\n                    | tipo_dato ID  declaracion_arreglo : tipo_dato niveles ID IGUAL expresion niveles : niveles nivel  niveles : nivel  nivel : CORIZQ CORDER  declaracion_objeto : ID ID IGUAL expresion print_inst : PRINT PIZQ expresion PDER llamada : ID PIZQ PDER\n                | ID PIZQ lista_expresiones PDER return_inst : RETURN_W\n                    | RETURN_W expresion if_instr :  IF_W PIZQ expresion PDER bloque\n                 |  IF_W PIZQ expresion PDER bloque ELSE_W bloque\n                 |  IF_W PIZQ expresion PDER bloque  listaelseif\n                 |  IF_W PIZQ expresion PDER bloque  listaelseif ELSE_W bloque listaelseif : listaelseif else_if   listaelseif : else_if else_if : ELSE_W IF_W PIZQ expresion PDER bloque lista_expresiones : lista_expresiones COMA  expresion lista_expresiones : expresionexpresion : expresion OR expresion\n                 | expresion AND expresion\n                 | NOT expresion %prec NOTexpresion : expresion MENOR expresion\n                 | expresion MAYOR expresion\n                 | expresion MAYORIGUAL expresion\n                 | expresion MENORIGUAL expresion\n                 | expresion DIFERENTE expresion\n                 | expresion IGUALIGUAL expresionexpresion : MENOS expresion %prec UMENOS\n                 | expresion MAS expresion\n                 | expresion MENOS expresion\n                 | expresion MULTIPLICACION expresion\n                 | expresion DIVISION expresion\n                 | PIZQ expresion PDERexpresion : ENTERO\n                    | DECIMAL\n                    | ID\n                    | CADENA\n                    | TRUE\n                    | FALSE expresion : llamada\n                  | acceso_objeto_expresion\n                  | acceso_array_expresion\n                  | instancia_objeto\n                  | array_data\n                  | array_instancia\n                  | if_instr array_data : CORIZQ lista_expresiones CORDER array_instancia : NEW tipo_dato dimensiones dimensiones : dimensiones dimension dimensiones : dimension dimension : CORIZQ expresion CORDER instancia_objeto : NEW ID PIZQ PDER\n                         | NEW ID PIZQ lista_expresiones PDER acceso_objeto_expresion : acceso_objeto_expresion  PUNTO expresion acceso_objeto_expresion : expresionacceso_array_expresion : ID dimensiones tipo_funcion : INT\n                     | STRING_TYPE\n                     | BOOLEAN\n                     | VOID\n                     | FLOAT tipo_dato : INT\n                     | STRING_TYPE\n                     | BOOLEAN\n                     | FLOAT'
    
_lr_action_items = {'error':([0,2,3,4,5,14,15,18,22,35,39,40,46,47,48,55,62,84,85,86,87,88,89,90,91,92,162,165,166,168,170,172,175,],[6,6,-3,-4,-5,-2,-6,-7,-9,-8,-10,56,-16,56,-22,-29,-11,-17,-21,-23,-24,-25,-26,-27,-28,-30,-43,-45,-48,-44,-47,-46,-49,]),'CLASS':([0,2,3,4,5,14,15,18,22,35,39,46,62,84,],[7,7,-3,-4,-5,-2,-6,-7,-9,-8,-10,-16,-11,-17,]),'INT':([0,2,3,4,5,14,15,18,19,20,21,22,23,34,35,36,37,39,40,42,46,47,48,55,62,82,84,85,86,87,88,89,90,91,92,162,165,166,168,170,172,175,],[9,9,-3,-4,-5,-2,-6,-7,26,26,26,-9,-19,26,-8,-18,-20,-10,26,26,-16,26,-22,-29,-11,26,-17,-21,-23,-24,-25,-26,-27,-28,-30,-43,-45,-48,-44,-47,-46,-49,]),'STRING_TYPE':([0,2,3,4,5,14,15,18,19,20,21,22,23,34,35,36,37,39,40,42,46,47,48,55,62,82,84,85,86,87,88,89,90,91,92,162,165,166,168,170,172,175,],[10,10,-3,-4,-5,-2,-6,-7,27,27,27,-9,-19,27,-8,-18,-20,-10,27,27,-16,27,-22,-29,-11,27,-17,-21,-23,-24,-25,-26,-27,-28,-30,-43,-45,-48,-44,-47,-46,-49,]),'BOOLEAN':([0,2,3,4,5,14,15,18,19,20,21,22,23,34,35,36,37,39,40,42,46,47,48,55,62,82,84,85,86,87,88,89,90,91,92,162,165,166,168,170,172,175,],[11,11,-3,-4,-5,-2,-6,-7,28,28,28,-9,-19,28,-8,-18,-20,-10,28,28,-16,28,-22,-29,-11,28,-17,-21,-23,-24,-25,-26,-27,-28,-30,-43,-45,-48,-44,-47,-46,-49,]),'VOID':([0,2,3,4,5,14,15,18,22,35,39,46,62,84,],[12,12,-3,-4,-5,-2,-6,-7,-9,-8,-10,-16,-11,-17,]),'FLOAT':([0,2,3,4,5,14,15,18,19,20,21,22,23,34,35,36,37,39,40,42,46,47,48,55,62,82,84,85,86,87,88,89,90,91,92,162,165,166,168,170,172,175,],[13,13,-3,-4,-5,-2,-6,-7,29,29,29,-9,-19,29,-8,-18,-20,-10,29,29,-16,29,-22,-29,-11,29,-17,-21,-23,-24,-25,-26,-27,-28,-30,-43,-45,-48,-44,-47,-46,-49,]),'$end':([1,2,3,4,5,14,15,18,22,35,39,46,62,84,],[0,-1,-3,-4,-5,-2,-6,-7,-9,-8,-10,-16,-11,-17,]),'LLAVEDER':([6,19,21,23,36,37,40,46,47,48,55,84,85,86,87,88,89,90,91,92,162,165,166,168,170,172,175,],[15,22,35,-19,-18,-20,46,-16,84,-22,-29,-17,-21,-23,-24,-25,-26,-27,-28,-30,-43,-45,-48,-44,-47,-46,-49,]),'ID':([7,8,9,10,11,12,13,25,26,27,28,29,33,40,44,45,46,47,48,55,58,59,60,67,68,69,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,126,127,128,148,151,153,162,165,166,168,170,171,172,175,],[16,17,-90,-91,-92,-93,-94,38,-95,-96,-97,-98,43,59,64,65,-16,59,-22,-29,38,97,65,65,65,65,120,65,-17,-21,-23,-24,-25,-26,-27,-28,-30,65,125,-35,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-34,-36,65,65,65,65,-43,-45,-48,-44,-47,65,-46,-49,]),'LLAVEIZQ':([16,30,41,156,164,169,174,],[19,40,40,40,40,40,40,]),'PIZQ':([17,45,57,59,60,61,65,67,68,69,83,93,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,120,128,148,151,153,167,171,],[20,69,93,98,69,100,98,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,148,69,69,69,69,171,69,]),'PDER':([20,31,32,43,46,63,64,65,70,71,72,73,74,75,76,77,78,79,80,81,84,98,101,102,116,117,118,123,124,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,157,158,159,160,162,163,165,166,168,170,172,173,175,],[30,41,-13,-14,-16,-12,-15,-69,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-17,129,-89,-83,-54,-61,146,-51,152,-39,155,156,-82,-52,-53,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,-66,-87,158,-81,-80,-40,-84,-85,163,-50,-43,-86,-45,-48,-44,-47,-46,174,-49,]),'MULTIPLICACION':([20,42,46,65,66,70,71,72,73,74,75,76,77,78,79,80,81,84,99,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[34,34,-16,-69,114,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-17,114,-89,-83,-54,-61,114,114,114,-39,114,-82,114,114,114,114,114,114,114,114,114,114,114,-64,-65,-66,114,-81,-80,114,-40,-84,-85,114,114,-43,-86,-45,-48,-44,-47,-46,114,-49,]),'PTCOMA':([24,38,46,49,50,51,52,53,54,56,60,65,66,70,71,72,73,74,75,76,77,78,79,80,81,84,99,101,102,116,117,129,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,154,155,157,158,161,162,163,165,166,168,170,172,175,],[37,-32,-16,86,87,88,89,90,91,92,-41,-69,-31,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-17,-42,-89,-83,-54,-61,-39,-82,-52,-53,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,-66,-87,-81,-80,-38,-37,-40,-84,-85,-33,-43,-86,-45,-48,-44,-47,-46,-49,]),'CORIZQ':([26,27,28,29,45,58,60,65,67,68,69,83,93,94,95,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,121,126,127,128,132,148,149,151,153,157,171,],[-95,-96,-97,-98,83,96,83,103,83,83,83,83,83,96,-35,83,83,103,-83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,103,-34,-36,83,-82,83,103,83,83,-84,83,]),'COMA':([31,32,43,46,63,64,65,70,71,72,73,74,75,76,77,78,79,80,81,84,101,102,116,117,122,123,129,130,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,155,157,158,159,160,162,163,165,166,168,170,172,175,],[42,-13,-14,-16,-12,-15,-69,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-17,-89,-83,-54,-61,151,-51,-39,151,-82,-52,-53,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,-66,-87,-81,-80,-40,-84,-85,151,-50,-43,-86,-45,-48,-44,-47,-46,-49,]),'IGUAL':([38,97,125,],[45,128,153,]),'PRINT':([40,46,47,48,55,84,85,86,87,88,89,90,91,92,162,165,166,168,170,172,175,],[57,-16,57,-22,-29,-17,-21,-23,-24,-25,-26,-27,-28,-30,-43,-45,-48,-44,-47,-46,-49,]),'RETURN_W':([40,46,47,48,55,84,85,86,87,88,89,90,91,92,162,165,166,168,170,172,175,],[60,-16,60,-22,-29,-17,-21,-23,-24,-25,-26,-27,-28,-30,-43,-45,-48,-44,-47,-46,-49,]),'IF_W':([40,45,46,47,48,55,60,67,68,69,83,84,85,86,87,88,89,90,91,92,93,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,162,164,165,166,168,169,170,171,172,175,],[61,61,-16,61,-22,-29,61,61,61,61,61,-17,-21,-23,-24,-25,-26,-27,-28,-30,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-43,167,-45,-48,-44,167,-47,61,-46,-49,]),'NOT':([45,60,67,68,69,83,93,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'MENOS':([45,46,60,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,123,124,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,157,158,160,161,162,163,165,166,168,170,171,172,173,175,],[68,-16,68,-69,113,68,68,68,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,68,-17,68,68,113,68,-89,-83,68,68,68,68,68,68,68,68,68,68,68,68,68,-54,-61,113,68,113,113,68,-39,113,-82,113,113,113,113,113,113,113,113,113,-62,-63,-64,-65,-66,113,68,-81,-80,68,68,113,-40,-84,-85,113,113,-43,-86,-45,-48,-44,-47,68,-46,113,-49,]),'ENTERO':([45,60,67,68,69,83,93,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'DECIMAL':([45,60,67,68,69,83,93,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'CADENA':([45,60,67,68,69,83,93,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'TRUE':([45,60,67,68,69,83,93,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'FALSE':([45,60,67,68,69,83,93,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'NEW':([45,60,67,68,69,83,93,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'ELSE_W':([46,84,162,165,166,170,175,],[-16,-17,164,169,-48,-47,-49,]),'OR':([46,65,66,70,71,72,73,74,75,76,77,78,79,80,81,84,99,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-16,-69,104,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-17,104,-89,-83,-54,-61,104,104,104,-39,104,-82,104,-52,-53,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,-66,104,-81,-80,104,-40,-84,-85,104,104,-43,-86,-45,-48,-44,-47,-46,104,-49,]),'AND':([46,65,66,70,71,72,73,74,75,76,77,78,79,80,81,84,99,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-16,-69,105,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-17,105,-89,-83,-54,-61,105,105,105,-39,105,-82,105,105,-53,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,-66,105,-81,-80,105,-40,-84,-85,105,105,-43,-86,-45,-48,-44,-47,-46,105,-49,]),'MENOR':([46,65,66,70,71,72,73,74,75,76,77,78,79,80,81,84,99,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-16,-69,106,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-17,106,-89,-83,-54,-61,106,106,106,-39,106,-82,106,106,106,-88,-88,-88,-88,-88,-88,-62,-63,-64,-65,-66,106,-81,-80,106,-40,-84,-85,106,106,-43,-86,-45,-48,-44,-47,-46,106,-49,]),'MAYOR':([46,65,66,70,71,72,73,74,75,76,77,78,79,80,81,84,99,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-16,-69,107,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-17,107,-89,-83,-54,-61,107,107,107,-39,107,-82,107,107,107,-88,-88,-88,-88,-88,-88,-62,-63,-64,-65,-66,107,-81,-80,107,-40,-84,-85,107,107,-43,-86,-45,-48,-44,-47,-46,107,-49,]),'MAYORIGUAL':([46,65,66,70,71,72,73,74,75,76,77,78,79,80,81,84,99,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-16,-69,108,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-17,108,-89,-83,-54,-61,108,108,108,-39,108,-82,108,108,108,-88,-88,-88,-88,-88,-88,-62,-63,-64,-65,-66,108,-81,-80,108,-40,-84,-85,108,108,-43,-86,-45,-48,-44,-47,-46,108,-49,]),'MENORIGUAL':([46,65,66,70,71,72,73,74,75,76,77,78,79,80,81,84,99,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-16,-69,109,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-17,109,-89,-83,-54,-61,109,109,109,-39,109,-82,109,109,109,-88,-88,-88,-88,-88,-88,-62,-63,-64,-65,-66,109,-81,-80,109,-40,-84,-85,109,109,-43,-86,-45,-48,-44,-47,-46,109,-49,]),'DIFERENTE':([46,65,66,70,71,72,73,74,75,76,77,78,79,80,81,84,99,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-16,-69,110,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-17,110,-89,-83,-54,-61,110,110,110,-39,110,-82,110,110,110,-88,-88,-88,-88,-88,-88,-62,-63,-64,-65,-66,110,-81,-80,110,-40,-84,-85,110,110,-43,-86,-45,-48,-44,-47,-46,110,-49,]),'IGUALIGUAL':([46,65,66,70,71,72,73,74,75,76,77,78,79,80,81,84,99,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-16,-69,111,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-17,111,-89,-83,-54,-61,111,111,111,-39,111,-82,111,111,111,-88,-88,-88,-88,-88,-88,-62,-63,-64,-65,-66,111,-81,-80,111,-40,-84,-85,111,111,-43,-86,-45,-48,-44,-47,-46,111,-49,]),'MAS':([46,65,66,70,71,72,73,74,75,76,77,78,79,80,81,84,99,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-16,-69,112,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-17,112,-89,-83,-54,-61,112,112,112,-39,112,-82,112,112,112,112,112,112,112,112,112,-62,-63,-64,-65,-66,112,-81,-80,112,-40,-84,-85,112,112,-43,-86,-45,-48,-44,-47,-46,112,-49,]),'DIVISION':([46,65,66,70,71,72,73,74,75,76,77,78,79,80,81,84,99,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-16,-69,115,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-17,115,-89,-83,-54,-61,115,115,115,-39,115,-82,115,115,115,115,115,115,115,115,115,115,115,-64,-65,-66,115,-81,-80,115,-40,-84,-85,115,115,-43,-86,-45,-48,-44,-47,-46,115,-49,]),'PUNTO':([46,65,66,70,71,72,73,74,75,76,77,78,79,80,81,84,99,101,102,116,117,118,123,124,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,154,155,157,158,160,161,162,163,165,166,168,170,172,173,175,],[-16,-69,-88,-67,-68,-70,-71,-72,-73,119,-75,-76,-77,-78,-79,-17,-88,-89,-83,-54,-61,-88,-88,-88,-39,-88,-82,-88,-52,-53,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,-66,-87,-81,-80,-88,-40,-84,-85,-88,-88,-43,-86,-45,-48,-44,-47,-46,-88,-49,]),'CORDER':([46,65,70,71,72,73,74,75,76,77,78,79,80,81,84,96,101,102,116,117,122,123,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,155,157,158,160,162,163,165,166,168,170,172,175,],[-16,-69,-67,-68,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-17,127,-89,-83,-54,-61,150,-51,-39,-82,157,-52,-53,-55,-56,-57,-58,-59,-60,-62,-63,-64,-65,-66,-87,-81,-80,-40,-84,-85,-50,-43,-86,-45,-48,-44,-47,-46,-49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'clases_funciones':([0,],[2,]),'clase_funcion':([0,2,],[3,14,]),'clase':([0,2,],[4,4,]),'funcion':([0,2,],[5,5,]),'tipo_funcion':([0,2,],[8,8,]),'bloqueClase':([16,],[18,]),'instrs_clase':([19,],[21,]),'instr':([19,21,],[23,36,]),'declaracion':([19,21,40,47,],[24,24,50,50,]),'tipo_dato':([19,20,21,34,40,42,47,82,],[25,33,25,44,58,33,58,121,]),'lista_parametros':([20,],[31,]),'parametro':([20,42,],[32,63,]),'bloque':([30,41,156,164,169,174,],[39,62,162,168,172,175,]),'instrucciones':([40,],[47,]),'instruccion':([40,47,],[48,85,]),'print_inst':([40,47,],[49,49,]),'declaracion_objeto':([40,47,],[51,51,]),'declaracion_arreglo':([40,47,],[52,52,]),'llamada':([40,45,47,60,67,68,69,83,93,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[53,75,53,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'return_inst':([40,47,],[54,54,]),'if_instr':([40,45,47,60,67,68,69,83,93,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[55,81,55,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'expresion':([45,60,67,68,69,83,93,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[66,99,116,117,118,123,124,123,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,154,123,160,161,173,]),'acceso_objeto_expresion':([45,60,67,68,69,83,93,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'acceso_array_expresion':([45,60,67,68,69,83,93,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'instancia_objeto':([45,60,67,68,69,83,93,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'array_data':([45,60,67,68,69,83,93,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'array_instancia':([45,60,67,68,69,83,93,98,100,103,104,105,106,107,108,109,110,111,112,113,114,115,119,128,148,151,153,171,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'niveles':([58,],[94,]),'nivel':([58,94,],[95,126,]),'dimensiones':([65,121,],[101,149,]),'dimension':([65,101,121,149,],[102,132,102,132,]),'lista_expresiones':([83,98,148,],[122,130,159,]),'listaelseif':([162,],[165,]),'else_if':([162,165,],[166,170,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> clases_funciones','init',1,'p_init','gramatica.py',183),
  ('clases_funciones -> clases_funciones clase_funcion','clases_funciones',2,'p_clases_funciones','gramatica.py',189),
  ('clases_funciones -> clase_funcion','clases_funciones',1,'p_clases_funciones_corte','gramatica.py',195),
  ('clase_funcion -> clase','clase_funcion',1,'p_clase_funcion','gramatica.py',200),
  ('clase_funcion -> funcion','clase_funcion',1,'p_clase_funcion','gramatica.py',201),
  ('clase_funcion -> error LLAVEDER','clase_funcion',2,'p_clase_funcion_error','gramatica.py',205),
  ('clase -> CLASS ID bloqueClase','clase',3,'p_clase','gramatica.py',211),
  ('bloqueClase -> LLAVEIZQ instrs_clase LLAVEDER','bloqueClase',3,'p_bloque_clase','gramatica.py',216),
  ('bloqueClase -> LLAVEIZQ LLAVEDER','bloqueClase',2,'p_bloque_clase','gramatica.py',217),
  ('funcion -> tipo_funcion ID PIZQ PDER bloque','funcion',5,'p_funcion','gramatica.py',225),
  ('funcion -> tipo_funcion ID PIZQ lista_parametros PDER bloque','funcion',6,'p_funcion','gramatica.py',226),
  ('lista_parametros -> lista_parametros COMA parametro','lista_parametros',3,'p_lista_parametros','gramatica.py',237),
  ('lista_parametros -> parametro','lista_parametros',1,'p_lista_parametros_corte','gramatica.py',243),
  ('parametro -> tipo_dato ID','parametro',2,'p_parametro','gramatica.py',248),
  ('parametro -> MULTIPLICACION tipo_dato ID','parametro',3,'p_parametro','gramatica.py',249),
  ('bloque -> LLAVEIZQ LLAVEDER','bloque',2,'p_bloque','gramatica.py',262),
  ('bloque -> LLAVEIZQ instrucciones LLAVEDER','bloque',3,'p_bloque','gramatica.py',263),
  ('instrs_clase -> instrs_clase instr','instrs_clase',2,'p_instrs_clase','gramatica.py',273),
  ('instrs_clase -> instr','instrs_clase',1,'p_instrs_clase_corte','gramatica.py',279),
  ('instr -> declaracion PTCOMA','instr',2,'p_instr','gramatica.py',284),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',291),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',298),
  ('instruccion -> print_inst PTCOMA','instruccion',2,'p_instruccion','gramatica.py',303),
  ('instruccion -> declaracion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',304),
  ('instruccion -> declaracion_objeto PTCOMA','instruccion',2,'p_instruccion','gramatica.py',305),
  ('instruccion -> declaracion_arreglo PTCOMA','instruccion',2,'p_instruccion','gramatica.py',306),
  ('instruccion -> llamada PTCOMA','instruccion',2,'p_instruccion','gramatica.py',307),
  ('instruccion -> return_inst PTCOMA','instruccion',2,'p_instruccion','gramatica.py',308),
  ('instruccion -> if_instr','instruccion',1,'p_instruccion','gramatica.py',309),
  ('instruccion -> error PTCOMA','instruccion',2,'p_error_sintaxis','gramatica.py',314),
  ('declaracion -> tipo_dato ID IGUAL expresion','declaracion',4,'p_declaracion','gramatica.py',322),
  ('declaracion -> tipo_dato ID','declaracion',2,'p_declaracion','gramatica.py',323),
  ('declaracion_arreglo -> tipo_dato niveles ID IGUAL expresion','declaracion_arreglo',5,'p_declaracion_arreglo','gramatica.py',334),
  ('niveles -> niveles nivel','niveles',2,'p_niveles','gramatica.py',339),
  ('niveles -> nivel','niveles',1,'p_niveles_corte','gramatica.py',344),
  ('nivel -> CORIZQ CORDER','nivel',2,'p_nivel','gramatica.py',348),
  ('declaracion_objeto -> ID ID IGUAL expresion','declaracion_objeto',4,'p_declaracion_objeto','gramatica.py',353),
  ('print_inst -> PRINT PIZQ expresion PDER','print_inst',4,'p_print','gramatica.py',360),
  ('llamada -> ID PIZQ PDER','llamada',3,'p_llamada','gramatica.py',367),
  ('llamada -> ID PIZQ lista_expresiones PDER','llamada',4,'p_llamada','gramatica.py',368),
  ('return_inst -> RETURN_W','return_inst',1,'p_return_instr','gramatica.py',378),
  ('return_inst -> RETURN_W expresion','return_inst',2,'p_return_instr','gramatica.py',379),
  ('if_instr -> IF_W PIZQ expresion PDER bloque','if_instr',5,'p_if_instr','gramatica.py',389),
  ('if_instr -> IF_W PIZQ expresion PDER bloque ELSE_W bloque','if_instr',7,'p_if_instr','gramatica.py',390),
  ('if_instr -> IF_W PIZQ expresion PDER bloque listaelseif','if_instr',6,'p_if_instr','gramatica.py',391),
  ('if_instr -> IF_W PIZQ expresion PDER bloque listaelseif ELSE_W bloque','if_instr',8,'p_if_instr','gramatica.py',392),
  ('listaelseif -> listaelseif else_if','listaelseif',2,'p_lista_else_if','gramatica.py',405),
  ('listaelseif -> else_if','listaelseif',1,'p_lista_else_if_corte','gramatica.py',411),
  ('else_if -> ELSE_W IF_W PIZQ expresion PDER bloque','else_if',6,'p_else_if','gramatica.py',416),
  ('lista_expresiones -> lista_expresiones COMA expresion','lista_expresiones',3,'p_lista_expresiones','gramatica.py',422),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_lista_expresiones_corte','gramatica.py',428),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica','gramatica.py',435),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica','gramatica.py',436),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_logica','gramatica.py',437),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_relacional','gramatica.py',446),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_relacional','gramatica.py',447),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',448),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',449),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_relacional','gramatica.py',450),
  ('expresion -> expresion IGUALIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',451),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_aritmetica','gramatica.py',468),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',469),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',470),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',471),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',472),
  ('expresion -> PIZQ expresion PDER','expresion',3,'p_expresion_aritmetica','gramatica.py',473),
  ('expresion -> ENTERO','expresion',1,'p_expresion_primitiva','gramatica.py',487),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_primitiva','gramatica.py',488),
  ('expresion -> ID','expresion',1,'p_expresion_primitiva','gramatica.py',489),
  ('expresion -> CADENA','expresion',1,'p_expresion_primitiva','gramatica.py',490),
  ('expresion -> TRUE','expresion',1,'p_expresion_primitiva','gramatica.py',491),
  ('expresion -> FALSE','expresion',1,'p_expresion_primitiva','gramatica.py',492),
  ('expresion -> llamada','expresion',1,'p_otras_expresiones','gramatica.py',509),
  ('expresion -> acceso_objeto_expresion','expresion',1,'p_otras_expresiones','gramatica.py',510),
  ('expresion -> acceso_array_expresion','expresion',1,'p_otras_expresiones','gramatica.py',511),
  ('expresion -> instancia_objeto','expresion',1,'p_otras_expresiones','gramatica.py',512),
  ('expresion -> array_data','expresion',1,'p_otras_expresiones','gramatica.py',513),
  ('expresion -> array_instancia','expresion',1,'p_otras_expresiones','gramatica.py',514),
  ('expresion -> if_instr','expresion',1,'p_otras_expresiones','gramatica.py',515),
  ('array_data -> CORIZQ lista_expresiones CORDER','array_data',3,'p_array_data','gramatica.py',525),
  ('array_instancia -> NEW tipo_dato dimensiones','array_instancia',3,'p_array_instancia','gramatica.py',530),
  ('dimensiones -> dimensiones dimension','dimensiones',2,'p_dimensiones','gramatica.py',534),
  ('dimensiones -> dimension','dimensiones',1,'p_dimensiones_corte','gramatica.py',540),
  ('dimension -> CORIZQ expresion CORDER','dimension',3,'p_dimension','gramatica.py',544),
  ('instancia_objeto -> NEW ID PIZQ PDER','instancia_objeto',4,'p_instancia_objeto','gramatica.py',549),
  ('instancia_objeto -> NEW ID PIZQ lista_expresiones PDER','instancia_objeto',5,'p_instancia_objeto','gramatica.py',550),
  ('acceso_objeto_expresion -> acceso_objeto_expresion PUNTO expresion','acceso_objeto_expresion',3,'p_acceso_objeto','gramatica.py',561),
  ('acceso_objeto_expresion -> expresion','acceso_objeto_expresion',1,'p_acceso_objeto_cort','gramatica.py',567),
  ('acceso_array_expresion -> ID dimensiones','acceso_array_expresion',2,'p_acceso_array','gramatica.py',572),
  ('tipo_funcion -> INT','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',583),
  ('tipo_funcion -> STRING_TYPE','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',584),
  ('tipo_funcion -> BOOLEAN','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',585),
  ('tipo_funcion -> VOID','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',586),
  ('tipo_funcion -> FLOAT','tipo_funcion',1,'p_tipo_retorno_funcion','gramatica.py',587),
  ('tipo_dato -> INT','tipo_dato',1,'p_tipo_dato','gramatica.py',602),
  ('tipo_dato -> STRING_TYPE','tipo_dato',1,'p_tipo_dato','gramatica.py',603),
  ('tipo_dato -> BOOLEAN','tipo_dato',1,'p_tipo_dato','gramatica.py',604),
  ('tipo_dato -> FLOAT','tipo_dato',1,'p_tipo_dato','gramatica.py',605),
]
